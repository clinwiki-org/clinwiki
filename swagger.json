{
    "info": {
        "termsOfService": "", 
        "version": "1", 
        "description": "", 
        "title": "Elastic Cloud API"
    }, 
    "paths": {
        "/deployments/{deployment_id}/elasticsearch/{ref_id}/_shutdown": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Standard response.", 
                        "schema": {
                            "$ref": "#/definitions/DeploymentResourceCommandResponse"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_not_found", 
                                    "deployments.deployment_resource_not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "500": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_resource_no_longer_exists"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "400": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.restricted_parameter"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Parameter is restricted and can only be set by a Platform administrator. (code: `deployments.restricted_parameter`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Identifier for the Deployment.", 
                        "required": true, 
                        "type": "string", 
                        "name": "deployment_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "User-specified RefId for the Resource.", 
                        "required": true, 
                        "type": "string", 
                        "name": "ref_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "Hide cluster on shutdown. Hidden clusters are not listed by default. Only applicable for Platform administrators.", 
                        "required": false, 
                        "type": "boolean", 
                        "name": "hide", 
                        "in": "query"
                    }, 
                    {
                        "description": "If true, will skip taking a snapshot of the cluster before shutting the cluster down (if even possible).", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "skip_snapshot"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "description": "Shutdown Elasticsearch Resource belonging to a given Deployment.", 
                "x-doc": {
                    "tag": "Deployment - Commands"
                }, 
                "summary": "Shutdown Deployment Elasticsearch Resource", 
                "operationId": "shutdown-deployment-es-resource"
            }
        }, 
        "/deployments/{deployment_id}/{resource_kind}/{ref_id}/instances/_start": {
            "post": {
                "responses": {
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_not_found", 
                                    "deployments.deployment_resource_not_found", 
                                    "deployments.instances_missing_on_update_error"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "449": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "root.unauthorized.rbac.elevated_permissions_required"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "202": {
                        "description": "The start command was issued successfully.", 
                        "schema": {
                            "$ref": "#/definitions/DeploymentResourceCommandResponse"
                        }
                    }, 
                    "403": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.instance_update_prohibited_error"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The start maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "500": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_resource_no_longer_exists"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Identifier for the Deployment.", 
                        "required": true, 
                        "type": "string", 
                        "name": "deployment_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "The kind of resource (one of elasticsearch, kibana or apm).", 
                        "required": true, 
                        "type": "string", 
                        "name": "resource_kind", 
                        "in": "path"
                    }, 
                    {
                        "description": "User-specified RefId for the Resource.", 
                        "required": true, 
                        "type": "string", 
                        "name": "ref_id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "description": "Starts all instances belonging to a Deployment Resource.", 
                "x-doc": {
                    "tag": "Deployment - Commands"
                }, 
                "summary": "Start all instances", 
                "operationId": "start-deployment-resource-instances-all"
            }
        }, 
        "/stack/versions": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The list of all available Elastic Stack versions are retrieved, including the template version and structure.", 
                        "schema": {
                            "$ref": "#/definitions/StackVersionConfigs"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Whether to show deleted stack versions or not", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_deleted"
                    }, 
                    {
                        "description": "Whether to show versions that are unusable by the authenticated user", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_unusable"
                    }
                ], 
                "tags": [
                    "Stack"
                ], 
                "description": "By default, retrieves only the available Elastic Stack versions. To retrieve all of the Elastic Stack versions, use the `show_deleted parameter`.", 
                "x-doc": {
                    "tag": "Stack - Versions - CRUD"
                }, 
                "summary": "Get stack versions", 
                "operationId": "get-version-stacks"
            }
        }, 
        "/deployments/{deployment_id}/{resource_kind}/{ref_id}/_restore": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Standard Deployment Resource Crud Response", 
                        "schema": {
                            "$ref": "#/definitions/DeploymentResourceCrudResponse"
                        }
                    }, 
                    "449": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "root.unauthorized.rbac.elevated_permissions_required"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "400": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.resource_does_not_have_a_pending_plan", 
                                    "deployments.resource_not_shutdown"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "* The Resource does not have a pending plan. (code: `deployments.resource_does_not_have_a_pending_plan`)\n* The resource is not shut down. (code: `deployments.resource_not_shutdown`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Identifier for the Deployment", 
                        "required": true, 
                        "type": "string", 
                        "name": "deployment_id", 
                        "in": "path"
                    }, 
                    {
                        "enum": [
                            "elasticsearch", 
                            "kibana", 
                            "apm", 
                            "appsearch", 
                            "enterprise_search"
                        ], 
                        "description": "The kind of resource", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "resource_kind"
                    }, 
                    {
                        "description": "User-specified RefId for the Resource", 
                        "required": true, 
                        "type": "string", 
                        "name": "ref_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "Whether or not to restore a snapshot for those resources that allow it.", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "restore_snapshot"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "description": "Restores a shutdown resource belonging to a given Deployment.", 
                "x-doc": {
                    "tag": "Deployment Resources - CRUD"
                }, 
                "summary": "Restores a shutdown resource", 
                "operationId": "restore-deployment-resource"
            }
        }, 
        "/deployments/{deployment_id}/_restore": {
            "post": {
                "responses": {
                    "200": {
                        "description": "The request was valid and the resources of the deployment were restored.", 
                        "schema": {
                            "$ref": "#/definitions/DeploymentRestoreResponse"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "401": {
                        "description": "You are not authorized to perform this action.", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "400": {
                        "description": "There are Elasticsearch resources in the deployment which are not shut down.", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Identifier for the Deployment", 
                        "required": true, 
                        "type": "string", 
                        "name": "deployment_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "Whether or not to restore a snapshot for those resources that allow it.", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "restore_snapshot"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "description": "Restores all resources in a Deployment.", 
                "x-doc": {
                    "tag": "Deployment - CRUD"
                }, 
                "summary": "Restores a shutdown Deployment", 
                "operationId": "restore-deployment"
            }
        }, 
        "/deployments/templates": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The deployment templates were returned successfully.", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/DeploymentTemplateInfoV2"
                            }, 
                            "type": "array"
                        }
                    }, 
                    "401": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "templates.region_not_allowed"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The user is not authorized to access requested region. (code: `templates.region_not_allowed`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "400": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "templates.region_not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The requested region was not found. (code: `templates.region_not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "An optional key/value pair in the form of (key:value) that will act as a filter and exclude any templates that do not have a matching metadata item associated.", 
                        "required": false, 
                        "type": "string", 
                        "name": "metadata", 
                        "in": "query"
                    }, 
                    {
                        "description": "If present, it will cause the returned deployment templates to be adapted to return only the elements allowed in that version.", 
                        "required": false, 
                        "type": "string", 
                        "name": "stack_version", 
                        "in": "query"
                    }, 
                    {
                        "description": "Region of the deployment templates", 
                        "required": true, 
                        "type": "string", 
                        "name": "region", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "DeploymentTemplates"
                ], 
                "description": "Retrieves all deployment templates.", 
                "x-doc": {
                    "tag": "Deployments - Templates"
                }, 
                "summary": "Get deployment templates", 
                "operationId": "get-deployment-templates-v2"
            }
        }, 
        "/users/auth/keys/{api_key_id}": {
            "delete": {
                "responses": {
                    "200": {
                        "description": "The API key is deleted.", 
                        "schema": {
                            "$ref": "#/definitions/EmptyResponse"
                        }
                    }, 
                    "449": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "root.unauthorized.rbac.elevated_permissions_required"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "api_keys.key_not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The {api_key_id} can't be found. (code: `api_keys.key_not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The API Key ID.", 
                        "required": true, 
                        "type": "string", 
                        "name": "api_key_id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "Authentication"
                ], 
                "description": "Delete or invalidate the API key.", 
                "x-doc": {
                    "tag": "Authentication"
                }, 
                "summary": "Delete API key", 
                "operationId": "delete-api-key"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "The API key metadata is retrieved.", 
                        "schema": {
                            "$ref": "#/definitions/ApiKeyResponse"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "api_keys.key_not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The {api_key_id} can't be found. (code: `api_keys.key_not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The API Key ID.", 
                        "required": true, 
                        "type": "string", 
                        "name": "api_key_id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "Authentication"
                ], 
                "description": "Retrieves the metadata for an API key.", 
                "x-doc": {
                    "tag": "Authentication"
                }, 
                "summary": "Get API key", 
                "operationId": "get-api-key"
            }
        }, 
        "/account": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Account updated successfully", 
                        "schema": {
                            "$ref": "#/definitions/AccountResponse"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "accounts.not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Account not found. (code: `accounts.not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "description": "Updates the current account.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/AccountUpdateRequest"
                        }, 
                        "description": "the current account", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "Accounts"
                ], 
                "x-doc": {
                    "tag": "Accounts"
                }, 
                "summary": "Updates the current account", 
                "consumes": [
                    "application/json"
                ], 
                "operationId": "update-current-account"
            }, 
            "patch": {
                "responses": {
                    "200": {
                        "description": "Account updated successfully", 
                        "schema": {
                            "$ref": "#/definitions/AccountResponse"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "accounts.not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Account not found. (code: `accounts.not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "description": "Updates the current account.", 
                "parameters": [
                    {
                        "schema": {
                            "type": "string"
                        }, 
                        "description": "All changes in the specified object are applied to the current account according to the JSON Merge Patch processing rules. Omitting existing fields causes the same values to be reapplied. Specifying a `null` value reverts the field to the default value, or removes the field when no default value exists.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "Accounts"
                ], 
                "x-doc": {
                    "tag": "Accounts"
                }, 
                "summary": "Updates the current account", 
                "consumes": [
                    "application/json"
                ], 
                "operationId": "patch-current-account"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "Account fetched successfully", 
                        "schema": {
                            "$ref": "#/definitions/AccountResponse"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "accounts.not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Account not found. (code: `accounts.not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [], 
                "tags": [
                    "Accounts"
                ], 
                "description": "Fetch current account information.", 
                "x-doc": {
                    "tag": "Accounts"
                }, 
                "summary": "Fetch current account information", 
                "operationId": "get-current-account"
            }
        }, 
        "/deployments/{deployment_id}/elasticsearch/{ref_id}/remote-clusters": {
            "put": {
                "responses": {
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_not_found", 
                                    "deployments.deployment_resource_not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "449": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "root.unauthorized.rbac.elevated_permissions_required"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "202": {
                        "description": "The Remote Clusters were updated", 
                        "schema": {
                            "$ref": "#/definitions/EmptyResponse"
                        }
                    }
                }, 
                "description": "Overwrites or creates the remote clusters for the elasticsearch resource.", 
                "parameters": [
                    {
                        "description": "Identifier for the Deployment.", 
                        "required": true, 
                        "type": "string", 
                        "name": "deployment_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "User-specified RefId for the Resource.", 
                        "required": true, 
                        "type": "string", 
                        "name": "ref_id", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/RemoteResources"
                        }, 
                        "description": "List of remote clusters for the resource", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "x-doc": {
                    "tag": "Deployment - Remote Clusters"
                }, 
                "summary": "Set remote clusters", 
                "consumes": [
                    "application/json"
                ], 
                "operationId": "set-deployment-es-resource-remote-clusters"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "List of remote clusters for the resource", 
                        "schema": {
                            "$ref": "#/definitions/RemoteResources"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_not_found", 
                                    "deployments.deployment_resource_not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Identifier for the Deployment.", 
                        "required": true, 
                        "type": "string", 
                        "name": "deployment_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "User-specified RefId for the Resource.", 
                        "required": true, 
                        "type": "string", 
                        "name": "ref_id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "description": "Returns the list of remote clusters for the elasticsearch resource.", 
                "x-doc": {
                    "tag": "Deployment - Remote Clusters"
                }, 
                "summary": "Get remote clusters", 
                "operationId": "get-deployment-es-resource-remote-clusters"
            }
        }, 
        "/deployments/{deployment_id}/{resource_kind}/{ref_id}/instances/{instance_ids}/_stop": {
            "post": {
                "responses": {
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_not_found", 
                                    "deployments.deployment_resource_not_found", 
                                    "deployments.instances_missing_on_update_error"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "449": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "root.unauthorized.rbac.elevated_permissions_required"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "202": {
                        "description": "The stop command was issued successfully.", 
                        "schema": {
                            "$ref": "#/definitions/DeploymentResourceCommandResponse"
                        }
                    }, 
                    "403": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.instance_update_prohibited_error"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The start maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "500": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_resource_no_longer_exists"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Identifier for the Deployment.", 
                        "required": true, 
                        "type": "string", 
                        "name": "deployment_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "The kind of resource (one of elasticsearch, kibana or apm).", 
                        "required": true, 
                        "type": "string", 
                        "name": "resource_kind", 
                        "in": "path"
                    }, 
                    {
                        "description": "User-specified RefId for the Resource.", 
                        "required": true, 
                        "type": "string", 
                        "name": "ref_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "A comma-separated list of instance identifiers.", 
                        "items": {
                            "type": "string"
                        }, 
                        "required": true, 
                        "collectionFormat": "csv", 
                        "in": "path", 
                        "type": "array", 
                        "name": "instance_ids"
                    }, 
                    {
                        "description": "If true and the instance does not exist then quietly proceed to the next instance, otherwise treated as an error.", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "ignore_missing"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "description": "Stops instances belonging to a Deployment Resource.", 
                "x-doc": {
                    "tag": "Deployment - Commands"
                }, 
                "summary": "Stop instances", 
                "operationId": "stop-deployment-resource-instances"
            }
        }, 
        "/deployments/templates/{template_id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The deployment template was found and returned successfully.", 
                        "schema": {
                            "$ref": "#/definitions/DeploymentTemplateInfoV2"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "templates.template_not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The deployment template specified by {template_id} cannot be found. (code: `templates.template_not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "401": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "templates.region_not_allowed"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The user is not authorized to access requested region. (code: `templates.region_not_allowed`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "400": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "templates.region_not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The requested region is not supported. (code: `templates.region_not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The identifier for the deployment template.", 
                        "required": true, 
                        "type": "string", 
                        "name": "template_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "If present, it will cause the returned deployment template to be adapted to return only the elements allowed in that version.", 
                        "required": false, 
                        "type": "string", 
                        "name": "stack_version", 
                        "in": "query"
                    }, 
                    {
                        "description": "Region of the deployment template", 
                        "required": true, 
                        "type": "string", 
                        "name": "region", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "DeploymentTemplates"
                ], 
                "description": "Retrieves a deployment template by id.", 
                "x-doc": {
                    "tag": "Deployments - Templates"
                }, 
                "summary": "Get deployment template", 
                "operationId": "get-deployment-template-v2"
            }
        }, 
        "/deployments/{deployment_id}/apm/{ref_id}/_reset-token": {
            "post": {
                "responses": {
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_not_found", 
                                    "deployments.deployment_resource_not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "449": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "root.unauthorized.rbac.elevated_permissions_required"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "202": {
                        "description": "Response containing the new secret token, plan to apply it starts", 
                        "schema": {
                            "$ref": "#/definitions/ApmCrudResponse"
                        }
                    }, 
                    "500": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_resource_no_longer_exists"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Identifier for the Deployment.", 
                        "required": true, 
                        "type": "string", 
                        "name": "deployment_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "User-specified RefId for the Resource.", 
                        "required": true, 
                        "type": "string", 
                        "name": "ref_id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "description": "Reset the token of an APM resource.", 
                "x-doc": {
                    "tag": "APM routes"
                }, 
                "summary": "Reset the secret token for an APM resource.", 
                "operationId": "deployment-apm-reset-secret-token"
            }
        }, 
        "/deployments/{deployment_id}/enterprise_search/{ref_id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Standard response.", 
                        "schema": {
                            "$ref": "#/definitions/EnterpriseSearchResourceInfo"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "500": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_resource_no_longer_exists"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Identifier for the Deployment", 
                        "required": true, 
                        "type": "string", 
                        "name": "deployment_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "User-specified RefId for the Resource", 
                        "required": true, 
                        "type": "string", 
                        "name": "ref_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "Whether to include the full cluster metadata in the response - can be large per cluster and also include credentials.", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_metadata"
                    }, 
                    {
                        "description": "Whether to include the full current and pending plan information in the response - can be large per cluster.", 
                        "default": true, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_plans"
                    }, 
                    {
                        "description": "Whether to include with the current and pending plan information the attempt log - can be very large per cluster.", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_plan_logs"
                    }, 
                    {
                        "description": "Whether to include with the current and pending plan information the plan history- can be very large per cluster.", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_plan_history"
                    }, 
                    {
                        "description": "If showing plans, whether to show values that are left at their default value (less readable but more informative).", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_plan_defaults"
                    }, 
                    {
                        "description": "Whether to show cluster settings in the response.", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_settings"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "description": "Get info about an Enterprise Search Resource belonging to a given Deployment.", 
                "x-doc": {
                    "tag": "Deployment - Info"
                }, 
                "summary": "Get Deployment Enterprise Search Resource Info", 
                "operationId": "get-deployment-enterprise-search-resource-info"
            }
        }, 
        "/deployments/{deployment_id}/kibana/{ref_id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Standard response.", 
                        "schema": {
                            "$ref": "#/definitions/KibanaResourceInfo"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "500": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_resource_no_longer_exists"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Identifier for the Deployment", 
                        "required": true, 
                        "type": "string", 
                        "name": "deployment_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "User-specified RefId for the Resource", 
                        "required": true, 
                        "type": "string", 
                        "name": "ref_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "Whether to include the full cluster metadata in the response - can be large per cluster and also include credentials.", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_metadata"
                    }, 
                    {
                        "description": "Whether to include the full current and pending plan information in the response - can be large per cluster.", 
                        "default": true, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_plans"
                    }, 
                    {
                        "description": "Whether to include with the current and pending plan information the attempt log - can be very large per cluster.", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_plan_logs"
                    }, 
                    {
                        "description": "Whether to include with the current and pending plan information the plan history- can be very large per cluster.", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_plan_history"
                    }, 
                    {
                        "description": "If showing plans, whether to show values that are left at their default value (less readable but more informative).", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_plan_defaults"
                    }, 
                    {
                        "description": "If showing plans, whether to leave pre-2.0.0 plans in their legacy format (the default), or whether to update them to 2.0.x+ format (if 'true').", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "convert_legacy_plans"
                    }, 
                    {
                        "description": "Whether to show cluster settings in the response.", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_settings"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "description": "Get info about a Kibana Resource belonging to a given Deployment.", 
                "x-doc": {
                    "tag": "Deployment - Info"
                }, 
                "summary": "Get Deployment Kibana Resource Info", 
                "operationId": "get-deployment-kib-resource-info"
            }
        }, 
        "/deployments/{deployment_id}/appsearch/{ref_id}/read_only_mode": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Standard response", 
                        "schema": {
                            "$ref": "#/definitions/ReadOnlyResponse"
                        }
                    }, 
                    "449": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "root.unauthorized.rbac.elevated_permissions_required"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_resource_not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The Resource specified by ref_id cannot be found. (code: `deployments.deployment_resource_not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "500": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_resource_no_longer_exists"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "description": "Enable/Disable read-only mode on the given App Search resource.", 
                "parameters": [
                    {
                        "description": "Identifier for the Deployment.", 
                        "required": true, 
                        "type": "string", 
                        "name": "deployment_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "User-specified RefId for the Resource.", 
                        "required": true, 
                        "type": "string", 
                        "name": "ref_id", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ReadOnlyRequest"
                        }, 
                        "description": "read-only request body", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "x-doc": {
                    "tag": "App Search - Read-only"
                }, 
                "summary": "Set AppSearch read-only status", 
                "consumes": [
                    "application/json"
                ], 
                "operationId": "set-appsearch-read-only-mode"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "Standard response", 
                        "schema": {
                            "$ref": "#/definitions/ReadOnlyResponse"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_resource_not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The Resource specified by ref_id cannot be found. (code: `deployments.deployment_resource_not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "500": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_resource_no_longer_exists"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Identifier for the Deployment.", 
                        "required": true, 
                        "type": "string", 
                        "name": "deployment_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "User-specified RefId for the Resource.", 
                        "required": true, 
                        "type": "string", 
                        "name": "ref_id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "description": "Enable/Disable read-only mode on the given App Search resource.", 
                "x-doc": {
                    "tag": "App Search - Read-only"
                }, 
                "summary": "Set AppSearch read-only status", 
                "operationId": "get-appsearch-read-only-mode"
            }
        }, 
        "/deployments/{deployment_id}/{resource_kind}/{ref_id}/instances/{instance_ids}/_start": {
            "post": {
                "responses": {
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_not_found", 
                                    "deployments.deployment_resource_not_found", 
                                    "deployments.instances_missing_on_update_error"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "449": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "root.unauthorized.rbac.elevated_permissions_required"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "202": {
                        "description": "The start command was issued successfully.", 
                        "schema": {
                            "$ref": "#/definitions/DeploymentResourceCommandResponse"
                        }
                    }, 
                    "403": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.instance_update_prohibited_error"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The start maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "500": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_resource_no_longer_exists"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Identifier for the Deployment.", 
                        "required": true, 
                        "type": "string", 
                        "name": "deployment_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "The kind of resource (one of elasticsearch, kibana or apm).", 
                        "required": true, 
                        "type": "string", 
                        "name": "resource_kind", 
                        "in": "path"
                    }, 
                    {
                        "description": "User-specified RefId for the Resource.", 
                        "required": true, 
                        "type": "string", 
                        "name": "ref_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "A comma-separated list of instance identifiers.", 
                        "items": {
                            "type": "string"
                        }, 
                        "required": true, 
                        "collectionFormat": "csv", 
                        "in": "path", 
                        "type": "array", 
                        "name": "instance_ids"
                    }, 
                    {
                        "description": "If true and the instance does not exist then quietly proceed to the next instance, otherwise treated as an error", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "ignore_missing"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "description": "Starts instances belonging to a Deployment Resource.", 
                "x-doc": {
                    "tag": "Deployment - Commands"
                }, 
                "summary": "Start instances", 
                "operationId": "start-deployment-resource-instances"
            }
        }, 
        "/deployments/{deployment_id}/_shutdown": {
            "post": {
                "responses": {
                    "200": {
                        "description": "The request was valid and the resources of the deployment were shutdown.", 
                        "schema": {
                            "$ref": "#/definitions/DeploymentShutdownResponse"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "401": {
                        "description": "You are not authorized to perform this action.", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "400": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.restricted_parameter"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Parameter is restricted and can only be set by a Platform administrator. (code: `deployments.restricted_parameter`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Identifier for the Deployment", 
                        "required": true, 
                        "type": "string", 
                        "name": "deployment_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "Whether or not to hide the deployment and its resources.Only applicable for Platform administrators.", 
                        "required": false, 
                        "type": "boolean", 
                        "name": "hide", 
                        "in": "query"
                    }, 
                    {
                        "description": "Whether or not to skip snapshots before shutting down the resources", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "skip_snapshot"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "description": "Shuts down all resources in a Deployment.", 
                "x-doc": {
                    "tag": "Deployment - CRUD"
                }, 
                "summary": "Shuts down Deployment", 
                "operationId": "shutdown-deployment"
            }
        }, 
        "/deployments/{deployment_id}/{resource_kind}/{ref_id}/instances/{instance_ids}/maintenance-mode/_start": {
            "post": {
                "responses": {
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_not_found", 
                                    "deployments.deployment_resource_not_found", 
                                    "deployments.instances_missing_on_update_error"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "449": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "root.unauthorized.rbac.elevated_permissions_required"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "202": {
                        "description": "The start maintenance command was issued successfully.", 
                        "schema": {
                            "$ref": "#/definitions/DeploymentResourceCommandResponse"
                        }
                    }, 
                    "403": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.instance_update_prohibited_error"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The start maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "500": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_resource_no_longer_exists"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Identifier for the Deployment.", 
                        "required": true, 
                        "type": "string", 
                        "name": "deployment_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "The kind of resource (one of elasticsearch, kibana or apm).", 
                        "required": true, 
                        "type": "string", 
                        "name": "resource_kind", 
                        "in": "path"
                    }, 
                    {
                        "description": "User-specified RefId for the Resource.", 
                        "required": true, 
                        "type": "string", 
                        "name": "ref_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "A comma-separated list of instance identifiers.", 
                        "items": {
                            "type": "string"
                        }, 
                        "required": true, 
                        "collectionFormat": "csv", 
                        "in": "path", 
                        "type": "array", 
                        "name": "instance_ids"
                    }, 
                    {
                        "description": "If true and the instance does not exist then quietly proceed to the next instance, otherwise treated as an error.", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "ignore_missing"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "description": "Starts maintenance mode of instances belonging to a Deployment Resource.", 
                "x-doc": {
                    "tag": "Deployment - Commands"
                }, 
                "summary": "Start maintenance mode", 
                "operationId": "start-deployment-resource-maintenance-mode"
            }
        }, 
        "/deployments/traffic-filter/rulesets/{ruleset_id}/associations/{association_type}/{associated_entity_id}": {
            "delete": {
                "responses": {
                    "200": {
                        "description": "Delete association request was valid and the association has been deleted", 
                        "schema": {
                            "$ref": "#/definitions/EmptyResponse"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "traffic_filter.not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The traffic filter ruleset association cannot be found. (code: `traffic_filter.not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "500": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "traffic_filter.request_execution_failed"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Deletion failed. (code: `traffic_filter.request_execution_failed`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The mandatory ruleset ID.", 
                        "required": true, 
                        "type": "string", 
                        "name": "ruleset_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "Association type", 
                        "required": true, 
                        "type": "string", 
                        "name": "association_type", 
                        "in": "path"
                    }, 
                    {
                        "description": "Associated entity ID", 
                        "required": true, 
                        "type": "string", 
                        "name": "associated_entity_id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "DeploymentsTrafficFilter"
                ], 
                "description": "Deletes the traffic rules in the ruleset from the deployment.", 
                "x-doc": {
                    "tag": "Deployments - Traffic Filter - Associations"
                }, 
                "summary": "Delete ruleset association", 
                "operationId": "delete-traffic-filter-ruleset-association"
            }
        }, 
        "/deployments/{deployment_id}/elasticsearch/{ref_id}/_restart": {
            "post": {
                "responses": {
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_not_found", 
                                    "deployments.deployment_resource_not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "449": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "root.unauthorized.rbac.elevated_permissions_required"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "202": {
                        "description": "The restart command was issued successfully.", 
                        "schema": {
                            "$ref": "#/definitions/DeploymentResourceCommandResponse"
                        }
                    }, 
                    "422": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_resource_plan_change_error"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The command sent to a Resource found the Resource in an illegal state, the error message gives more details. (code: `deployments.deployment_resource_plan_change_error`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "500": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_resource_no_longer_exists"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Identifier for the Deployment.", 
                        "required": true, 
                        "type": "string", 
                        "name": "deployment_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "User-specified RefId for the Resource.", 
                        "required": true, 
                        "type": "string", 
                        "name": "ref_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "When set to true and restoring from shutdown, then will restore the cluster from the last snapshot (if available).", 
                        "default": true, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "restore_snapshot"
                    }, 
                    {
                        "description": "If true, will not take a snapshot of the cluster before restarting.", 
                        "default": true, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "skip_snapshot"
                    }, 
                    {
                        "description": "If true, cancels any pending plans before restarting. If false and there are pending plans, returns an error.", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "cancel_pending"
                    }, 
                    {
                        "description": "Indicates the property or properties used to divide the list of instances to restart in groups. Valid options are: '\\_\\_all\\_\\_' (restart all at once), '\\_\\_zone\\_\\_' by logical zone, '\\_\\_name\\_\\_' one instance at a time, or a comma-separated list of attributes of the instances", 
                        "default": "__zone__", 
                        "required": false, 
                        "in": "query", 
                        "type": "string", 
                        "name": "group_attribute"
                    }, 
                    {
                        "description": "The time, in seconds, to wait for shards that show no progress of initializing, before rolling the next group (default: 10 minutes)", 
                        "default": 600, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "shard_init_wait_time"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "description": "Restarts an Elasticsearch Resource. If a Resource is active: this command re-applies the existing plan but applies a \"cluster_reboot\", which issues a restart command and waits for it to complete. If a Resource is inactive: this command starts it up with the most recent successful plan.", 
                "x-doc": {
                    "tag": "Deployment - Commands"
                }, 
                "summary": "Restart Deployment Elasticsearch Resource", 
                "operationId": "restart-deployment-es-resource"
            }
        }, 
        "/deployments/{deployment_id}/elasticsearch/{ref_id}/_enable-slm": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Standard response", 
                        "schema": {
                            "$ref": "#/definitions/DeploymentResourceCommandResponse"
                        }
                    }, 
                    "449": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "root.unauthorized.rbac.elevated_permissions_required"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_not_found", 
                                    "deployments.deployment_resource_not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "500": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_resource_no_longer_exists"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Identifier for the Deployment.", 
                        "required": true, 
                        "type": "string", 
                        "name": "deployment_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "User-specified RefId for the Resource.", 
                        "required": true, 
                        "type": "string", 
                        "name": "ref_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "When `true`, does not enable SLM but returns warnings if any applications may lose availability during SLM migration.", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "validate_only"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "description": "Migrates the specified Elasticsearch resource to use SLM.", 
                "x-doc": {
                    "tag": "Deployment - Commands"
                }, 
                "summary": "Migrate Elasticsearch resource to use SLM", 
                "operationId": "enable-deployment-resource-slm"
            }
        }, 
        "/deployments/extensions": {
            "post": {
                "responses": {
                    "201": {
                        "headers": {
                            "x-cloud-resource-last-modified": {
                                "type": "string", 
                                "description": "The date-time when the resource was last modified (ISO format relative to UTC)"
                            }, 
                            "x-cloud-resource-created": {
                                "type": "string", 
                                "description": "The date-time when the resource was created (ISO format relative to UTC)"
                            }, 
                            "x-cloud-resource-version": {
                                "type": "string", 
                                "description": "The resource version, which is used to avoid update conflicts with concurrent operations"
                            }
                        }, 
                        "description": "The extension that was just created.", 
                        "schema": {
                            "$ref": "#/definitions/Extension"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "extensions.no_user_id"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Your current session does not have a user id associated with it. (code: `extensions.no_user_id`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "409": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "extensions.id_already_exists"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "An extension already exists with the generated id. Please try again. (code: `extensions.id_already_exists`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "400": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "extensions.request_execution_failed"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Could not download the extension from the specified URL. (code: `extensions.request_execution_failed`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "description": "Creates the extension.\n The extensions API supports two types of usage patterns.\n A). Specify a `download_url`, http or https URL,  where the extension is currently hosted. This will result in extension being copied to elastic repository.\n B). Create only the extension metadata using the `POST` endpoint and then use `PUT` to upload the extension file. Leave the `download_url` unspecified in this case.\n", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CreateExtensionRequest"
                        }, 
                        "description": "the data that creates the extension", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "Extensions"
                ], 
                "x-doc": {
                    "tag": "Deployments - Extensions"
                }, 
                "summary": "Create an extension", 
                "consumes": [
                    "application/json"
                ], 
                "operationId": "create-extension"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "The extensions that are available", 
                        "schema": {
                            "$ref": "#/definitions/Extensions"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Include deployments referencing this extension.\nDEPRECATED: To get the list of deployments that reference an extension, use the Get Extension API.\n", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "include_deployments"
                    }
                ], 
                "tags": [
                    "Extensions"
                ], 
                "description": "Retrieves all of the available extensions.", 
                "x-doc": {
                    "tag": "Deployments - Extensions"
                }, 
                "summary": "List Extensions", 
                "operationId": "list-extensions"
            }
        }, 
        "/deployments/{deployment_id}/elasticsearch/{ref_id}/_enable-ccr": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Standard response", 
                        "schema": {
                            "$ref": "#/definitions/DeploymentResourceCommandResponse"
                        }
                    }, 
                    "449": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "root.unauthorized.rbac.elevated_permissions_required"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_not_found", 
                                    "deployments.deployment_resource_not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Identifier for the Deployment.", 
                        "required": true, 
                        "type": "string", 
                        "name": "deployment_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "User-specified RefId for the Resource.", 
                        "required": true, 
                        "type": "string", 
                        "name": "ref_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "When `true`, will not enable CCR but returns warnings if any elements may lose availability during CCR enablement", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "validate_only"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "description": "Migrates the specified Elasticsearch resource and its associated Kibana to enable CCR (if supported).", 
                "x-doc": {
                    "tag": "Deployment - Commands"
                }, 
                "summary": "Migrate Elasticsearch and associated Kibana resources to enable CCR", 
                "operationId": "enable-deployment-resource-ccr"
            }
        }, 
        "/deployments/{deployment_id}/elasticsearch/{ref_id}/_reset-password": {
            "post": {
                "responses": {
                    "200": {
                        "description": "The password reset was out carried successfully", 
                        "schema": {
                            "$ref": "#/definitions/ElasticsearchElasticUserPasswordResetResponse"
                        }
                    }, 
                    "449": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "root.unauthorized.rbac.elevated_permissions_required"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_not_found", 
                                    "deployments.deployment_resource_not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "500": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.elasticsearch.password_reset_error"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Failed to reset the 'elastic' user's password. (code: `deployments.elasticsearch.password_reset_error`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Identifier for the Deployment.", 
                        "required": true, 
                        "type": "string", 
                        "name": "deployment_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "User-specified RefId for the Resource.", 
                        "required": true, 
                        "type": "string", 
                        "name": "ref_id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "description": "Resets the password of the 'elastic' user.", 
                "x-doc": {
                    "tag": "Deployment - Commands"
                }, 
                "summary": "Reset 'elastic' user password", 
                "operationId": "reset-elasticsearch-user-password"
            }
        }, 
        "/deployments/{deployment_id}/{resource_kind}/{ref_id}/instances/_stop": {
            "post": {
                "responses": {
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_not_found", 
                                    "deployments.deployment_resource_not_found", 
                                    "deployments.instances_missing_on_update_error"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "449": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "root.unauthorized.rbac.elevated_permissions_required"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "202": {
                        "description": "The stop command was issued successfully.", 
                        "schema": {
                            "$ref": "#/definitions/DeploymentResourceCommandResponse"
                        }
                    }, 
                    "403": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.instance_update_prohibited_error"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The stop maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "500": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_resource_no_longer_exists"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Identifier for the Deployment.", 
                        "required": true, 
                        "type": "string", 
                        "name": "deployment_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "The kind of resource (one of elasticsearch, kibana or apm).", 
                        "required": true, 
                        "type": "string", 
                        "name": "resource_kind", 
                        "in": "path"
                    }, 
                    {
                        "description": "User-specified RefId for the Resource.", 
                        "required": true, 
                        "type": "string", 
                        "name": "ref_id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "description": "Stops all instances belonging to a Deployment Resource.", 
                "x-doc": {
                    "tag": "Deployment - Commands"
                }, 
                "summary": "Stop all instances", 
                "operationId": "stop-deployment-resource-instances-all"
            }
        }, 
        "/users/auth/keys": {
            "post": {
                "responses": {
                    "201": {
                        "description": "The API key is created and returned in the body of the response.", 
                        "schema": {
                            "$ref": "#/definitions/ApiKeyResponse"
                        }
                    }, 
                    "449": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "root.unauthorized.rbac.elevated_permissions_required"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "400": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "api_keys.invalid_input"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The request is invalid. Specify a different request, then try again. (code: `api_keys.invalid_input`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "description": "Creates a new API key.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/CreateApiKeyRequest"
                        }, 
                        "description": "The request to create the API key", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "Authentication"
                ], 
                "x-doc": {
                    "tag": "Authentication"
                }, 
                "summary": "Create API key", 
                "consumes": [
                    "application/json"
                ], 
                "operationId": "create-api-key"
            }, 
            "delete": {
                "responses": {
                    "200": {
                        "description": "The API keys are deleted.", 
                        "schema": {
                            "$ref": "#/definitions/EmptyResponse"
                        }
                    }, 
                    "449": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "root.unauthorized.rbac.elevated_permissions_required"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "description": "Delete or invalidate API keys.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/DeleteApiKeysRequest"
                        }, 
                        "description": "The request to delete API keys", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "Authentication"
                ], 
                "x-doc": {
                    "tag": "Authentication"
                }, 
                "summary": "Delete API keys", 
                "consumes": [
                    "application/json"
                ], 
                "operationId": "delete-api-keys"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "The metadata for the API keys is retrieved.", 
                        "schema": {
                            "$ref": "#/definitions/ApiKeysResponse"
                        }
                    }
                }, 
                "parameters": [], 
                "tags": [
                    "Authentication"
                ], 
                "description": "Retrieves the metadata for all of the API keys that the user generated.", 
                "x-doc": {
                    "tag": "Authentication"
                }, 
                "summary": "Get all API keys", 
                "operationId": "get-api-keys"
            }
        }, 
        "/deployments/{deployment_id}/{stateless_resource_kind}/{ref_id}/_restart": {
            "post": {
                "responses": {
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_not_found", 
                                    "deployments.deployment_resource_not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "449": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "root.unauthorized.rbac.elevated_permissions_required"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "202": {
                        "description": "The restart command was issued successfully", 
                        "schema": {
                            "$ref": "#/definitions/DeploymentResourceCommandResponse"
                        }
                    }, 
                    "422": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_resource_plan_change_error"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The command sent to a Resource found the Resource in an illegal state, the error message gives more details. (code: `deployments.deployment_resource_plan_change_error`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "500": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_resource_no_longer_exists"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Identifier for the Deployment.", 
                        "required": true, 
                        "type": "string", 
                        "name": "deployment_id", 
                        "in": "path"
                    }, 
                    {
                        "enum": [
                            "kibana", 
                            "apm", 
                            "appsearch", 
                            "enterprise_search"
                        ], 
                        "description": "The kind of stateless resource", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "stateless_resource_kind"
                    }, 
                    {
                        "description": "User-specified RefId for the Resource.", 
                        "required": true, 
                        "type": "string", 
                        "name": "ref_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "If true, cancels any pending plans before restarting. If false and there are pending plans, returns an error.", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "cancel_pending"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "description": "Restarts a Stateless Resource. If a Resource is active: this command re-applies the existing plan but applies a \"cluster_reboot\", which issues a restart command and waits for it to complete. If a Resource is inactive: this command starts it up with the most recent successful plan.", 
                "x-doc": {
                    "tag": "Deployment - Commands"
                }, 
                "summary": "Restart Deployment Stateless Resource", 
                "operationId": "restart-deployment-stateless-resource"
            }
        }, 
        "/deployments/{deployment_id}/{resource_kind}/{ref_id}/instances/maintenance-mode/_start": {
            "post": {
                "responses": {
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_not_found", 
                                    "deployments.deployment_resource_not_found", 
                                    "deployments.instances_missing_on_update_error"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "449": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "root.unauthorized.rbac.elevated_permissions_required"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "202": {
                        "description": "The start maintenance command was issued successfully.", 
                        "schema": {
                            "$ref": "#/definitions/DeploymentResourceCommandResponse"
                        }
                    }, 
                    "403": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.instance_update_prohibited_error"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The start maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "500": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_resource_no_longer_exists"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Identifier for the Deployment.", 
                        "required": true, 
                        "type": "string", 
                        "name": "deployment_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "The kind of resource (one of elasticsearch, kibana or apm).", 
                        "required": true, 
                        "type": "string", 
                        "name": "resource_kind", 
                        "in": "path"
                    }, 
                    {
                        "description": "User-specified RefId for the Resource.", 
                        "required": true, 
                        "type": "string", 
                        "name": "ref_id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "description": "Starts maintenance mode of all instances belonging to a Deployment Resource.", 
                "x-doc": {
                    "tag": "Deployment - Commands"
                }, 
                "summary": "Start maintenance mode (all instances)", 
                "operationId": "start-deployment-resource-instances-all-maintenance-mode"
            }
        }, 
        "/deployments/traffic-filter/rulesets": {
            "post": {
                "responses": {
                    "201": {
                        "description": "The ruleset definition is valid and the creation has started.", 
                        "schema": {
                            "$ref": "#/definitions/TrafficFilterRulesetResponse"
                        }
                    }, 
                    "500": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "traffic_filter.request_execution_failed"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Error creating the traffic filter ruleset. (code: `traffic_filter.request_execution_failed`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "description": "Creates a ruleset that consists of a set of rules.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/TrafficFilterRulesetRequest"
                        }, 
                        "description": "The specification for traffic filter ruleset.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "DeploymentsTrafficFilter"
                ], 
                "x-doc": {
                    "tag": "Deployments - Traffic Filter - CRUD"
                }, 
                "summary": "Create a ruleset", 
                "consumes": [
                    "application/json"
                ], 
                "operationId": "create-traffic-filter-ruleset"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "The collection of traffic filter routes", 
                        "schema": {
                            "$ref": "#/definitions/TrafficFilterRulesets"
                        }
                    }, 
                    "500": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "traffic_filter.request_execution_failed"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Error fetching traffic filter rulesets. (code: `traffic_filter.request_execution_failed`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Retrieves a list of resources that are associated to the specified ruleset.", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "include_associations"
                    }, 
                    {
                        "description": "If provided limits the rulesets to that region only.", 
                        "required": false, 
                        "type": "string", 
                        "name": "region", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "DeploymentsTrafficFilter"
                ], 
                "description": "List all of the traffic filter rulesets.", 
                "x-doc": {
                    "tag": "Deployments - Traffic Filter - CRUD"
                }, 
                "summary": "List traffic filter rulesets", 
                "operationId": "get-traffic-filter-rulesets"
            }
        }, 
        "/deployments/_search": {
            "post": {
                "responses": {
                    "200": {
                        "headers": {
                            "x-cloud-resource-last-modified": {
                                "type": "string", 
                                "description": "The date-time when the resource was last modified (ISO format relative to UTC)"
                            }, 
                            "x-cloud-resource-created": {
                                "type": "string", 
                                "description": "The date-time when the resource was created (ISO format relative to UTC)"
                            }, 
                            "x-cloud-resource-version": {
                                "type": "string", 
                                "description": "The resource version, which is used to avoid update conflicts with concurrent operations"
                            }
                        }, 
                        "description": "The list of deployments that match the specified query and belong to the authenticated user.", 
                        "schema": {
                            "$ref": "#/definitions/DeploymentsSearchResponse"
                        }
                    }
                }, 
                "description": "Retrieves the information for all of the deployments that match the specified query.", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/SearchRequest"
                        }, 
                        "description": "(Optional) The search query to run. When not specified, all of the deployments are matched.", 
                        "required": false, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "x-doc": {
                    "tag": "Deployment - Commands"
                }, 
                "summary": "Search Deployments", 
                "consumes": [
                    "application/json"
                ], 
                "operationId": "search-deployments"
            }
        }, 
        "/deployments/{deployment_id}/elasticsearch/{ref_id}/keystore": {
            "patch": {
                "responses": {
                    "200": {
                        "description": "The new value for the keystore contents", 
                        "schema": {
                            "$ref": "#/definitions/KeystoreContents"
                        }
                    }, 
                    "449": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "root.unauthorized.rbac.elevated_permissions_required"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_not_found", 
                                    "deployments.deployment_resource_not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "500": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.metadata_internal_error"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "We have failed you. (code: `deployments.metadata_internal_error`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "description": "Fetches the current values of the keystore for the Elasticsearch resource.", 
                "parameters": [
                    {
                        "description": "Identifier for the Deployment", 
                        "required": true, 
                        "type": "string", 
                        "name": "deployment_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "User-specified RefId for the Resource", 
                        "required": true, 
                        "type": "string", 
                        "name": "ref_id", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/KeystoreContents"
                        }, 
                        "description": "The new settings that will be applied to the keystore of the Elasticsearch resource.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "x-doc": {
                    "tag": "Deployment Resources - CRUD"
                }, 
                "summary": "Add or remove settings from the Elasticsearch resource keystore", 
                "consumes": [
                    "application/json"
                ], 
                "operationId": "set-deployment-es-resource-keystore"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "The new value for the keystore contents", 
                        "schema": {
                            "$ref": "#/definitions/KeystoreContents"
                        }
                    }, 
                    "449": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "root.unauthorized.rbac.elevated_permissions_required"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_not_found", 
                                    "deployments.deployment_resource_not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "500": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.metadata_internal_error"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "We have failed you. (code: `deployments.metadata_internal_error`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Identifier for the Deployment", 
                        "required": true, 
                        "type": "string", 
                        "name": "deployment_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "User-specified RefId for the Resource", 
                        "required": true, 
                        "type": "string", 
                        "name": "ref_id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "description": "Adds the specified values to the Elasticsearch keystore, or removes the keys for the unspecified values.", 
                "x-doc": {
                    "tag": "Deployment Resources - CRUD"
                }, 
                "summary": "Get the settings from the Elasticsearch resource keystore", 
                "operationId": "get-deployment-es-resource-keystore"
            }
        }, 
        "/deployments/{deployment_id}/elasticsearch/{ref_id}/eligible-remote-clusters": {
            "post": {
                "responses": {
                    "200": {
                        "description": "List of deployments which contains eligible remote clusters for the resource", 
                        "schema": {
                            "$ref": "#/definitions/DeploymentsSearchResponse"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_not_found", 
                                    "deployments.deployment_resource_not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "400": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.resource_does_not_have_a_valid_version"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The resource specified doesn't yet have a valid version for the current plan or the pending plan. (code: `deployments.resource_does_not_have_a_valid_version`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "description": "Returns the list of deployments which contain eligible remote clusters for the elasticsearch resource.", 
                "parameters": [
                    {
                        "description": "Identifier for the Deployment.", 
                        "required": true, 
                        "type": "string", 
                        "name": "deployment_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "User-specified RefId for the Resource.", 
                        "required": true, 
                        "type": "string", 
                        "name": "ref_id", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/SearchRequest"
                        }, 
                        "description": "(Optional) The search query to run against all deployments containing eligible remote clusters. When not specified, all the eligible deployments are matched.", 
                        "required": false, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "x-doc": {
                    "tag": "Deployment - Remote Clusters"
                }, 
                "summary": "Get eligible remote clusters", 
                "consumes": [
                    "application/json"
                ], 
                "operationId": "get-deployment-es-resource-eligible-remote-clusters"
            }
        }, 
        "/deployments/{deployment_id}": {
            "put": {
                "responses": {
                    "200": {
                        "headers": {
                            "x-cloud-resource-last-modified": {
                                "type": "string", 
                                "description": "The date-time when the resource was last modified (ISO format relative to UTC)"
                            }, 
                            "x-cloud-resource-created": {
                                "type": "string", 
                                "description": "The date-time when the resource was created (ISO format relative to UTC)"
                            }, 
                            "x-cloud-resource-version": {
                                "type": "string", 
                                "description": "The resource version, which is used to avoid update conflicts with concurrent operations"
                            }
                        }, 
                        "description": "The request was valid and the deployment was updated.", 
                        "schema": {
                            "$ref": "#/definitions/DeploymentUpdateResponse"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "401": {
                        "description": "You are not authorized to perform this action.", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "400": {
                        "description": "The deployment request had errors.", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "description": "Updates a Deployment.", 
                "parameters": [
                    {
                        "description": "Identifier for the Deployment", 
                        "required": true, 
                        "type": "string", 
                        "name": "deployment_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "Whether or not to hide orphaned resources that were shut down (relevant if prune on the request is true)", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "hide_pruned_orphans"
                    }, 
                    {
                        "description": "Whether or not to skip snapshots before shutting down orphaned resources (relevant if prune on the request is true)", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "skip_snapshot"
                    }, 
                    {
                        "description": "If true, will just validate the Deployment definition but will not perform the update", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "validate_only"
                    }, 
                    {
                        "description": "If specified then checks for conflicts against the version stored in the persistent store (returned in 'x-cloud-resource-version' of the GET request)", 
                        "required": false, 
                        "type": "string", 
                        "name": "version", 
                        "in": "query"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/DeploymentUpdateRequest"
                        }, 
                        "description": "The deployment definition", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "x-doc": {
                    "tag": "Deployment - CRUD"
                }, 
                "summary": "Update Deployment", 
                "consumes": [
                    "application/json"
                ], 
                "operationId": "update-deployment"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "headers": {
                            "x-cloud-resource-last-modified": {
                                "type": "string", 
                                "description": "The date-time when the resource was last modified (ISO format relative to UTC)"
                            }, 
                            "x-cloud-resource-created": {
                                "type": "string", 
                                "description": "The date-time when the resource was created (ISO format relative to UTC)"
                            }, 
                            "x-cloud-resource-version": {
                                "type": "string", 
                                "description": "The resource version, which is used to avoid update conflicts with concurrent operations"
                            }
                        }, 
                        "description": "The Deployment info response", 
                        "schema": {
                            "$ref": "#/definitions/DeploymentGetResponse"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "401": {
                        "description": "You are not authorized to perform this action.", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Identifier for the Deployment", 
                        "required": true, 
                        "type": "string", 
                        "name": "deployment_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "Whether to include the Elasticsearch 2.x security information in the response - can be large per cluster and also include credentials", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_security"
                    }, 
                    {
                        "description": "Whether to include the full cluster metadata in the response - can be large per cluster and also include credentials", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_metadata"
                    }, 
                    {
                        "description": "Whether to include the full current and pending plan information in the response - can be large per cluster", 
                        "default": true, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_plans"
                    }, 
                    {
                        "description": "Whether to include with the current and pending plan information the attempt log - can be very large per cluster", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_plan_logs"
                    }, 
                    {
                        "description": "Whether to include with the current and pending plan information the plan history- can be very large per cluster", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_plan_history"
                    }, 
                    {
                        "description": "If showing plans, whether to show values that are left at their default value (less readable but more informative)", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_plan_defaults"
                    }, 
                    {
                        "description": "If showing plans, whether to leave pre-2.0.0 plans in their legacy format (the default), or whether to update them to 2.0.x+ format (if 'true')", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "convert_legacy_plans"
                    }, 
                    {
                        "description": "Number of system alerts (such as forced restarts due to memory limits) to be included in the response - can be large per cluster. Negative numbers or 0 will not return field.", 
                        "default": 0, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "show_system_alerts"
                    }, 
                    {
                        "description": "Whether to show cluster settings in the response.", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_settings"
                    }, 
                    {
                        "description": "If showing plans, whether to enrich the plan by including the missing elements from the deployment template it is based on", 
                        "default": true, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "enrich_with_template"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "description": "Retrieves information about a Deployment.", 
                "x-doc": {
                    "tag": "Deployment - CRUD"
                }, 
                "summary": "Get Deployment", 
                "operationId": "get-deployment"
            }
        }, 
        "/deployments/traffic-filter/rulesets/{ruleset_id}/associations": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Create association request was valid and the association has been created", 
                        "schema": {
                            "$ref": "#/definitions/EmptyResponse"
                        }
                    }, 
                    "200": {
                        "description": "Create association request was valid and the association already exists", 
                        "schema": {
                            "$ref": "#/definitions/EmptyResponse"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "traffic_filter.not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The traffic filter ruleset specified by {ruleset_id} cannot be found. (code: `traffic_filter.not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "500": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "traffic_filter.request_execution_failed"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Creation failed. (code: `traffic_filter.request_execution_failed`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "description": "Applies the ruleset to the specified deployment.", 
                "parameters": [
                    {
                        "description": "The mandatory ruleset ID.", 
                        "required": true, 
                        "type": "string", 
                        "name": "ruleset_id", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/FilterAssociation"
                        }, 
                        "description": "Mandatory ruleset association description", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "DeploymentsTrafficFilter"
                ], 
                "x-doc": {
                    "tag": "Deployments - Traffic Filter - Associations"
                }, 
                "summary": "Create ruleset association", 
                "consumes": [
                    "application/json"
                ], 
                "operationId": "create-traffic-filter-ruleset-association"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "Associations referred by traffic filter rulesets were successfully returned", 
                        "schema": {
                            "$ref": "#/definitions/RulesetAssociations"
                        }
                    }, 
                    "500": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "traffic_filter.request_execution_failed"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Error fetching deployments. (code: `traffic_filter.request_execution_failed`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The mandatory ruleset ID.", 
                        "required": true, 
                        "type": "string", 
                        "name": "ruleset_id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "DeploymentsTrafficFilter"
                ], 
                "description": "Retrieves a list of deployments that are associated to the specified ruleset.", 
                "x-doc": {
                    "tag": "Deployments - Traffic Filter - Associations"
                }, 
                "summary": "Get associated deployments", 
                "operationId": "get-traffic-filter-ruleset-deployment-associations"
            }
        }, 
        "/deployments/{deployment_id}/elasticsearch/{ref_id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Standard response.", 
                        "schema": {
                            "$ref": "#/definitions/ElasticsearchResourceInfo"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "500": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_resource_no_longer_exists"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Identifier for the Deployment", 
                        "required": true, 
                        "type": "string", 
                        "name": "deployment_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "User-specified RefId for the Resource", 
                        "required": true, 
                        "type": "string", 
                        "name": "ref_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "Whether to include the Elasticsearch 2.x security information in the response - can be large per cluster and also include credentials.", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_security"
                    }, 
                    {
                        "description": "Whether to include the full cluster metadata in the response - can be large per cluster and also include credentials.", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_metadata"
                    }, 
                    {
                        "description": "Whether to include the full current and pending plan information in the response - can be large per cluster.", 
                        "default": true, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_plans"
                    }, 
                    {
                        "description": "Whether to include with the current and pending plan information the attempt log - can be very large per cluster.", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_plan_logs"
                    }, 
                    {
                        "description": "Whether to include with the current and pending plan information the plan history- can be very large per cluster.", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_plan_history"
                    }, 
                    {
                        "description": "If showing plans, whether to show values that are left at their default value (less readable but more informative).", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_plan_defaults"
                    }, 
                    {
                        "description": "If showing plans, whether to leave pre-2.0.0 plans in their legacy format (the default), or whether to update them to 2.0.x+ format (if 'true').", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "convert_legacy_plans"
                    }, 
                    {
                        "description": "Number of system alerts (such as forced restarts due to memory limits) to be included in the response - can be large per cluster. Negative numbers or 0 will not return field.", 
                        "default": 0, 
                        "required": false, 
                        "in": "query", 
                        "type": "integer", 
                        "name": "show_system_alerts"
                    }, 
                    {
                        "description": "Whether to show cluster settings in the response.", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_settings"
                    }, 
                    {
                        "description": "If showing plans, whether to enrich the plan by including the missing elements from the deployment template it is based on.", 
                        "default": true, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "enrich_with_template"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "description": "Get info about an Elasticsearch Resource belonging to a given Deployment.", 
                "x-doc": {
                    "tag": "Deployment - Info"
                }, 
                "summary": "Get Deployment Elasticsearch Resource Info", 
                "operationId": "get-deployment-es-resource-info"
            }
        }, 
        "/deployments/{deployment_id}/{resource_kind}/{ref_id}/instances/maintenance-mode/_stop": {
            "post": {
                "responses": {
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_not_found", 
                                    "deployments.deployment_resource_not_found", 
                                    "deployments.instances_missing_on_update_error"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "449": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "root.unauthorized.rbac.elevated_permissions_required"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "202": {
                        "description": "The stop maintenance mode command was issued successfully.", 
                        "schema": {
                            "$ref": "#/definitions/DeploymentResourceCommandResponse"
                        }
                    }, 
                    "403": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.instance_update_prohibited_error"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The stop maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "500": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_resource_no_longer_exists"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Identifier for the Deployment.", 
                        "required": true, 
                        "type": "string", 
                        "name": "deployment_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "The kind of resource (one of elasticsearch, kibana or apm).", 
                        "required": true, 
                        "type": "string", 
                        "name": "resource_kind", 
                        "in": "path"
                    }, 
                    {
                        "description": "User-specified RefId for the Resource.", 
                        "required": true, 
                        "type": "string", 
                        "name": "ref_id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "description": "Stops maintenance mode of all instances belonging to a Deployment Resource.", 
                "x-doc": {
                    "tag": "Deployment - Commands"
                }, 
                "summary": "Stop maintenance mode (all instances)", 
                "operationId": "stop-deployment-resource-instances-all-maintenance-mode"
            }
        }, 
        "/deployments/{deployment_id}/elasticsearch/{ref_id}/_enable-ilm": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Standard response", 
                        "schema": {
                            "$ref": "#/definitions/DeploymentResourceCommandResponse"
                        }
                    }, 
                    "449": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "root.unauthorized.rbac.elevated_permissions_required"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_not_found", 
                                    "deployments.deployment_resource_not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "500": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_resource_no_longer_exists"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "description": "Migrates the specified Elasticsearch resource to use ILM.", 
                "parameters": [
                    {
                        "description": "Identifier for the Deployment.", 
                        "required": true, 
                        "type": "string", 
                        "name": "deployment_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "User-specified RefId for the Resource.", 
                        "required": true, 
                        "type": "string", 
                        "name": "ref_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "When `true`, does not enable ILM but returns warnings if any applications may lose availability during ILM migration.", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "validate_only"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/EnableIlmRequest"
                        }, 
                        "description": "Information to build the ILM policies that will be created", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "x-doc": {
                    "tag": "Deployment - Commands"
                }, 
                "summary": "Migrate Elasticsearch resource to use ILM", 
                "consumes": [
                    "application/json"
                ], 
                "operationId": "enable-deployment-resource-ilm"
            }
        }, 
        "/deployments/extensions/{extension_id}": {
            "put": {
                "responses": {
                    "200": {
                        "headers": {
                            "x-cloud-resource-last-modified": {
                                "type": "string", 
                                "description": "The date-time when the resource was last modified (ISO format relative to UTC)"
                            }, 
                            "x-cloud-resource-created": {
                                "type": "string", 
                                "description": "The date-time when the resource was created (ISO format relative to UTC)"
                            }, 
                            "x-cloud-resource-version": {
                                "type": "string", 
                                "description": "The resource version, which is used to avoid update conflicts with concurrent operations"
                            }
                        }, 
                        "description": "Archive uploaded successfully.", 
                        "schema": {
                            "$ref": "#/definitions/Extension"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "extensions.not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The extension you want does not exist. (code: `extensions.not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "401": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "extensions.unauthorised", 
                                    "extensions.no_user_id"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "* The extension does not belong to you. (code: `extensions.unauthorised`)\n* Your current session does not have a user id associated with it. (code: `extensions.no_user_id`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "400": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "extensions.request_execution_failed"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Could not accept the extensions file. (code: `extensions.request_execution_failed`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "description": "Uploads archive for an extension.", 
                "parameters": [
                    {
                        "description": "Id of an extension", 
                        "required": true, 
                        "type": "string", 
                        "name": "extension_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "Zip file that contains the extension", 
                        "required": true, 
                        "type": "file", 
                        "name": "file", 
                        "in": "formData"
                    }
                ], 
                "tags": [
                    "Extensions"
                ], 
                "x-doc": {
                    "tag": "Deployments - Extensions"
                }, 
                "summary": "Uploads the Extension", 
                "consumes": [
                    "multipart/form-data"
                ], 
                "operationId": "upload-extension"
            }, 
            "post": {
                "responses": {
                    "200": {
                        "headers": {
                            "x-cloud-resource-last-modified": {
                                "type": "string", 
                                "description": "The date-time when the resource was last modified (ISO format relative to UTC)"
                            }, 
                            "x-cloud-resource-created": {
                                "type": "string", 
                                "description": "The date-time when the resource was created (ISO format relative to UTC)"
                            }, 
                            "x-cloud-resource-version": {
                                "type": "string", 
                                "description": "The resource version, which is used to avoid update conflicts with concurrent operations"
                            }
                        }, 
                        "description": "Extension updated successfully.", 
                        "schema": {
                            "$ref": "#/definitions/Extension"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "extensions.not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The extension you want does not exist. (code: `extensions.not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "409": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "extensions.version_conflict"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The version you sent does not match the persisted version. (code: `extensions.version_conflict`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "401": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "extensions.unauthorised", 
                                    "extensions.no_user_id"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "* The extension does not belong to you. (code: `extensions.unauthorised`)\n* Your current session does not have a user id associated with it. (code: `extensions.no_user_id`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "400": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "extensions.request_execution_failed"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Could not download the extension from the specified URL. (code: `extensions.request_execution_failed`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "description": "Updates an extension.", 
                "parameters": [
                    {
                        "description": "Id of an extension", 
                        "required": true, 
                        "type": "string", 
                        "name": "extension_id", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/UpdateExtensionRequest"
                        }, 
                        "description": "The extension update data.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "Extensions"
                ], 
                "x-doc": {
                    "tag": "Deployments - Extensions"
                }, 
                "summary": "Update Extension", 
                "consumes": [
                    "application/json"
                ], 
                "operationId": "update-extension"
            }, 
            "delete": {
                "responses": {
                    "200": {
                        "headers": {
                            "x-cloud-resource-last-modified": {
                                "type": "string", 
                                "description": "The date-time when the resource was last modified (ISO format relative to UTC)"
                            }, 
                            "x-cloud-resource-created": {
                                "type": "string", 
                                "description": "The date-time when the resource was created (ISO format relative to UTC)"
                            }, 
                            "x-cloud-resource-version": {
                                "type": "string", 
                                "description": "The resource version, which is used to avoid update conflicts with concurrent operations"
                            }
                        }, 
                        "description": "Extension deleted successfully.", 
                        "schema": {
                            "$ref": "#/definitions/EmptyResponse"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "extensions.not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The extension requested does not exist. (code: `extensions.not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "409": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "extensions.version_conflict"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The version you sent does not match the persisted version. (code: `extensions.version_conflict`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "401": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "extensions.unauthorised", 
                                    "extensions.no_user_id"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "* The extension does not belong to you. (code: `extensions.unauthorised`)\n* Your current session does not have a user id associated with it. (code: `extensions.no_user_id`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Id of an extension", 
                        "required": true, 
                        "type": "string", 
                        "name": "extension_id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "Extensions"
                ], 
                "description": "Deletes a Extension.", 
                "x-doc": {
                    "tag": "Deployments - Extensions"
                }, 
                "summary": "Delete Extension", 
                "operationId": "delete-extension"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "headers": {
                            "x-cloud-resource-last-modified": {
                                "type": "string", 
                                "description": "The date-time when the resource was last modified (ISO format relative to UTC)"
                            }, 
                            "x-cloud-resource-created": {
                                "type": "string", 
                                "description": "The date-time when the resource was created (ISO format relative to UTC)"
                            }, 
                            "x-cloud-resource-version": {
                                "type": "string", 
                                "description": "The resource version, which is used to avoid update conflicts with concurrent operations"
                            }
                        }, 
                        "description": "The Extension", 
                        "schema": {
                            "$ref": "#/definitions/Extension"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "extensions.not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The extension requested does not exist. (code: `extensions.not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Id of an extension", 
                        "required": true, 
                        "type": "string", 
                        "name": "extension_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "Include deployments referencing this extension. Up to only 10000 deployments will be included.", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "include_deployments"
                    }
                ], 
                "tags": [
                    "Extensions"
                ], 
                "description": "Retrieves an extension.", 
                "x-doc": {
                    "tag": "Deployments - Extensions"
                }, 
                "summary": "Get Extension", 
                "operationId": "get-extension"
            }
        }, 
        "/deployments/{deployment_id}/{stateless_resource_kind}/{ref_id}/_shutdown": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Standard response", 
                        "schema": {
                            "$ref": "#/definitions/DeploymentResourceCommandResponse"
                        }
                    }, 
                    "449": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "root.unauthorized.rbac.elevated_permissions_required"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_not_found", 
                                    "deployments.deployment_resource_not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "500": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_resource_no_longer_exists"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "400": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.restricted_parameter"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Parameter is restricted and can only be set by a Platform administrator. (code: `deployments.restricted_parameter`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Identifier for the Deployment.", 
                        "required": true, 
                        "type": "string", 
                        "name": "deployment_id", 
                        "in": "path"
                    }, 
                    {
                        "enum": [
                            "kibana", 
                            "apm", 
                            "appsearch", 
                            "enterprise_search"
                        ], 
                        "description": "The kind of stateless resource", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "stateless_resource_kind"
                    }, 
                    {
                        "description": "User-specified RefId for the Resource.", 
                        "required": true, 
                        "type": "string", 
                        "name": "ref_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "Hide cluster on shutdown. Hidden clusters are not listed by default. Only applicable for Platform administrators.", 
                        "required": false, 
                        "type": "boolean", 
                        "name": "hide", 
                        "in": "query"
                    }, 
                    {
                        "description": "If true, will skip taking a snapshot of the cluster before shutting the cluster down (if even possible)", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "skip_snapshot"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "description": "Shut down Stateless Resource belonging to a given Deployment.\nKibana cannot be shut down on Elasticsearch Service as it is required for Elasticsearch administrative functions, such as Snapshot Lifecycle Management and version upgrades.", 
                "x-doc": {
                    "tag": "Deployment - Commands"
                }, 
                "summary": "Shutdown Deployment Stateless Resource", 
                "operationId": "shutdown-deployment-stateless-resource"
            }
        }, 
        "/deployments/{deployment_id}/apm/{ref_id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Standard response.", 
                        "schema": {
                            "$ref": "#/definitions/ApmResourceInfo"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "500": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_resource_no_longer_exists"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Identifier for the Deployment", 
                        "required": true, 
                        "type": "string", 
                        "name": "deployment_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "User-specified RefId for the Resource", 
                        "required": true, 
                        "type": "string", 
                        "name": "ref_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "Whether to include the full cluster metadata in the response - can be large per cluster and also include credentials.", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_metadata"
                    }, 
                    {
                        "description": "Whether to include the full current and pending plan information in the response - can be large per cluster.", 
                        "default": true, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_plans"
                    }, 
                    {
                        "description": "Whether to include with the current and pending plan information the attempt log - can be very large per cluster.", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_plan_logs"
                    }, 
                    {
                        "description": "Whether to include with the current and pending plan information the plan history- can be very large per cluster.", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_plan_history"
                    }, 
                    {
                        "description": "If showing plans, whether to show values that are left at their default value (less readable but more informative).", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_plan_defaults"
                    }, 
                    {
                        "description": "Whether to show cluster settings in the response.", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_settings"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "description": "Get info about an APM Resource belonging to a given Deployment.", 
                "x-doc": {
                    "tag": "Deployment - Info"
                }, 
                "summary": "Get Deployment APM Resource Info", 
                "operationId": "get-deployment-apm-resource-info"
            }
        }, 
        "/deployments/{deployment_id}/{resource_kind}/{ref_id}/instances/{instance_ids}/maintenance-mode/_stop": {
            "post": {
                "responses": {
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_not_found", 
                                    "deployments.deployment_resource_not_found", 
                                    "deployments.instances_missing_on_update_error"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)\n* One or more instances of the given resource type are missing. (code: `deployments.instances_missing_on_update_error`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "449": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "root.unauthorized.rbac.elevated_permissions_required"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "202": {
                        "description": "The stop maintenance mode command was issued successfully.", 
                        "schema": {
                            "$ref": "#/definitions/DeploymentResourceCommandResponse"
                        }
                    }, 
                    "403": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.instance_update_prohibited_error"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The stop maintenance mode command was prohibited for the given Resource. (code: `deployments.instance_update_prohibited_error`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "500": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_resource_no_longer_exists"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "A Resource that was previously stored no longer exists. (code: `deployments.deployment_resource_no_longer_exists`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Identifier for the Deployment.", 
                        "required": true, 
                        "type": "string", 
                        "name": "deployment_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "The kind of resource (one of elasticsearch, kibana or apm).", 
                        "required": true, 
                        "type": "string", 
                        "name": "resource_kind", 
                        "in": "path"
                    }, 
                    {
                        "description": "User-specified RefId for the Resource.", 
                        "required": true, 
                        "type": "string", 
                        "name": "ref_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "A comma-separated list of instance identifiers.", 
                        "items": {
                            "type": "string"
                        }, 
                        "required": true, 
                        "collectionFormat": "csv", 
                        "in": "path", 
                        "type": "array", 
                        "name": "instance_ids"
                    }, 
                    {
                        "description": "If true and the instance does not exist then quietly proceed to the next instance, otherwise treated as an error.", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "ignore_missing"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "description": "Stops maintenance mode of instances belonging to a Resource.", 
                "x-doc": {
                    "tag": "Deployment - Commands"
                }, 
                "summary": "Stop maintenance mode", 
                "operationId": "stop-deployment-resource-maintenance-mode"
            }
        }, 
        "/deployments/{deployment_id}/{resource_kind}/{ref_id}/plan/pending": {
            "delete": {
                "responses": {
                    "200": {
                        "description": "Standard Deployment Resource Crud Response", 
                        "schema": {
                            "$ref": "#/definitions/DeploymentResourceCrudResponse"
                        }
                    }, 
                    "449": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "root.unauthorized.rbac.elevated_permissions_required"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "500": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_resource_no_longer_exists"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "400": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.resource_does_not_have_a_pending_plan"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The Resource does not have a pending plan. (code: `deployments.resource_does_not_have_a_pending_plan`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Identifier for the Deployment", 
                        "required": true, 
                        "type": "string", 
                        "name": "deployment_id", 
                        "in": "path"
                    }, 
                    {
                        "enum": [
                            "elasticsearch", 
                            "kibana", 
                            "apm", 
                            "appsearch", 
                            "enterprise_search"
                        ], 
                        "description": "The kind of resource", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "resource_kind"
                    }, 
                    {
                        "description": "User-specified RefId for the Resource", 
                        "required": true, 
                        "type": "string", 
                        "name": "ref_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "When `true`, deletes the pending plan instead of attempting a graceful cancellation. The default is `false`.", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "force_delete"
                    }, 
                    {
                        "description": "When `true`, returns successfully, even when plans are missing. The default is `false`.", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "ignore_missing"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "description": "Cancels the pending plan of a Resource belonging to a given Deployment.", 
                "x-doc": {
                    "tag": "Deployment Resources - CRUD"
                }, 
                "summary": "Cancel resource pending plan", 
                "operationId": "cancel-deployment-resource-pending-plan"
            }
        }, 
        "/deployments/traffic-filter/associations/{association_type}/{associated_entity_id}/rulesets": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Rulesets in the deployment were successfully returned", 
                        "schema": {
                            "$ref": "#/definitions/TrafficFilterSettings"
                        }
                    }, 
                    "500": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "traffic_filter.request_execution_failed"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Error fetching traffic filter rulesets. (code: `traffic_filter.request_execution_failed`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "400": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "traffic_filter.invalid_association_type"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Invalid association type. (code: `traffic_filter.invalid_association_type`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Association type", 
                        "required": true, 
                        "type": "string", 
                        "name": "association_type", 
                        "in": "path"
                    }, 
                    {
                        "description": "Associated entity ID", 
                        "required": true, 
                        "type": "string", 
                        "name": "associated_entity_id", 
                        "in": "path"
                    }
                ], 
                "tags": [
                    "DeploymentsTrafficFilter"
                ], 
                "description": "Retrieves the rulesets associated with a deployment.", 
                "x-doc": {
                    "tag": "Deployments - Traffic Filter - Associations"
                }, 
                "summary": "Get associated rulesets", 
                "operationId": "get-traffic-filter-deployment-ruleset-associations"
            }
        }, 
        "/deployments/{deployment_id}/appsearch/{ref_id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Standard response.", 
                        "schema": {
                            "$ref": "#/definitions/AppSearchResourceInfo"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "500": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_resource_no_longer_exists"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "We have failed you. (code: `deployments.deployment_resource_no_longer_exists`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Identifier for the Deployment", 
                        "required": true, 
                        "type": "string", 
                        "name": "deployment_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "User-specified RefId for the Resource", 
                        "required": true, 
                        "type": "string", 
                        "name": "ref_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "Whether to include the full cluster metadata in the response - can be large per cluster and also include credentials.", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_metadata"
                    }, 
                    {
                        "description": "Whether to include the full current and pending plan information in the response - can be large per cluster.", 
                        "default": true, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_plans"
                    }, 
                    {
                        "description": "Whether to include with the current and pending plan information the attempt log - can be very large per cluster.", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_plan_logs"
                    }, 
                    {
                        "description": "Whether to include with the current and pending plan information the plan history- can be very large per cluster.", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_plan_history"
                    }, 
                    {
                        "description": "If showing plans, whether to show values that are left at their default value (less readable but more informative).", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_plan_defaults"
                    }, 
                    {
                        "description": "Whether to show cluster settings in the response.", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "show_settings"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "description": "Get info about an App Search Resource belonging to a given Deployment.", 
                "x-doc": {
                    "tag": "Deployment - Info"
                }, 
                "summary": "Get Deployment App Search Resource Info", 
                "operationId": "get-deployment-appsearch-resource-info"
            }
        }, 
        "/deployments/eligible-remote-clusters": {
            "post": {
                "responses": {
                    "200": {
                        "description": "List of deployments which contains eligible remote clusters for a specific version", 
                        "schema": {
                            "$ref": "#/definitions/DeploymentsSearchResponse"
                        }
                    }, 
                    "400": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "stackpack.invalid_version"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The provided version is invalid. (code: `stackpack.invalid_version`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "description": "Returns the list of deployments which contain eligible remote clusters for a specific version.", 
                "parameters": [
                    {
                        "description": "The version of the Elasticsearch cluster cluster that will potentially be configured to have remote clusters.", 
                        "required": true, 
                        "type": "string", 
                        "name": "version", 
                        "in": "query"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/SearchRequest"
                        }, 
                        "description": "(Optional) The search query to run against all deployments containing eligible remote clusters. When not specified, all the eligible deployments are matched.", 
                        "required": false, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "x-doc": {
                    "tag": "Deployment - Remote Clusters"
                }, 
                "summary": "Get eligible remote clusters", 
                "consumes": [
                    "application/json"
                ], 
                "operationId": "search-eligible-remote-clusters"
            }
        }, 
        "/deployments/traffic-filter/rulesets/{ruleset_id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "The ruleset definition was valid and the update has started.", 
                        "schema": {
                            "$ref": "#/definitions/TrafficFilterRulesetResponse"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "traffic_filter.not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The traffic filter ruleset specified by {ruleset_id} cannot be found. (code: `traffic_filter.not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "500": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "traffic_filter.request_execution_failed"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Error reading the traffic filter ruleset. (code: `traffic_filter.request_execution_failed`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "description": "Updates the ruleset with the definition.", 
                "parameters": [
                    {
                        "description": "The mandatory ruleset ID.", 
                        "required": true, 
                        "type": "string", 
                        "name": "ruleset_id", 
                        "in": "path"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/TrafficFilterRulesetRequest"
                        }, 
                        "description": "The specification for traffic filter ruleset.", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "DeploymentsTrafficFilter"
                ], 
                "x-doc": {
                    "tag": "Deployments - Traffic Filter - CRUD"
                }, 
                "summary": "Updates a ruleset", 
                "consumes": [
                    "application/json"
                ], 
                "operationId": "update-traffic-filter-ruleset"
            }, 
            "delete": {
                "responses": {
                    "200": {
                        "description": "The traffic filter ruleset was successfully deleted.", 
                        "schema": {
                            "$ref": "#/definitions/EmptyResponse"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "traffic_filter.not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The traffic filter ruleset specified by {ruleset_id} cannot be found. (code: `traffic_filter.not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "500": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "traffic_filter.request_execution_failed"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Error deleting the traffic filter ruleset. (code: `traffic_filter.request_execution_failed`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The mandatory ruleset ID.", 
                        "required": true, 
                        "type": "string", 
                        "name": "ruleset_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "When true, ignores the associations and deletes the ruleset. When false, recognizes the associations, which prevents the deletion of the rule set.", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "ignore_associations"
                    }
                ], 
                "tags": [
                    "DeploymentsTrafficFilter"
                ], 
                "description": "Deletes the ruleset by ID.", 
                "x-doc": {
                    "tag": "Deployments - Traffic Filter - CRUD"
                }, 
                "summary": "Delete a ruleset", 
                "operationId": "delete-traffic-filter-ruleset"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "The container for a set of traffic filter rules.", 
                        "schema": {
                            "$ref": "#/definitions/TrafficFilterRulesetInfo"
                        }
                    }, 
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "traffic_filter.not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "The traffic filter ruleset specified by {ruleset_id} cannot be found. (code: `traffic_filter.not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "500": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "traffic_filter.request_execution_failed"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Error reading the traffic filter ruleset. (code: `traffic_filter.request_execution_failed`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "The mandatory ruleset ID.", 
                        "required": true, 
                        "type": "string", 
                        "name": "ruleset_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "Retrieves a list of resources that are associated to the specified ruleset.", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "include_associations"
                    }
                ], 
                "tags": [
                    "DeploymentsTrafficFilter"
                ], 
                "description": "Retrieves a list of resources that are associated to the specified ruleset.", 
                "x-doc": {
                    "tag": "Deployments - Traffic Filter - CRUD"
                }, 
                "summary": "Retrieves the ruleset by ID.", 
                "operationId": "get-traffic-filter-ruleset"
            }
        }, 
        "/deployments": {
            "post": {
                "responses": {
                    "201": {
                        "headers": {
                            "x-cloud-resource-last-modified": {
                                "type": "string", 
                                "description": "The date-time when the resource was last modified (ISO format relative to UTC)"
                            }, 
                            "x-cloud-resource-created": {
                                "type": "string", 
                                "description": "The date-time when the resource was created (ISO format relative to UTC)"
                            }, 
                            "x-cloud-resource-version": {
                                "type": "string", 
                                "description": "The resource version, which is used to avoid update conflicts with concurrent operations"
                            }
                        }, 
                        "description": "The request was valid and a new deployment was created", 
                        "schema": {
                            "$ref": "#/definitions/DeploymentCreateResponse"
                        }
                    }, 
                    "200": {
                        "description": "The request was valid (used when validate_only is true).", 
                        "schema": {
                            "$ref": "#/definitions/DeploymentCreateResponse"
                        }
                    }, 
                    "202": {
                        "description": "The request was valid and deployment creation had already been started.", 
                        "schema": {
                            "$ref": "#/definitions/DeploymentCreateResponse"
                        }
                    }, 
                    "401": {
                        "description": "You are not authorized to perform this action.", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "400": {
                        "description": "The deployment request had errors.", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "description": "Creates a Deployment.", 
                "parameters": [
                    {
                        "description": "An optional idempotency token - if two create requests share the same request_id token (min size 32 characters, max 128) then only one deployment will be created, the second request will return the info of that deployment (in the same format described below, but with blanks for auth-related fields)", 
                        "required": false, 
                        "type": "string", 
                        "name": "request_id", 
                        "in": "query"
                    }, 
                    {
                        "description": "If true, will just validate the Deployment definition but will not perform the creation", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "validate_only"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/DeploymentCreateRequest"
                        }, 
                        "description": "The deployment definition", 
                        "required": true, 
                        "name": "body", 
                        "in": "body"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "x-doc": {
                    "tag": "Deployment - CRUD"
                }, 
                "summary": "Create Deployment", 
                "consumes": [
                    "application/json"
                ], 
                "operationId": "create-deployment"
            }, 
            "get": {
                "responses": {
                    "200": {
                        "description": "The list of deployments that belong to the authenticated user.", 
                        "schema": {
                            "$ref": "#/definitions/DeploymentsListResponse"
                        }
                    }, 
                    "401": {
                        "description": "You are not authorized to perform this action.", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }
                }, 
                "parameters": [], 
                "tags": [
                    "Deployments"
                ], 
                "description": "List Deployments.", 
                "x-doc": {
                    "tag": "Deployment - CRUD"
                }, 
                "summary": "List Deployments", 
                "operationId": "list-deployments"
            }
        }, 
        "/deployments/{deployment_id}/{stateless_resource_kind}/{ref_id}/_upgrade": {
            "post": {
                "responses": {
                    "404": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "deployments.deployment_not_found", 
                                    "deployments.deployment_resource_not_found"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "* The Deployment specified by {deployment_id} cannot be found. (code: `deployments.deployment_not_found`)\n* The Resource specified by {ref_id} cannot be found. (code: `deployments.deployment_resource_not_found`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "449": {
                        "headers": {
                            "x-cloud-error-codes": {
                                "enum": [
                                    "root.unauthorized.rbac.elevated_permissions_required"
                                ], 
                                "type": "string", 
                                "description": "The error codes associated with the response"
                            }
                        }, 
                        "description": "Elevated permissions are required. (code: `root.unauthorized.rbac.elevated_permissions_required`)", 
                        "schema": {
                            "$ref": "#/definitions/BasicFailedReply"
                        }
                    }, 
                    "202": {
                        "description": "The upgrade command was issued successfully, use the \"GET\" command on the /{cluster_id} resource to monitor progress", 
                        "schema": {
                            "$ref": "#/definitions/DeploymentResourceUpgradeResponse"
                        }
                    }
                }, 
                "parameters": [
                    {
                        "description": "Identifier for the Deployment.", 
                        "required": true, 
                        "type": "string", 
                        "name": "deployment_id", 
                        "in": "path"
                    }, 
                    {
                        "enum": [
                            "kibana", 
                            "apm", 
                            "appsearch", 
                            "enterprise_search"
                        ], 
                        "description": "The kind of stateless resource", 
                        "required": true, 
                        "in": "path", 
                        "type": "string", 
                        "name": "stateless_resource_kind"
                    }, 
                    {
                        "description": "User-specified RefId for the Resource.", 
                        "required": true, 
                        "type": "string", 
                        "name": "ref_id", 
                        "in": "path"
                    }, 
                    {
                        "description": "When `true`, returns the update version without performing the upgrade", 
                        "default": false, 
                        "required": false, 
                        "in": "query", 
                        "type": "boolean", 
                        "name": "validate_only"
                    }
                ], 
                "tags": [
                    "Deployments"
                ], 
                "description": "Upgrades a running cluster.", 
                "x-doc": {
                    "tag": "Deployment - Commands"
                }, 
                "summary": "Upgrade Kibana, APM, AppSearch inside Deployment", 
                "operationId": "upgrade-deployment-stateless-resource"
            }
        }
    }, 
    "schemes": [
        "https"
    ], 
    "tags": [
        {
            "name": "Accounts"
        }, 
        {
            "name": "Authentication"
        }, 
        {
            "name": "DeploymentTemplates"
        }, 
        {
            "name": "Deployments"
        }, 
        {
            "name": "DeploymentsTrafficFilter"
        }, 
        {
            "name": "Extensions"
        }, 
        {
            "name": "Stack"
        }
    ], 
    "basePath": "/api/v1/", 
    "x-elastic": {
        "curl": {
            "auth": "-H \"Authorization: ApiKey $EC_API_KEY\""
        }
    }, 
    "securityDefinitions": {
        "apiKey": {
            "type": "apiKey", 
            "name": "Authorization", 
            "in": "header"
        }
    }, 
    "host": "api.elastic-cloud.com", 
    "definitions": {
        "AppSearchPayload": {
            "required": [
                "elasticsearch_cluster_ref_id", 
                "plan", 
                "ref_id", 
                "region"
            ], 
            "type": "object", 
            "properties": {
                "elasticsearch_cluster_ref_id": {
                    "type": "string", 
                    "description": "Alias to the Elasticsearch Cluster to attach AppSearch to"
                }, 
                "display_name": {
                    "type": "string", 
                    "description": "The human readable name for the AppSearch cluster (default: takes the name of its Elasticsearch cluster)"
                }, 
                "settings": {
                    "description": "The settings for building this AppSearch cluster", 
                    "$ref": "#/definitions/AppSearchSettings"
                }, 
                "region": {
                    "type": "string", 
                    "description": "The region where this resource exists"
                }, 
                "ref_id": {
                    "type": "string", 
                    "description": "A locally-unique user-specified id for AppSearch"
                }, 
                "plan": {
                    "$ref": "#/definitions/AppSearchPlan"
                }
            }, 
            "description": "An AppSearch creation request paired with the alias of the Elasticsearch cluster it should be paired with"
        }, 
        "ElasticsearchClusterPlansInfo": {
            "required": [
                "healthy", 
                "history"
            ], 
            "type": "object", 
            "properties": {
                "healthy": {
                    "type": "boolean", 
                    "description": "Whether the plan situation is healthy (if unhealthy, means the last plan attempt failed)"
                }, 
                "current": {
                    "$ref": "#/definitions/ElasticsearchClusterPlanInfo"
                }, 
                "pending": {
                    "$ref": "#/definitions/ElasticsearchClusterPlanInfo"
                }, 
                "history": {
                    "items": {
                        "$ref": "#/definitions/ElasticsearchClusterPlanInfo"
                    }, 
                    "type": "array"
                }
            }, 
            "description": "Information about the current, pending, and past Elasticsearch cluster plans."
        }, 
        "DeploymentSearchResponse": {
            "required": [
                "healthy", 
                "id", 
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "The name of this deployment"
                }, 
                "settings": {
                    "description": "Additional configuration for this Deployment", 
                    "$ref": "#/definitions/DeploymentSettings"
                }, 
                "healthy": {
                    "type": "boolean", 
                    "description": "Whether the deployment is overall healthy or not (one or more of the resource info subsections will have healthy: false)"
                }, 
                "alias": {
                    "type": "string", 
                    "description": "A user-defined deployment alias for user-friendly resource URLs"
                }, 
                "id": {
                    "type": "string", 
                    "description": "A randomly-generated id of this Deployment"
                }, 
                "resources": {
                    "description": "The Resources that belong to this Deployment", 
                    "$ref": "#/definitions/DeploymentResources"
                }, 
                "metadata": {
                    "description": "Additional information about this deployment", 
                    "$ref": "#/definitions/DeploymentMetadata"
                }
            }, 
            "description": "Describes a searched Deployment"
        }, 
        "TransientAppSearchPlanConfiguration": {
            "type": "object", 
            "properties": {
                "plan_configuration": {
                    "$ref": "#/definitions/AppSearchPlanControlConfiguration"
                }, 
                "strategy": {
                    "$ref": "#/definitions/PlanStrategy"
                }
            }, 
            "description": "Defines configuration parameters that control how the plan (ie consisting of the cluster topology and AppSearch settings) is applied"
        }, 
        "SnapshotStatusInfo": {
            "required": [
                "count", 
                "healthy", 
                "recent_success"
            ], 
            "type": "object", 
            "properties": {
                "count": {
                    "type": "integer", 
                    "description": "Number of snapshots stored for this cluster", 
                    "format": "int32"
                }, 
                "scheduled_time": {
                    "type": "string", 
                    "description": "Scheduled time of next snapshot attempt", 
                    "format": "date-time"
                }, 
                "latest_end_time": {
                    "type": "string", 
                    "description": "The end time of the most recently attempted snapshot", 
                    "format": "date-time"
                }, 
                "healthy": {
                    "type": "boolean", 
                    "description": "Health status of snapshots for this cluster"
                }, 
                "latest_successful": {
                    "type": "boolean", 
                    "description": "Latest snapshot status"
                }, 
                "recent_success": {
                    "type": "boolean", 
                    "description": "Indicates whether the cluster has a relatively recent successful snapshot."
                }, 
                "latest_successful_end_time": {
                    "type": "string", 
                    "description": "The end time of the most recently successful snapshot", 
                    "format": "date-time"
                }, 
                "latest_status": {
                    "type": "string", 
                    "description": "Status of the latest snapshot attempt, if any exist."
                }
            }, 
            "description": "Information about the snapshot status for the Elasticsearch cluster. For example, the health status."
        }, 
        "ElasticsearchConfiguration": {
            "type": "object", 
            "properties": {
                "user_settings_override_json": {
                    "type": "object", 
                    "description": "An arbitrary JSON object allowing ECE admins owners to set clusters' parameters (only one of this and 'user_settings_override_yaml' is allowed), ie in addition to the documented 'system_settings'. NOTES: (This field together with 'system_settings' and 'user_settings*' defines the total set of Elasticsearch settings)", 
                    "properties": {}
                }, 
                "enabled_built_in_plugins": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "A list of plugin names from the Elastic-supported subset that are bundled with the version images. NOTES: (Users should consult the Elastic stack objects to see what plugins are available, this is currently only available from the UI)"
                }, 
                "user_plugins": {
                    "items": {
                        "$ref": "#/definitions/ElasticsearchUserPlugin"
                    }, 
                    "type": "array", 
                    "description": "A list of admin-uploaded plugin objects that are available for this user."
                }, 
                "user_settings_yaml": {
                    "type": "string", 
                    "description": "An arbitrary YAML object allowing cluster owners to set their parameters (only one of this and 'user_settings_json' is allowed), provided they are on the whitelist ('user_settings_whitelist') and not on the blacklist ('user_settings_blacklist'). NOTES: (This field together with 'user_settings_override*' and 'system_settings' defines the total set of Elasticsearch settings)"
                }, 
                "user_bundles": {
                    "items": {
                        "$ref": "#/definitions/ElasticsearchUserBundle"
                    }, 
                    "type": "array", 
                    "description": "A list of admin-uploaded bundle objects (eg scripts, synonym files) that are available for this user."
                }, 
                "version": {
                    "type": "string", 
                    "description": "The version of the Elasticsearch cluster (must be one of the ECE supported versions). Currently cannot be different across the topology (and is generally specified in the globals). Defaults to the latest version if not specified."
                }, 
                "user_settings_json": {
                    "type": "object", 
                    "description": "An arbitrary JSON object allowing cluster owners to set their parameters (only one of this and 'user_settings_yaml' is allowed), provided they are on the whitelist ('user_settings_whitelist') and not on the blacklist ('user_settings_blacklist'). NOTES: (This field together with 'user_settings_override*' and 'system_settings' defines the total set of Elasticsearch settings)", 
                    "properties": {}
                }, 
                "curation": {
                    "description": "Defines the index curation routing for the cluster", 
                    "$ref": "#/definitions/ElasticsearchCuration"
                }, 
                "system_settings": {
                    "$ref": "#/definitions/ElasticsearchSystemSettings"
                }, 
                "user_settings_override_yaml": {
                    "type": "string", 
                    "description": "An arbitrary YAML object allowing ECE admins owners to set clusters' parameters (only one of this and 'user_settings_override_json' is allowed), ie in addition to the documented 'system_settings'. NOTES: (This field together with 'system_settings' and 'user_settings*' defines the total set of Elasticsearch settings)"
                }, 
                "docker_image": {
                    "type": "string", 
                    "description": "A docker URI that allows overriding of the default docker image specified for this version"
                }, 
                "node_attributes": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Defines the Elasticsearch node attributes for the instances in the topology"
                }
            }, 
            "description": "The Elasticsearch cluster settings. When specified at the top level, provides a field-by-field default. When specified at the topology level, provides the override settings."
        }, 
        "RestoreSnapshotConfiguration": {
            "required": [
                "snapshot_name"
            ], 
            "type": "object", 
            "properties": {
                "repository_config": {
                    "description": "Raw remote snapshot restore settings. Do not send this if you are sending source_cluster_id", 
                    "$ref": "#/definitions/RestoreSnapshotRepoConfiguration"
                }, 
                "repository_name": {
                    "type": "string", 
                    "description": "If specified, contains the name of the snapshot repository - else will default to the Elastic Cloud system repo ('found-snapshots')"
                }, 
                "restore_payload": {
                    "$ref": "#/definitions/RestoreSnapshotApiConfiguration"
                }, 
                "strategy": {
                    "enum": [
                        "partial", 
                        "full", 
                        "recovery"
                    ], 
                    "type": "string", 
                    "description": "The restore strategy to use. Defaults to a full restore. Partial restore will attempt to restore unavailable indices only"
                }, 
                "source_cluster_id": {
                    "type": "string", 
                    "description": "If specified, contains the name of the source cluster id. Do not send this if you are sending repository_config"
                }, 
                "snapshot_name": {
                    "type": "string", 
                    "description": "The name of the snapshot to restore. Use '\\_\\_latest_success\\_\\_' to get the most recent snapshot from the specified repository"
                }
            }, 
            "description": "Restores a snapshot from a local or remote repository."
        }, 
        "ApmConfiguration": {
            "type": "object", 
            "properties": {
                "user_settings_override_json": {
                    "type": "object", 
                    "description": "An arbitrary JSON object allowing ECE admins owners to set clusters' parameters (only one of this and 'user_settings_override_yaml' is allowed), ie in addition to the documented 'system_settings'. (This field together with 'system_settings' and 'user_settings*' defines the total set of Apm settings)", 
                    "properties": {}
                }, 
                "user_settings_yaml": {
                    "type": "string", 
                    "description": "An arbitrary YAML object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user_settings_json' is allowed), provided they are on the whitelist ('user_settings_whitelist') and not on the blacklist ('user_settings_blacklist'). (These field together with 'user_settings_override*' and 'system_settings' defines the total set of Apm settings)"
                }, 
                "version": {
                    "type": "string", 
                    "description": "The version of the Apm cluster (must be one of the ECE supported versions, and won't work unless it matches the APM version. Leave blank to auto-detect version.)"
                }, 
                "user_settings_json": {
                    "type": "object", 
                    "description": "An arbitrary JSON object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user_settings_yaml' is allowed), provided they are on the whitelist ('user_settings_whitelist') and not on the blacklist ('user_settings_blacklist'). (This field together with 'user_settings_override*' and 'system_settings' defines the total set of Apm settings)", 
                    "properties": {}
                }, 
                "system_settings": {
                    "$ref": "#/definitions/ApmSystemSettings"
                }, 
                "user_settings_override_yaml": {
                    "type": "string", 
                    "description": "An arbitrary YAML object allowing ECE admins owners to set clusters' parameters (only one of this and 'user_settings_override_json' is allowed), ie in addition to the documented 'system_settings'. (This field together with 'system_settings' and 'user_settings*' defines the total set of Apm settings)"
                }, 
                "docker_image": {
                    "type": "string", 
                    "description": "A docker URI that allows overriding of the default docker image specified for this version"
                }
            }, 
            "description": "The configuration options for the APM Server."
        }, 
        "ManagedMonitoringSettings": {
            "required": [
                "target_cluster_id"
            ], 
            "type": "object", 
            "properties": {
                "target_cluster_id": {
                    "type": "string", 
                    "description": "The Id of the target cluster to which to send monitoring information"
                }
            }, 
            "description": "The settings for sending monitoring information to another cluster."
        }, 
        "ElasticsearchScriptingUserSettings": {
            "type": "object", 
            "properties": {
                "expressions_enabled": {
                    "type": "boolean", 
                    "description": "(5.x+ only) If enabled (the default) then the expressions scripting engine is allowed as a sandboxed language. Sandboxed languages are the only ones allowed if 'sandbox_mode' is set to true. NOTES: (Corresponds to the parameters 'script.engine.expression.[file|stored|inline]')"
                }, 
                "stored": {
                    "$ref": "#/definitions/ElasticsearchScriptTypeSettings"
                }, 
                "painless_enabled": {
                    "type": "boolean", 
                    "description": "(5.x+ only) If enabled (the default) then the painless scripting engine is allowed as a sandboxed language. Sandboxed languages are the only ones allowed if 'sandbox_mode' is set to true. NOTES: (Corresponds to the parameters 'script.engine.painless.[file|stored|inline]')"
                }, 
                "file": {
                    "$ref": "#/definitions/ElasticsearchScriptTypeSettings"
                }, 
                "inline": {
                    "$ref": "#/definitions/ElasticsearchScriptTypeSettings"
                }, 
                "mustache_enabled": {
                    "type": "boolean", 
                    "description": "(5.x+ only) If enabled (the default) then the mustache scripting engine is allowed as a sandboxed language. Sandboxed languages are the only ones allowed if 'sandbox_mode' is set to true. NOTES: (Corresponds to the parameters 'script.engine.mustache.[file|stored|inline]')"
                }
            }, 
            "description": "Controls the languages supported by the Elasticsearch cluster, such as Painless, Mustache, and Expressions. Controls how the languages are used, such as file, index, and inline. TIP: For complex configurations, leave these blank and configure these settings in the user YAML or JSON."
        }, 
        "PlanStrategy": {
            "type": "object", 
            "properties": {
                "rolling": {
                    "$ref": "#/definitions/RollingStrategyConfig"
                }, 
                "rolling_grow_and_shrink": {
                    "$ref": "#/definitions/RollingGrowShrinkStrategyConfig"
                }, 
                "grow_and_shrink": {
                    "$ref": "#/definitions/GrowShrinkStrategyConfig"
                }, 
                "autodetect": {
                    "$ref": "#/definitions/AutodetectStrategyConfig"
                }
            }, 
            "description": "The options for performing a plan change. Specify only one property each time. The default is `grow_and_shrink`."
        }, 
        "ElasticsearchClusterUser": {
            "required": [
                "password_hash", 
                "username"
            ], 
            "type": "object", 
            "properties": {
                "username": {
                    "type": "string", 
                    "description": "The username"
                }, 
                "password_hash": {
                    "type": "string", 
                    "description": "The hashed password"
                }
            }, 
            "description": "The information about an Elasticsearch cluster user."
        }, 
        "ElasticsearchShardsInfo": {
            "required": [
                "available_shards", 
                "healthy", 
                "unavailable_replicas", 
                "unavailable_shards"
            ], 
            "type": "object", 
            "properties": {
                "healthy": {
                    "type": "boolean", 
                    "description": "Whether the shard situation is healthy (any unavailable shards is unhealthy)"
                }, 
                "unavailable_shards": {
                    "items": {
                        "$ref": "#/definitions/ElasticsearchShardElement"
                    }, 
                    "type": "array"
                }, 
                "unavailable_replicas": {
                    "items": {
                        "$ref": "#/definitions/ElasticsearchReplicaElement"
                    }, 
                    "type": "array"
                }, 
                "available_shards": {
                    "items": {
                        "$ref": "#/definitions/ElasticsearchShardElement"
                    }, 
                    "type": "array"
                }
            }, 
            "description": "Information about the shards and replicas that comprise the Elasticsearch indices."
        }, 
        "ElasticsearchClusterPlanInfo": {
            "required": [
                "healthy", 
                "plan_attempt_log"
            ], 
            "type": "object", 
            "properties": {
                "attempt_end_time": {
                    "type": "string", 
                    "description": "If this plan completed or failed (ie is not pending), when the attempt ended (ISO format in UTC)", 
                    "format": "date-time"
                }, 
                "plan_attempt_id": {
                    "type": "string", 
                    "description": "A UUID for each plan attempt"
                }, 
                "healthy": {
                    "type": "boolean", 
                    "description": "Either the plan ended successfully, or is not yet completed (and no errors have occurred)"
                }, 
                "plan_end_time": {
                    "type": "string", 
                    "description": "If this plan is not current or pending, when the plan was no longer active (ISO format in UTC)", 
                    "format": "date-time"
                }, 
                "source": {
                    "description": "Information describing the source that facilitated the plans current state", 
                    "$ref": "#/definitions/ChangeSourceInfo"
                }, 
                "plan_attempt_log": {
                    "items": {
                        "$ref": "#/definitions/ClusterPlanStepInfo"
                    }, 
                    "type": "array"
                }, 
                "plan": {
                    "$ref": "#/definitions/ElasticsearchClusterPlan"
                }, 
                "plan_attempt_name": {
                    "type": "string", 
                    "description": "A human readable name for each plan attempt, only populated when retrieving plan histories"
                }, 
                "attempt_start_time": {
                    "type": "string", 
                    "description": "When this plan attempt (ie to apply the plan to the cluster) started (ISO format in UTC)", 
                    "format": "date-time"
                }
            }, 
            "description": "Information about the Elasticsearch cluster plan."
        }, 
        "ElasticsearchReplicaElement": {
            "required": [
                "instance_name", 
                "replica_count"
            ], 
            "type": "object", 
            "properties": {
                "instance_name": {
                    "type": "string", 
                    "description": "The Elastic Cloud name/id of the instance (container)"
                }, 
                "replica_count": {
                    "type": "integer", 
                    "description": "The number of unavailable replicas on this instance", 
                    "format": "int32"
                }
            }, 
            "description": "Information about the unavailable replicas. NOTE: Unlike shards, unavailable replicas indicate a loss of redundancy rather than a loss of availability."
        }, 
        "ApiKeysResponse": {
            "required": [
                "keys"
            ], 
            "type": "object", 
            "properties": {
                "keys": {
                    "items": {
                        "$ref": "#/definitions/ApiKeyResponse"
                    }, 
                    "type": "array", 
                    "description": "The list of API keys."
                }
            }, 
            "description": "The response model for the API keys."
        }, 
        "EnterpriseSearchPlansInfo": {
            "required": [
                "healthy", 
                "history"
            ], 
            "type": "object", 
            "properties": {
                "healthy": {
                    "type": "boolean", 
                    "description": "Whether the plan situation is healthy (if unhealthy, means the last plan attempt failed)"
                }, 
                "current": {
                    "$ref": "#/definitions/EnterpriseSearchPlanInfo"
                }, 
                "pending": {
                    "$ref": "#/definitions/EnterpriseSearchPlanInfo"
                }, 
                "history": {
                    "items": {
                        "$ref": "#/definitions/EnterpriseSearchPlanInfo"
                    }, 
                    "type": "array"
                }
            }, 
            "description": "Information about current, pending, and past Enterprise Search Server plans."
        }, 
        "ApmPayload": {
            "required": [
                "elasticsearch_cluster_ref_id", 
                "plan", 
                "ref_id", 
                "region"
            ], 
            "type": "object", 
            "properties": {
                "elasticsearch_cluster_ref_id": {
                    "type": "string", 
                    "description": "Alias to the Elasticsearch Cluster to attach APM to"
                }, 
                "display_name": {
                    "type": "string", 
                    "description": "The human readable name for the APM cluster (default: takes the name of its Elasticsearch cluster)"
                }, 
                "settings": {
                    "description": "The settings for building this APM cluster", 
                    "$ref": "#/definitions/ApmSettings"
                }, 
                "region": {
                    "type": "string", 
                    "description": "The region where this resource exists"
                }, 
                "ref_id": {
                    "type": "string", 
                    "description": "A locally-unique user-specified id for APM"
                }, 
                "plan": {
                    "$ref": "#/definitions/ApmPlan"
                }
            }, 
            "description": "An APM creation request paired with the alias of the Elasticsearch cluster it should be paired with"
        }, 
        "BasicFailedReplyElement": {
            "required": [
                "code", 
                "message"
            ], 
            "type": "object", 
            "properties": {
                "fields": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "If the error can be tied to a specific field or fields in the user request, this lists those fields"
                }, 
                "message": {
                    "type": "string", 
                    "description": "A human readable message describing the error that occurred"
                }, 
                "code": {
                    "type": "string", 
                    "description": "A structured code representing the error type that occurred"
                }
            }
        }, 
        "RestoreSnapshotApiConfiguration": {
            "type": "object", 
            "properties": {
                "indices": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "The list of indices to restore (supports +ve and -ve selection and wildcarding - see the default Elasticsearch index format documentation)"
                }, 
                "raw_settings": {
                    "type": "object", 
                    "description": "This JSON object (merged with the 'indices' field (if present) is passed untouched into the restore command - see the Elasticsearch '_snapshot' documentation for more details on supported formats", 
                    "properties": {}
                }
            }, 
            "description": "The configuration for the restore command, such as which indices you want to restore."
        }, 
        "TransientElasticsearchPlanConfiguration": {
            "type": "object", 
            "properties": {
                "plan_configuration": {
                    "$ref": "#/definitions/ElasticsearchPlanControlConfiguration"
                }, 
                "cluster_settings_json": {
                    "type": "object", 
                    "description": "If specified, contains transient settings to be applied to an Elasticsearch cluster during changes, default values shown below applied.\nThese can be overridden by specifying them in the map (or null to unset). Additional settings can also be set. Settings will be cleared after the plan has finished. If not specified, no settings will be applied.\nNOTE: These settings are only explicitly cleared for 5.x+ clusters, they must be hand-reset to their defaults in 2.x- (or a cluster reboot will clear them).\n- indices.store.throttle.max_bytes_per_sec: 150Mb\n- indices.recovery.max_bytes_per_sec: 150Mb\n- cluster.routing.allocation.cluster_concurrent_rebalance: 10\n- cluster.routing.allocation.node_initial_primaries_recoveries: 8\n- cluster.routing.allocation.node_concurrent_incoming_recoveries: 8\n", 
                    "properties": {}
                }, 
                "remote_clusters": {
                    "description": "The list of resources that will be configured as remote clusters", 
                    "$ref": "#/definitions/RemoteResources"
                }, 
                "restore_snapshot": {
                    "$ref": "#/definitions/RestoreSnapshotConfiguration"
                }, 
                "strategy": {
                    "$ref": "#/definitions/PlanStrategy"
                }
            }, 
            "description": "Defines the configuration parameters that control how the plan is applied. For example, the Elasticsearch cluster topology and Elasticsearch settings."
        }, 
        "ClusterPlanStepLogMessageInfo": {
            "required": [
                "details", 
                "message", 
                "stage", 
                "timestamp"
            ], 
            "type": "object", 
            "properties": {
                "timestamp": {
                    "type": "string", 
                    "description": "Timestamp marking on info log of step", 
                    "format": "date-time"
                }, 
                "delta_in_millis": {
                    "type": "integer", 
                    "description": "Time in milliseconds since previous log message", 
                    "format": "int64"
                }, 
                "details": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "A map with details for the log about what happened during the step execution. Keys and values for are always both strings, representing the name of the detail and its value, respectively."
                }, 
                "failure_type": {
                    "type": "string", 
                    "description": "The failure type, in case the step failed"
                }, 
                "message": {
                    "type": "string", 
                    "description": "Human readable log message"
                }, 
                "stage": {
                    "enum": [
                        "starting", 
                        "completed", 
                        "in_progress"
                    ], 
                    "type": "string", 
                    "description": "Stage that info log message takes place in"
                }
            }, 
            "description": "The log message from a specified stage of an executed step in a plan."
        }, 
        "DeploymentUpdateRequest": {
            "required": [
                "prune_orphans"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "A new name for the deployment, otherwise stays the same."
                }, 
                "settings": {
                    "description": "Any new configuration for the current deployment object. If there is no new configuration the value is unchanged.", 
                    "$ref": "#/definitions/DeploymentUpdateSettings"
                }, 
                "prune_orphans": {
                    "type": "boolean", 
                    "description": "Whether or not to prune orphan resources that are no longer mentioned in this request. Note that resourcesare tracked by ref_id, and if a resource's ref_id is changed, any previous running resources created with that previousref_id are considered to be orphaned as well."
                }, 
                "alias": {
                    "type": "string", 
                    "description": "A user-defined alias to use in place of Cluster IDs for user-friendly URLs"
                }, 
                "resources": {
                    "description": "New information about the Resources that will have this Deployment, otherwise they stay the same", 
                    "$ref": "#/definitions/DeploymentUpdateResources"
                }, 
                "metadata": {
                    "description": "Any new information about the current deployment object. If there is no new information the value is unchanged.", 
                    "$ref": "#/definitions/DeploymentUpdateMetadata"
                }
            }, 
            "description": "A request for updating a Deployment consisting of multiple resources"
        }, 
        "KibanaConfiguration": {
            "type": "object", 
            "properties": {
                "user_settings_override_json": {
                    "type": "object", 
                    "description": "An arbitrary JSON object allowing ECE admins owners to set clusters' parameters (only one of this and 'user_settings_override_yaml' is allowed), ie in addition to the documented 'system_settings'. (This field together with 'system_settings' and 'user_settings*' defines the total set of Kibana settings)", 
                    "properties": {}
                }, 
                "user_settings_yaml": {
                    "type": "string", 
                    "description": "An arbitrary YAML object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user_settings_json' is allowed), provided they are on the whitelist ('user_settings_whitelist') and not on the blacklist ('user_settings_blacklist'). (These field together with 'user_settings_override*' and 'system_settings' defines the total set of Kibana settings)"
                }, 
                "version": {
                    "type": "string", 
                    "description": "The version of the Kibana cluster (must be one of the ECE supported versions, and won't work unless it matches the Elasticsearch version. Leave blank to auto-detect version.)"
                }, 
                "user_settings_json": {
                    "type": "object", 
                    "description": "An arbitrary JSON object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user_settings_yaml' is allowed), provided they are on the whitelist ('user_settings_whitelist') and not on the blacklist ('user_settings_blacklist'). (This field together with 'user_settings_override*' and 'system_settings' defines the total set of Kibana settings)", 
                    "properties": {}
                }, 
                "system_settings": {
                    "$ref": "#/definitions/KibanaSystemSettings"
                }, 
                "user_settings_override_yaml": {
                    "type": "string", 
                    "description": "An arbitrary YAML object allowing ECE admins owners to set clusters' parameters (only one of this and 'user_settings_override_json' is allowed), ie in addition to the documented 'system_settings'. (This field together with 'system_settings' and 'user_settings*' defines the total set of Kibana settings)"
                }, 
                "docker_image": {
                    "type": "string", 
                    "description": "A docker URI that allows overriding of the default docker image specified for this version"
                }
            }, 
            "description": "The Kibana instance settings. When specified at the top level, provides a field-by-field default. When specified at the topology level, provides the override settings."
        }, 
        "RestoreSnapshotRepoConfiguration": {
            "type": "object", 
            "properties": {
                "raw_settings": {
                    "type": "object", 
                    "description": "The remote snapshot settings raw JSON - see the Elasticsearch '_snapshot' documentation for more details on supported formats", 
                    "properties": {}
                }
            }, 
            "description": "Configures the location of a remote repository. The default is the system repository."
        }, 
        "KeystoreSecret": {
            "type": "object", 
            "properties": {
                "as_file": {
                    "type": "boolean", 
                    "description": "Stores the keystore secret as a file. The default is false, which stores the keystore secret as string when value is a plain string, or true when value is an object."
                }, 
                "value": {
                    "type": "object", 
                    "description": "Value of this setting. This can either be a string or a JSON object that is stored as a JSON string in the keystore. NOTE: When the keystore secret is unspecified, it is removed.", 
                    "properties": {}
                }
            }, 
            "description": "The value that you configure for the Elasticsearch keystore secret."
        }, 
        "ClusterMetadataPortInfo": {
            "required": [
                "http", 
                "https", 
                "transport_passthrough"
            ], 
            "type": "object", 
            "properties": {
                "transport_passthrough": {
                    "type": "integer", 
                    "description": "Port where the cluster listens for transport traffic using TLS", 
                    "format": "int32"
                }, 
                "http": {
                    "type": "integer", 
                    "description": "Port where the cluster listens for HTTP traffic", 
                    "format": "int32"
                }, 
                "https": {
                    "type": "integer", 
                    "description": "Port where the cluster listens for HTTPS traffic", 
                    "format": "int32"
                }
            }, 
            "description": "Information about the ports that allow communication between the Elasticsearch cluster and various protocols."
        }, 
        "ElasticsearchNodeType": {
            "type": "object", 
            "properties": {
                "data": {
                    "type": "boolean", 
                    "description": "Defines whether this node can hold data (default: false)"
                }, 
                "master": {
                    "type": "boolean", 
                    "description": "Defines whether this node can be elected master (default: false)"
                }, 
                "ingest": {
                    "type": "boolean", 
                    "description": "Defines whether this node can run an ingest pipeline (default: false)"
                }, 
                "ml": {
                    "type": "boolean", 
                    "description": "Defines whether this node can run ml jobs, valid only for versions 5.4.0 or greater (default: false)"
                }
            }, 
            "description": "Controls the combinations of Elasticsearch node types. TIP: By default, the Elasticsearch node is master eligible, can hold data, and run ingest pipelines. WARNING: Do not set for tiebreaker topologies."
        }, 
        "DeploymentResourceUpgradeResponse": {
            "required": [
                "resource_id", 
                "stack_version"
            ], 
            "type": "object", 
            "properties": {
                "stack_version": {
                    "type": "string"
                }, 
                "resource_id": {
                    "type": "string"
                }
            }
        }, 
        "CrossClusterSearchInfo": {
            "required": [
                "healthy", 
                "remote_clusters"
            ], 
            "type": "object", 
            "properties": {
                "healthy": {
                    "type": "boolean", 
                    "description": "Flag signaling health issues when at least one remote has an incompatible version with this cluster"
                }, 
                "remote_clusters": {
                    "items": {
                        "$ref": "#/definitions/RemoteClusterInfo"
                    }, 
                    "type": "array", 
                    "description": "The list of remote clusters this cluster can access using cross-cluster search"
                }
            }, 
            "description": "The cross-cluster search settings and status for the Elasticsearch cluster."
        }, 
        "DeploymentDiagnostics": {
            "type": "object", 
            "properties": {
                "creates": {
                    "description": "Diagnostics for resources to be created", 
                    "$ref": "#/definitions/Creates"
                }, 
                "updates": {
                    "description": "Diagnostics for existing resources that may be updated", 
                    "$ref": "#/definitions/Updates"
                }
            }, 
            "description": "Describes the diagnostics for a given Deployment-modifying payload"
        }, 
        "ElasticsearchDependant": {
            "required": [
                "id", 
                "kind"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "type": "string", 
                    "description": "The kind of resource"
                }, 
                "id": {
                    "type": "string", 
                    "description": "The id of the orphaned resource"
                }
            }, 
            "description": "Details about an orphaned Elasticsearch-dependent resources."
        }, 
        "EnterpriseSearchPlanInfo": {
            "required": [
                "healthy", 
                "plan_attempt_log"
            ], 
            "type": "object", 
            "properties": {
                "attempt_end_time": {
                    "type": "string", 
                    "description": "If this plan completed or failed (ie is not pending), when the attempt ended (ISO format in UTC)", 
                    "format": "date-time"
                }, 
                "plan_attempt_id": {
                    "type": "string", 
                    "description": "A UUID for each plan attempt"
                }, 
                "healthy": {
                    "type": "boolean", 
                    "description": "Either the plan ended successfully, or is not yet completed (and no errors have occurred)"
                }, 
                "plan_end_time": {
                    "type": "string", 
                    "description": "If this plan is not current or pending, when the plan was no longer active (ISO format in UTC)", 
                    "format": "date-time"
                }, 
                "source": {
                    "description": "Information describing the source that facilitated the plans current state", 
                    "$ref": "#/definitions/ChangeSourceInfo"
                }, 
                "plan_attempt_log": {
                    "items": {
                        "$ref": "#/definitions/ClusterPlanStepInfo"
                    }, 
                    "type": "array"
                }, 
                "plan": {
                    "$ref": "#/definitions/EnterpriseSearchPlan"
                }, 
                "plan_attempt_name": {
                    "type": "string", 
                    "description": "A human readable name for each plan attempt, only populated when retrieving plan histories"
                }, 
                "attempt_start_time": {
                    "type": "string", 
                    "description": "When this plan attempt (ie to apply the plan to the Enterprise Search) started (ISO format in UTC)", 
                    "format": "date-time"
                }
            }, 
            "description": "Information about the Enterprise Search Server plan."
        }, 
        "ApmSettings": {
            "type": "object", 
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/ClusterMetadataSettings"
                }
            }, 
            "description": "The settings for the APM Server."
        }, 
        "DeploymentTemplateInfoV2": {
            "required": [
                "deployment_template", 
                "id", 
                "instance_configurations", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "instance_configurations": {
                    "items": {
                        "$ref": "#/definitions/InstanceConfigurationInfo"
                    }, 
                    "type": "array", 
                    "description": "List of instance configurations used in the cluster template."
                }, 
                "description": {
                    "type": "string", 
                    "description": "An optional description for the template."
                }, 
                "template_category_id": {
                    "type": "string", 
                    "description": "Provider and version agnostic template identifier used for grouping related template types."
                }, 
                "min_version": {
                    "type": "string", 
                    "description": "Minimum stack version required by this template, if any."
                }, 
                "kibana_deeplink": {
                    "items": {
                        "$ref": "#/definitions/KibanaDeeplink"
                    }, 
                    "type": "array", 
                    "description": "The Kibana Deeplink for this type of deployment."
                }, 
                "id": {
                    "type": "string", 
                    "description": "The unique identifier for the template."
                }, 
                "order": {
                    "type": "integer", 
                    "description": "Determines the order in which this template should be returned when listed. Templates are returned in ascending order. If not specified, then the template willbe appended to the end of the list.", 
                    "format": "int32"
                }, 
                "source": {
                    "description": "Information describing the source that created or modified the template.", 
                    "$ref": "#/definitions/ChangeSourceInfo"
                }, 
                "deployment_template": {
                    "description": "The body of the deployment template to use for creating a deployment.", 
                    "$ref": "#/definitions/DeploymentCreateRequest"
                }, 
                "metadata": {
                    "items": {
                        "$ref": "#/definitions/MetadataItem"
                    }, 
                    "type": "array", 
                    "description": "Optional arbitrary metadata to associate with this template."
                }, 
                "system_owned": {
                    "type": "boolean", 
                    "description": "Whether or not if this is system owned template."
                }, 
                "name": {
                    "type": "string", 
                    "description": "A human readable name for the template."
                }
            }, 
            "description": "Deployment template detailed information"
        }, 
        "ElasticsearchMonitoringInfo": {
            "required": [
                "destination_cluster_ids", 
                "healthy", 
                "last_modified", 
                "last_update_status", 
                "source_cluster_ids"
            ], 
            "type": "object", 
            "properties": {
                "healthy": {
                    "type": "boolean", 
                    "description": "Whether the Monitoring configuration has been successfully applied"
                }, 
                "last_update_status": {
                    "type": "string", 
                    "description": "The status message from the last update (successful or not)"
                }, 
                "destination_cluster_ids": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "The list of clusters Ids to which this cluster is currently sending monitoring data"
                }, 
                "last_modified": {
                    "type": "string", 
                    "description": "The time the monitoring configuration was last changed", 
                    "format": "date-time"
                }, 
                "source_cluster_ids": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "The list of clusters Ids from which this cluster is currently receiving monitoring data"
                }
            }, 
            "description": "Information about the monitoring status for the Elasticsearch cluster."
        }, 
        "DeploymentCreateRequest": {
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "alias": {
                    "type": "string", 
                    "description": "A user-defined alias to use in place of Cluster IDs for user-friendly URLs"
                }, 
                "metadata": {
                    "description": "Additional information about this deployment", 
                    "$ref": "#/definitions/DeploymentCreateMetadata"
                }, 
                "name": {
                    "type": "string", 
                    "description": "A name for the deployment; otherwise this will be the generated deployment id"
                }, 
                "resources": {
                    "description": "The Resources that will belong to this Deployment", 
                    "$ref": "#/definitions/DeploymentCreateResources"
                }, 
                "settings": {
                    "description": "Additional configuration for this Deployment", 
                    "$ref": "#/definitions/DeploymentCreateSettings"
                }
            }, 
            "description": "A request for creating a new Deployment consisting of multiple clusters"
        }, 
        "KibanaClusterInfo": {
            "required": [
                "cluster_id", 
                "cluster_name", 
                "elasticsearch_cluster", 
                "external_links", 
                "healthy", 
                "metadata", 
                "plan_info", 
                "status", 
                "topology"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "enum": [
                        "initializing", 
                        "stopping", 
                        "stopped", 
                        "rebooting", 
                        "restarting", 
                        "reconfiguring", 
                        "started"
                    ], 
                    "type": "string", 
                    "description": "Cluster status"
                }, 
                "links": {
                    "additionalProperties": {
                        "$ref": "#/definitions/Hyperlink"
                    }, 
                    "type": "object", 
                    "description": "A map of application-specific operations (which map to 'operationId's in the Swagger API) to metadata about that operation"
                }, 
                "elasticsearch_cluster": {
                    "$ref": "#/definitions/TargetElasticsearchCluster"
                }, 
                "healthy": {
                    "type": "boolean", 
                    "description": "Whether the cluster is healthy or not (one or more of the info subsections will have healthy: false)"
                }, 
                "region": {
                    "type": "string", 
                    "description": "The region that this cluster belongs to. Only populated in SaaS or federated ECE."
                }, 
                "settings": {
                    "description": "The cluster metadata settings for a kibana cluster", 
                    "$ref": "#/definitions/KibanaClusterSettings"
                }, 
                "cluster_name": {
                    "type": "string", 
                    "description": "The name of the cluster"
                }, 
                "plan_info": {
                    "$ref": "#/definitions/KibanaClusterPlansInfo"
                }, 
                "cluster_id": {
                    "type": "string", 
                    "description": "The id of the cluster"
                }, 
                "external_links": {
                    "uniqueItems": true, 
                    "items": {
                        "$ref": "#/definitions/ExternalHyperlink"
                    }, 
                    "type": "array", 
                    "description": "External resources related to the cluster"
                }, 
                "deployment_id": {
                    "type": "string", 
                    "description": "The id of the deployment to which this Kibana Server belongs to."
                }, 
                "topology": {
                    "$ref": "#/definitions/ClusterTopologyInfo"
                }, 
                "metadata": {
                    "$ref": "#/definitions/ClusterMetadataInfo"
                }
            }, 
            "description": "The top-level object information for a Kibana instance."
        }, 
        "ElasticsearchScriptTypeSettings": {
            "type": "object", 
            "properties": {
                "enabled": {
                    "type": "boolean", 
                    "description": "If enabled (default: true) then scripts are enabled, either for sandboxing languages (by default), or for all installed languages if 'sandbox_mode' is disabled (or for 6.x). NOTES: (Corresponds to the parameter 'script.file|stored/indexed|inline')"
                }, 
                "sandbox_mode": {
                    "type": "boolean", 
                    "description": "If enabled (default: true) and this script type is enabled, then only the sandbox languages are allowed. By default the sandbox languages are painless, expressions and mustache, but this can be restricted via the 'painless_enabled', 'mustache_enabled' 'expression_enabled' settings.NOTES: Not supported in 6.x. (Corresponds to the parameters 'script.engine.[painless|mustache|expressions].[file|stored|inline]')"
                }
            }, 
            "description": "Enables scripting for the specified type and controls other parameters. Store scripts in indexes (`stored`), upload in file bundles (`file`), or use in API requests (`inline`)."
        }, 
        "AppSearchPlansInfo": {
            "required": [
                "healthy", 
                "history"
            ], 
            "type": "object", 
            "properties": {
                "healthy": {
                    "type": "boolean", 
                    "description": "Whether the plan situation is healthy (if unhealthy, means the last plan attempt failed)"
                }, 
                "current": {
                    "$ref": "#/definitions/AppSearchPlanInfo"
                }, 
                "pending": {
                    "$ref": "#/definitions/AppSearchPlanInfo"
                }, 
                "history": {
                    "items": {
                        "$ref": "#/definitions/AppSearchPlanInfo"
                    }, 
                    "type": "array"
                }
            }, 
            "description": "Information about current, pending, and past App Search Server plans."
        }, 
        "AppSearchConfiguration": {
            "type": "object", 
            "properties": {
                "user_settings_override_json": {
                    "type": "object", 
                    "description": "An arbitrary JSON object allowing ECE admins owners to set clusters' parameters (only one of this and 'user_settings_override_yaml' is allowed), ie in addition to the documented 'system_settings'. (This field together with 'system_settings' and 'user_settings*' defines the total set of AppSearch settings)", 
                    "properties": {}
                }, 
                "user_settings_yaml": {
                    "type": "string", 
                    "description": "An arbitrary YAML object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user_settings_json' is allowed), provided they are on the whitelist ('user_settings_whitelist') and not on the blacklist ('user_settings_blacklist'). (These field together with 'user_settings_override*' and 'system_settings' defines the total set of AppSearch settings)"
                }, 
                "version": {
                    "type": "string", 
                    "description": "The version of the AppSearch cluster (must be one of the ECE supported versions, and won't work unless it matches the Elasticsearch version. Leave blank to auto-detect version.)"
                }, 
                "user_settings_json": {
                    "type": "object", 
                    "description": "An arbitrary JSON object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user_settings_yaml' is allowed), provided they are on the whitelist ('user_settings_whitelist') and not on the blacklist ('user_settings_blacklist'). (This field together with 'user_settings_override*' and 'system_settings' defines the total set of AppSearch settings)", 
                    "properties": {}
                }, 
                "system_settings": {
                    "$ref": "#/definitions/AppSearchSystemSettings"
                }, 
                "user_settings_override_yaml": {
                    "type": "string", 
                    "description": "An arbitrary YAML object allowing ECE admins owners to set clusters' parameters (only one of this and 'user_settings_override_json' is allowed), ie in addition to the documented 'system_settings'. (This field together with 'system_settings' and 'user_settings*' defines the total set of AppSearch settings)"
                }, 
                "docker_image": {
                    "type": "string", 
                    "description": "A docker URI that allows overriding of the default docker image specified for this version"
                }
            }
        }, 
        "RollingGrowShrinkStrategyConfig": {
            "type": "object", 
            "description": "A strategy that creates new Elasticsearch instances, Kibana instances, and APM Servers with the new plan, then migrates the node data to minimize the amount of spare capacity."
        }, 
        "ClusterMetadataInfo": {
            "required": [
                "last_modified", 
                "version"
            ], 
            "type": "object", 
            "properties": {
                "endpoint": {
                    "type": "string", 
                    "description": "The DNS name of the cluster endpoint, if available"
                }, 
                "cloud_id": {
                    "type": "string", 
                    "description": "The cloud ID, an encoded string that provides other Elastic services with the necessary information to connect to this Elasticsearch and Kibana (only present if both exist)"
                }, 
                "last_modified": {
                    "type": "string", 
                    "description": "The most recent time the cluster metadata was changed (ISO format in UTC)", 
                    "format": "date-time"
                }, 
                "aliased_endpoint": {
                    "type": "string", 
                    "description": "The DNS name of the cluster endpoint derived from the deployment alias, if available"
                }, 
                "raw": {
                    "type": "object", 
                    "description": "An unstructured JSON representation of the public and internal state (can be filtered out via URL parameter). The contents and structure of the `raw` field can change at any time. ", 
                    "properties": {}
                }, 
                "version": {
                    "type": "integer", 
                    "description": "The resource version number of the cluster metadata", 
                    "format": "int32"
                }, 
                "service_url": {
                    "type": "string", 
                    "description": "The full URL to access this deployment resource"
                }, 
                "aliased_url": {
                    "type": "string", 
                    "description": "The full aliased URL to access this deployment resource"
                }, 
                "services_urls": {
                    "items": {
                        "$ref": "#/definitions/ServiceUrl"
                    }, 
                    "type": "array", 
                    "description": "A list of the URLs to access services that the resource provides at this time. Note that if the service is not running or has not started yet, the URL to access it won't be available"
                }, 
                "ports": {
                    "description": "The ports that allow communication with the cluster using various protocols.", 
                    "$ref": "#/definitions/ClusterMetadataPortInfo"
                }
            }, 
            "description": "Information about the public and internal state, and the configuration settings of an Elasticsearch cluster."
        }, 
        "Extensions": {
            "required": [
                "extensions"
            ], 
            "type": "object", 
            "properties": {
                "extensions": {
                    "items": {
                        "$ref": "#/definitions/Extension"
                    }, 
                    "type": "array", 
                    "description": "The list of extensions."
                }
            }, 
            "description": "A collection of extensions"
        }, 
        "RemoteClusterInfo": {
            "required": [
                "compatible", 
                "id"
            ], 
            "type": "object", 
            "properties": {
                "compatible": {
                    "type": "boolean", 
                    "description": "Flag indicating whether the remote cluster version is compatible"
                }, 
                "version": {
                    "type": "string", 
                    "description": "Remote cluster Elasticsearch version"
                }, 
                "id": {
                    "type": "string", 
                    "description": "The remote Elasticsearch cluster deployment id"
                }
            }, 
            "description": "Information about the remote cluster for cross-cluster search."
        }, 
        "ElasticsearchClusterSecurityInfo": {
            "required": [
                "last_modified", 
                "roles", 
                "users", 
                "users_roles", 
                "version"
            ], 
            "type": "object", 
            "properties": {
                "users_roles": {
                    "items": {
                        "$ref": "#/definitions/ElasticsearchClusterRole"
                    }, 
                    "type": "array"
                }, 
                "roles": {
                    "type": "object", 
                    "description": "An arbitrarily nested JSON object mapping roles to sets of resources and permissions - see the Elasticsearch security documentation for more details on roles", 
                    "properties": {}
                }, 
                "version": {
                    "type": "integer", 
                    "description": "The resource version number of the security settings", 
                    "format": "int32"
                }, 
                "users": {
                    "items": {
                        "$ref": "#/definitions/ElasticsearchClusterUser"
                    }, 
                    "type": "array"
                }, 
                "last_modified": {
                    "type": "string", 
                    "description": "The most recent time the security settings were changed (ISO format in UTC)", 
                    "format": "date-time"
                }
            }, 
            "description": "For 2.x Elasticsearch clusters, specifies the information about the users and roles. For 5.x Elasticsearch clusters, use the Kibana management UI."
        }, 
        "AppSearch": {
            "required": [
                "backend_plan", 
                "display_name", 
                "elasticsearch_cluster_ref_id", 
                "ref_id"
            ], 
            "type": "object", 
            "properties": {
                "elasticsearch_cluster_ref_id": {
                    "type": "string", 
                    "description": "The user-specified id of the Elasticsearch Cluster that this will link to"
                }, 
                "backend_plan": {
                    "type": "object", 
                    "description": "The backend plan as JSON", 
                    "properties": {}
                }, 
                "display_name": {
                    "type": "string", 
                    "description": "The human readable name (defaults to the generated cluster id if not specified)"
                }, 
                "ref_id": {
                    "type": "string", 
                    "description": "A locally-unique user-specified id"
                }
            }, 
            "description": "Holds diagnostics for an AppSearch resource"
        }, 
        "DeploymentUpdateMetadata": {
            "type": "object", 
            "properties": {
                "tags": {
                    "items": {
                        "$ref": "#/definitions/MetadataItem"
                    }, 
                    "type": "array", 
                    "description": "Arbitrary user-defined metadata associated with this deployment"
                }
            }, 
            "description": "Additional information about the current deployment object."
        }, 
        "ApiKeyResponse": {
            "required": [
                "creation_date", 
                "description", 
                "id"
            ], 
            "type": "object", 
            "properties": {
                "creation_date": {
                    "type": "string", 
                    "description": "The date/time for when the API key is created.", 
                    "format": "date-time"
                }, 
                "user_id": {
                    "type": "string", 
                    "description": "The user ID."
                }, 
                "id": {
                    "type": "string", 
                    "description": "The API key ID."
                }, 
                "key": {
                    "type": "string", 
                    "description": "The API key. TIP: Since the API key is returned only once, save it in a safe place."
                }, 
                "description": {
                    "type": "string", 
                    "description": "The API key description. TIP: Useful when you have multiple API keys."
                }
            }, 
            "description": "The response model for an API key."
        }, 
        "TargetElasticsearchCluster": {
            "required": [
                "elasticsearch_id"
            ], 
            "type": "object", 
            "properties": {
                "elasticsearch_id": {
                    "type": "string", 
                    "description": "The Elasticsearch cluster Id"
                }, 
                "links": {
                    "additionalProperties": {
                        "$ref": "#/definitions/Hyperlink"
                    }, 
                    "type": "object", 
                    "description": "A map of application-specific operations (which map to 'operationId's in the Swagger API) to metadata about that operation"
                }
            }, 
            "description": "Information about the specified Elasticsearch cluster."
        }, 
        "DeploymentRestoreResponse": {
            "required": [
                "id"
            ], 
            "type": "object", 
            "properties": {
                "id": {
                    "type": "string", 
                    "description": "The id of the deployment"
                }
            }, 
            "description": "A response returned from the Deployment restore endpoint"
        }, 
        "ElasticsearchClusterRole": {
            "required": [
                "roles", 
                "username"
            ], 
            "type": "object", 
            "properties": {
                "username": {
                    "type": "string", 
                    "description": "The username"
                }, 
                "roles": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "The list of roles for this user"
                }
            }, 
            "description": "The authorization information for an Elasticsearch cluster user."
        }, 
        "BoolQuery": {
            "type": "object", 
            "properties": {
                "filter": {
                    "items": {
                        "$ref": "#/definitions/QueryContainer"
                    }, 
                    "type": "array"
                }, 
                "minimum_should_match": {
                    "type": "integer", 
                    "description": "The minimum number of optional should clauses to match.", 
                    "format": "int32"
                }, 
                "should": {
                    "items": {
                        "$ref": "#/definitions/QueryContainer"
                    }, 
                    "type": "array"
                }, 
                "must_not": {
                    "items": {
                        "$ref": "#/definitions/QueryContainer"
                    }, 
                    "type": "array"
                }, 
                "must": {
                    "items": {
                        "$ref": "#/definitions/QueryContainer"
                    }, 
                    "type": "array"
                }
            }, 
            "description": "A query for documents that match boolean combinations of other queries."
        }, 
        "FilterAssociation": {
            "required": [
                "entity_type", 
                "id"
            ], 
            "type": "object", 
            "properties": {
                "id": {
                    "type": "string", 
                    "description": "ID of the entity, such as the deployment ID or Elasticsearch cluster ID."
                }, 
                "entity_type": {
                    "type": "string", 
                    "description": "Type of the traffic filter ruleset association, such as 'deployment', 'cluster'"
                }
            }, 
            "description": "The association with a ruleset or user auth token for a deployment, template, or product."
        }, 
        "ExtensionFileMetadata": {
            "type": "object", 
            "properties": {
                "url": {
                    "type": "string", 
                    "description": "The temporary URL to download the extension file. Usable for verification.", 
                    "format": "uri"
                }, 
                "last_modified_date": {
                    "type": "string", 
                    "description": "The date and time the extension was last modified.", 
                    "format": "date-time"
                }, 
                "size": {
                    "type": "integer", 
                    "description": "The extension file size in bytes.", 
                    "format": "int64"
                }
            }
        }, 
        "ElasticsearchClusterPlan": {
            "required": [
                "cluster_topology", 
                "elasticsearch"
            ], 
            "type": "object", 
            "properties": {
                "autoscaling_enabled": {
                    "type": "boolean", 
                    "description": "Enable autoscaling for this Elasticsearch cluster."
                }, 
                "cluster_topology": {
                    "items": {
                        "$ref": "#/definitions/ElasticsearchClusterTopologyElement"
                    }, 
                    "type": "array"
                }, 
                "transient": {
                    "$ref": "#/definitions/TransientElasticsearchPlanConfiguration"
                }, 
                "elasticsearch": {
                    "$ref": "#/definitions/ElasticsearchConfiguration"
                }, 
                "deployment_template": {
                    "description": "Documents which deployment template was used in the creation of this plan", 
                    "$ref": "#/definitions/DeploymentTemplateReference"
                }
            }, 
            "description": "The plan for the Elasticsearch cluster."
        }, 
        "SearchRequest": {
            "type": "object", 
            "properties": {
                "sort": {
                    "items": {
                        "type": "object", 
                        "properties": {}
                    }, 
                    "type": "array", 
                    "description": "An array of fields to sort the search results by."
                }, 
                "query": {
                    "$ref": "#/definitions/QueryContainer"
                }, 
                "from": {
                    "type": "integer", 
                    "format": "int32"
                }, 
                "size": {
                    "type": "integer", 
                    "description": "The maximum number of search results to return.", 
                    "format": "int32"
                }
            }, 
            "description": "An Elasticsearch search request with a subset of options."
        }, 
        "UpdateExtensionRequest": {
            "required": [
                "extension_type", 
                "name", 
                "version"
            ], 
            "type": "object", 
            "properties": {
                "version": {
                    "type": "string", 
                    "description": "The Elasticsearch version."
                }, 
                "extension_type": {
                    "enum": [
                        "plugin", 
                        "bundle"
                    ], 
                    "type": "string", 
                    "description": "The extension type."
                }, 
                "name": {
                    "type": "string", 
                    "description": "The extension name."
                }, 
                "download_url": {
                    "type": "string", 
                    "description": "The URL to download the extension archive."
                }, 
                "description": {
                    "type": "string", 
                    "description": "The extension description."
                }
            }, 
            "description": "The body of a request to update an extension"
        }, 
        "ElasticsearchClusterBlockingIssues": {
            "required": [
                "cluster_level", 
                "healthy", 
                "index_level"
            ], 
            "type": "object", 
            "properties": {
                "healthy": {
                    "type": "boolean", 
                    "description": "Whether the cluster has issues (false) or not (true)"
                }, 
                "cluster_level": {
                    "items": {
                        "$ref": "#/definitions/ElasticsearchClusterBlockingIssueElement"
                    }, 
                    "type": "array", 
                    "description": "A list of issues that affect availability of entire cluster"
                }, 
                "index_level": {
                    "items": {
                        "$ref": "#/definitions/ElasticsearchClusterBlockingIssueElement"
                    }, 
                    "type": "array", 
                    "description": "A list of issues that affect availability of the cluster's indices"
                }
            }, 
            "description": "Issues that prevent the Elasticsearch cluster or index from correctly operating."
        }, 
        "Orphaned": {
            "required": [
                "apm", 
                "appsearch", 
                "elasticsearch", 
                "enterprise_search", 
                "kibana"
            ], 
            "type": "object", 
            "properties": {
                "appsearch": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of orphaned AppSearch resource ids"
                }, 
                "elasticsearch": {
                    "items": {
                        "$ref": "#/definitions/OrphanedElasticsearch"
                    }, 
                    "type": "array", 
                    "description": "List of orphaned Elasticsearch resources"
                }, 
                "enterprise_search": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of orphaned Enterprise Search resource ids"
                }, 
                "kibana": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of orphaned Kibana resource ids"
                }, 
                "apm": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of orphaned APM resource ids"
                }
            }, 
            "description": "Details about orphaned resources."
        }, 
        "DeploymentUpdateResources": {
            "type": "object", 
            "properties": {
                "appsearch": {
                    "items": {
                        "$ref": "#/definitions/AppSearchPayload"
                    }, 
                    "type": "array", 
                    "description": "A list of payloads for AppSearch updates"
                }, 
                "elasticsearch": {
                    "items": {
                        "$ref": "#/definitions/ElasticsearchPayload"
                    }, 
                    "type": "array", 
                    "description": "A list of payloads for Elasticsearch cluster updates"
                }, 
                "kibana": {
                    "items": {
                        "$ref": "#/definitions/KibanaPayload"
                    }, 
                    "type": "array", 
                    "description": "A list of payloads for Kibana updates"
                }, 
                "apm": {
                    "items": {
                        "$ref": "#/definitions/ApmPayload"
                    }, 
                    "type": "array", 
                    "description": "A list of payloads for APM updates"
                }
            }, 
            "description": "Describes the resources that will have the Deployment"
        }, 
        "ClusterTopologyInfo": {
            "required": [
                "healthy", 
                "instances"
            ], 
            "type": "object", 
            "properties": {
                "healthy": {
                    "type": "boolean", 
                    "description": "Whether the cluster topology is healthy (ie all instances are started and the services they run - ie elasticsearch - are available"
                }, 
                "instances": {
                    "items": {
                        "$ref": "#/definitions/ClusterInstanceInfo"
                    }, 
                    "type": "array"
                }
            }, 
            "description": "The topology for Elasticsearch clusters, multiple Kibana instances, or multiple APM Servers. The `ClusterTopologyInfo` also includes the instances and containers, and where they are located."
        }, 
        "DiscreteSizes": {
            "required": [
                "default_size", 
                "resource", 
                "sizes"
            ], 
            "type": "object", 
            "properties": {
                "default_size": {
                    "type": "integer", 
                    "description": "The default size", 
                    "format": "int32"
                }, 
                "resource": {
                    "enum": [
                        "memory", 
                        "storage"
                    ], 
                    "type": "string", 
                    "description": "The unit that each size represents"
                }, 
                "sizes": {
                    "items": {
                        "type": "integer", 
                        "format": "int32"
                    }, 
                    "type": "array", 
                    "description": "List of supported sizes"
                }
            }, 
            "description": "Instance sizes that are supported by the Elasticsearch instance, Kibana instance, or APM Server configuration."
        }, 
        "CrossClusterSearchSettings": {
            "required": [
                "remote_clusters"
            ], 
            "type": "object", 
            "properties": {
                "remote_clusters": {
                    "additionalProperties": {
                        "$ref": "#/definitions/RemoteClusterRef"
                    }, 
                    "type": "object", 
                    "description": "Mapping of remote cluster references keyed by their respective aliases. Aliases must only contain letters, digits, dashes and underscores"
                }
            }, 
            "description": "The configuration settings for the cross-cluster search."
        }, 
        "AppSearchNodeTypes": {
            "required": [
                "appserver", 
                "worker"
            ], 
            "type": "object", 
            "properties": {
                "appserver": {
                    "type": "boolean", 
                    "description": "Defines whether this instance should run as Application/API server"
                }, 
                "worker": {
                    "type": "boolean", 
                    "description": "Defines whether this instance should run as background worker"
                }
            }, 
            "description": "Node types to enable for an AppSearch instance"
        }, 
        "ElasticsearchMasterInfo": {
            "required": [
                "healthy", 
                "instances_with_no_master", 
                "masters"
            ], 
            "type": "object", 
            "properties": {
                "healthy": {
                    "type": "boolean", 
                    "description": "Whether the master situation in the cluster is healthy (ie is the number of masters != 1), or do any instances have no master"
                }, 
                "instances_with_no_master": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "A list of any instances with no master"
                }, 
                "masters": {
                    "items": {
                        "$ref": "#/definitions/ElasticsearchMasterElement"
                    }, 
                    "type": "array"
                }
            }, 
            "description": "Information about the master nodes in the Elasticsearch cluster."
        }, 
        "DeploymentCreateSettings": {
            "type": "object", 
            "properties": {
                "ip_filtering_settings": {
                    "description": "DEPRECATED (Scheduled to be removed in the next major version): The set of rulesets applies to this deployment.", 
                    "$ref": "#/definitions/IpFilteringSettings"
                }, 
                "observability": {
                    "description": "Observability settings for this deployment", 
                    "$ref": "#/definitions/DeploymentObservabilitySettings"
                }, 
                "traffic_filter_settings": {
                    "description": "The traffic filter rulesets to apply to this deployment.", 
                    "$ref": "#/definitions/TrafficFilterSettings"
                }
            }, 
            "description": "Additional configuration for the new deployment object."
        }, 
        "StackVersionApmConfig": {
            "required": [
                "blacklist", 
                "docker_image"
            ], 
            "type": "object", 
            "properties": {
                "settings": {
                    "type": "object", 
                    "description": "Settings that are applied to all nodes of this type", 
                    "properties": {}
                }, 
                "blacklist": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of configuration options that cannot be overridden by user settings"
                }, 
                "version": {
                    "type": "string", 
                    "description": "Version of APM"
                }, 
                "capacity_constraints": {
                    "$ref": "#/definitions/StackVersionInstanceCapacityConstraint"
                }, 
                "compatible_node_types": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Node types that are compatible with this one"
                }, 
                "docker_image": {
                    "type": "string", 
                    "description": "Docker image for the APM"
                }
            }, 
            "description": "The APM Server configuration for an Elastic Stack version."
        }, 
        "EnterpriseSearchConfiguration": {
            "type": "object", 
            "properties": {
                "user_settings_override_json": {
                    "type": "object", 
                    "description": "An arbitrary JSON object allowing ECE admins to set clusters' parameters (only one of this and 'user_settings_override_yaml' is allowed), i.e. in addition to the documented 'system_settings'. (This field together with 'system_settings' and 'user_settings*' defines the total set of Enterprise Search settings)", 
                    "properties": {}
                }, 
                "user_settings_yaml": {
                    "type": "string", 
                    "description": "An arbitrary YAML object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user_settings_json' is allowed), provided they are on the whitelist ('user_settings_whitelist') and not on the blacklist ('user_settings_blacklist'). (This field together with 'user_settings_override*' and 'system_settings' defines the total set of Enterprise Search settings)"
                }, 
                "version": {
                    "type": "string", 
                    "description": "The version of the Enterprise Search cluster (must be one of the ECE supported versions, and won't work unless it matches the Elasticsearch version. Leave blank to auto-detect version.)"
                }, 
                "user_settings_json": {
                    "type": "object", 
                    "description": "An arbitrary JSON object allowing (non-admin) cluster owners to set their parameters (only one of this and 'user_settings_yaml' is allowed), provided they are on the whitelist ('user_settings_whitelist') and not on the blacklist ('user_settings_blacklist'). (This field together with 'user_settings_override*' and 'system_settings' defines the total set of Enterprise Search settings)", 
                    "properties": {}
                }, 
                "system_settings": {
                    "$ref": "#/definitions/EnterpriseSearchSystemSettings"
                }, 
                "user_settings_override_yaml": {
                    "type": "string", 
                    "description": "An arbitrary YAML object allowing ECE admins to set clusters' parameters (only one of this and 'user_settings_override_json' is allowed), i.e. in addition to the documented 'system_settings'. (This field together with 'system_settings' and 'user_settings*' defines the total set of Enterprise Search settings)"
                }, 
                "docker_image": {
                    "type": "string", 
                    "description": "A docker URI that allows overriding of the default docker image specified for this version"
                }
            }
        }, 
        "AppSearchSystemSettings": {
            "type": "object", 
            "properties": {
                "elasticsearch_password": {
                    "type": "string", 
                    "description": "Optionally override the account within AppSearch - defaults to a system account that always exists (if specified, the username must also be specified)"
                }, 
                "elasticsearch_username": {
                    "type": "string", 
                    "description": "Optionally override the account within AppSearch - defaults to a system account that always exists (if specified, the password must also be specified)"
                }, 
                "secret_session_key": {
                    "type": "string", 
                    "description": "Optionally override the secret session key within AppSearch - defaults to the previously existing secretSession"
                }, 
                "elasticsearch_url": {
                    "type": "string", 
                    "description": "Optionally override the URL to which to send data (for advanced users only, if unspecified the system selects an internal URL)"
                }
            }, 
            "description": "This structure defines a curated subset of the AppSearch settings. (This field together with 'user_settings_override*' and  'user_settings*' defines the total set of AppSearch settings)"
        }, 
        "AccountUpdateRequest": {
            "type": "object", 
            "properties": {
                "trust": {
                    "description": "Settings related to the level of trust of the clusters in this account", 
                    "$ref": "#/definitions/AccountTrustSettings"
                }
            }, 
            "description": "A request to update an account"
        }, 
        "EnterpriseSearchSettings": {
            "type": "object", 
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/ClusterMetadataSettings"
                }
            }, 
            "description": "The settings for the Enterprise Search."
        }, 
        "QueryStringQuery": {
            "required": [
                "query"
            ], 
            "type": "object", 
            "properties": {
                "query": {
                    "type": "string", 
                    "description": "The actual query to be parsed."
                }, 
                "default_operator": {
                    "type": "string", 
                    "description": "The default operator used if no explicit operator is specified."
                }, 
                "default_field": {
                    "type": "string", 
                    "description": "The default field for query terms if no prefix field is specified."
                }, 
                "allow_leading_wildcard": {
                    "type": "boolean", 
                    "description": "When set, * or ? are allowed as the first character. Defaults to false."
                }, 
                "analyzer": {
                    "type": "string", 
                    "description": "The analyzer used to analyze each term of the query when creating composite queries."
                }
            }, 
            "description": "A query that uses the `SimpleQueryParser` for parsing."
        }, 
        "NestedQuery": {
            "required": [
                "path", 
                "query"
            ], 
            "type": "object", 
            "properties": {
                "query": {
                    "description": "The actual query to execute on the nested objects.", 
                    "$ref": "#/definitions/QueryContainer"
                }, 
                "score_mode": {
                    "enum": [
                        "avg", 
                        "sum", 
                        "min", 
                        "max", 
                        "none"
                    ], 
                    "type": "string", 
                    "description": "Allows to specify how inner children matching affects score of the parent. Refer to the Elasticsearch documentation for details."
                }, 
                "path": {
                    "type": "string", 
                    "description": "The path to the nested object."
                }
            }, 
            "description": "A query that matches nested objects."
        }, 
        "KibanaClusterTopologyElement": {
            "type": "object", 
            "properties": {
                "instance_configuration_id": {
                    "type": "string", 
                    "description": "Controls the allocation of this topology element as well as allowed sizes and node_types. It needs to match the id of an existing instance configuration."
                }, 
                "zone_count": {
                    "type": "integer", 
                    "description": "number of zones in which nodes will be placed", 
                    "format": "int32"
                }, 
                "kibana": {
                    "$ref": "#/definitions/KibanaConfiguration"
                }, 
                "size": {
                    "$ref": "#/definitions/TopologySize"
                }
            }, 
            "description": "The topology of the Kibana nodes, including the number, capacity, and type of nodes, and where they can be allocated."
        }, 
        "DeploymentsSearchResponse": {
            "required": [
                "deployments", 
                "return_count"
            ], 
            "type": "object", 
            "properties": {
                "match_count": {
                    "type": "integer", 
                    "description": "If a query is supplied, then the total number of deployments that matched", 
                    "format": "int32"
                }, 
                "return_count": {
                    "type": "integer", 
                    "description": "The number of deployments actually returned", 
                    "format": "int32"
                }, 
                "deployments": {
                    "items": {
                        "$ref": "#/definitions/DeploymentSearchResponse"
                    }, 
                    "type": "array"
                }
            }, 
            "description": "Contains a list of Deployments as result of a search request."
        }, 
        "StackVersionConfigs": {
            "required": [
                "stacks"
            ], 
            "type": "object", 
            "properties": {
                "stacks": {
                    "items": {
                        "$ref": "#/definitions/StackVersionConfig"
                    }, 
                    "type": "array"
                }
            }, 
            "description": "The details for multiple Elastic Stack configurations."
        }, 
        "TrafficFilterRulesets": {
            "required": [
                "rulesets"
            ], 
            "type": "object", 
            "properties": {
                "rulesets": {
                    "items": {
                        "$ref": "#/definitions/TrafficFilterRulesetInfo"
                    }, 
                    "type": "array", 
                    "description": "List of traffic filter rules"
                }
            }, 
            "description": "The container for a set of traffic filter rulesets."
        }, 
        "ElasticsearchMasterElement": {
            "required": [
                "instances", 
                "master_node_id"
            ], 
            "type": "object", 
            "properties": {
                "instances": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "The names of the instance/container hosting the node belong to the cluster with the given master"
                }, 
                "master_node_id": {
                    "type": "string", 
                    "description": "The Elasticsearch node id of a master node"
                }, 
                "master_instance_name": {
                    "type": "string", 
                    "description": "The corresponding instance name of the container hosting the Elasticsearch master node, if available"
                }
            }, 
            "description": "Information about the Elasticsearch instances. For split-brain cases, this also includes sub-clusters."
        }, 
        "ClusterCurationSettings": {
            "required": [
                "specs"
            ], 
            "type": "object", 
            "properties": {
                "specs": {
                    "items": {
                        "$ref": "#/definitions/ClusterCurationSpec"
                    }, 
                    "type": "array", 
                    "description": "Specifications for curation"
                }
            }, 
            "description": "The index curation settings for an Elasticsearch cluster."
        }, 
        "KibanaSubClusterInfo": {
            "required": [
                "enabled", 
                "kibana_id"
            ], 
            "type": "object", 
            "properties": {
                "kibana_id": {
                    "type": "string", 
                    "description": "The Kibana cluster Id"
                }, 
                "enabled": {
                    "type": "boolean", 
                    "description": "Whether the associated Kibana cluster is currently available"
                }, 
                "links": {
                    "additionalProperties": {
                        "$ref": "#/definitions/Hyperlink"
                    }, 
                    "type": "object", 
                    "description": "A map of application-specific operations (which map to 'operationId's in the Swagger API) to metadata about that operation"
                }
            }, 
            "description": "Information about the Kibana instances associated with the Elasticsearch cluster."
        }, 
        "StackVersionInstanceCapacityConstraint": {
            "required": [
                "max", 
                "min"
            ], 
            "type": "object", 
            "properties": {
                "max": {
                    "type": "integer", 
                    "description": "Max capacity of the instances", 
                    "format": "int32"
                }, 
                "min": {
                    "type": "integer", 
                    "description": "Min capacity of the instances", 
                    "format": "int32"
                }
            }, 
            "description": "The Elasticsearch instance, Kibana instance, APM Server capacity constraints for an Elastic Stack node type."
        }, 
        "ClusterInstanceInfo": {
            "required": [
                "container_started", 
                "healthy", 
                "instance_name", 
                "maintenance_mode", 
                "service_running"
            ], 
            "type": "object", 
            "properties": {
                "service_roles": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of roles assigned to the service running in the instance. Currently only populated for Elasticsearch, with possible values: master,data,ingest,ml"
                }, 
                "zone": {
                    "type": "string", 
                    "description": "The zone in which this instance is being allocated"
                }, 
                "container_started": {
                    "type": "boolean", 
                    "description": "Whether the container has started (does not tell you anything about the service -ie Elasticsearch- running inside the container)"
                }, 
                "service_version": {
                    "type": "string", 
                    "description": "The version of the service that the instance is running (eg Elasticsearch or Kibana), if available"
                }, 
                "healthy": {
                    "type": "boolean", 
                    "description": "Whether the instance is healthy (ie started and running)"
                }, 
                "maintenance_mode": {
                    "type": "boolean", 
                    "description": "Whether the service is is maintenance mode (meaning that the proxy is not routing external traffic to it)"
                }, 
                "instance_name": {
                    "type": "string", 
                    "description": "Whether the instance is healthy (ie started and running)"
                }, 
                "instance_configuration": {
                    "$ref": "#/definitions/ClusterInstanceConfigurationInfo"
                }, 
                "memory": {
                    "$ref": "#/definitions/ClusterInstanceMemoryInfo"
                }, 
                "service_id": {
                    "type": "string", 
                    "description": "The service-specific (eg Elasticsearch) id of the node, if available"
                }, 
                "disk": {
                    "$ref": "#/definitions/ClusterInstanceDiskInfo"
                }, 
                "node_roles": {
                    "items": {
                        "enum": [
                            "master", 
                            "ingest", 
                            "ml", 
                            "data_hot", 
                            "data_content", 
                            "data_warm", 
                            "data_cold", 
                            "data_frozen", 
                            "remote_cluster_client", 
                            "transform", 
                            "voting_only"
                        ], 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "A list of the node roles assigned to the service running in the instance. Currently populated only for Elasticsearch."
                }, 
                "allocator_id": {
                    "type": "string", 
                    "description": "The id of the allocator on which this instance is running (if the container is started or starting)"
                }, 
                "service_running": {
                    "type": "boolean", 
                    "description": "Whether the service launched inside the container -ie Elasticsearch- is actually running"
                }
            }, 
            "description": "Information about each Kibana instance and APM Server in the Elasticsearch cluster."
        }, 
        "KeystoreContents": {
            "required": [
                "secrets"
            ], 
            "type": "object", 
            "properties": {
                "secrets": {
                    "additionalProperties": {
                        "$ref": "#/definitions/KeystoreSecret"
                    }, 
                    "type": "object", 
                    "description": "List of secrets"
                }
            }, 
            "description": "The contents of the Elasticsearch keystore."
        }, 
        "ClusterSnapshotRetention": {
            "type": "object", 
            "properties": {
                "max_age": {
                    "type": "string", 
                    "description": "Total retention period for all snapshots, with the format 'length unit' (space is optional), where unit can be one of: d (day), h (hour), min (minute)"
                }, 
                "snapshots": {
                    "type": "integer", 
                    "description": "Number of snapshots to retain", 
                    "format": "int32"
                }
            }, 
            "description": "Information about the Elasticsearch cluster snapshot retention."
        }, 
        "AccountTrustRelationship": {
            "required": [
                "account_id", 
                "trust_all"
            ], 
            "type": "object", 
            "properties": {
                "trust_allowlist": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "The list of clusters to trust. Only used when `trust_all` is false."
                }, 
                "account_id": {
                    "type": "string", 
                    "description": "the ID of the Account"
                }, 
                "trust_all": {
                    "type": "boolean", 
                    "description": "If true, all clusters in this account will by default be trusted and the `trust_allowlist` is ignored."
                }
            }, 
            "description": "The trust relationship with the clusters of one account."
        }, 
        "AutodetectStrategyConfig": {
            "type": "object", 
            "description": "A strategy that lets constructor choose the most optimal way to execute the plan."
        }, 
        "InstanceMoveRequest": {
            "required": [
                "from"
            ], 
            "type": "object", 
            "properties": {
                "to": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "An optional list of allocator ids to which the instance should be moved. If not specified then any available allocator can be used (including the current one if it is healthy)"
                }, 
                "from": {
                    "type": "string", 
                    "description": "The instance id that is going to be moved"
                }, 
                "instance_down": {
                    "type": "boolean", 
                    "description": "Tells the infrastructure that the instance should be considered as permanently down when deciding how to migrate data to new nodes. If left blank then the system will automatically decide (currently: will treat the instances as up)"
                }
            }, 
            "description": "The request that specifies the Elasticsearch instances, Kibana instances, and APM Servers to move to allocators as part of the upgrade plan."
        }, 
        "Hyperlink": {
            "type": "object", 
            "properties": {
                "need_elevated_permissions": {
                    "type": "boolean", 
                    "description": "Whether the operation requires elevated permissions (when the field is present, elevated permissions are required)."
                }
            }
        }, 
        "ChangeSourceInfo": {
            "required": [
                "action", 
                "date", 
                "facilitator"
            ], 
            "type": "object", 
            "properties": {
                "user_id": {
                    "type": "string", 
                    "description": "The user that requested the change"
                }, 
                "remote_addresses": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "The host addresses of the user that originated the change"
                }, 
                "facilitator": {
                    "type": "string", 
                    "description": "The service where the change originated from"
                }, 
                "admin_id": {
                    "type": "string", 
                    "description": "The admin user that requested the change"
                }, 
                "date": {
                    "type": "string", 
                    "description": "The time the change was initiated", 
                    "format": "date-time"
                }, 
                "action": {
                    "type": "string", 
                    "description": "The type of plan change that was initiated"
                }
            }, 
            "description": "A container for information about the source of a change."
        }, 
        "ApmSubInfo": {
            "required": [
                "apm_id", 
                "enabled"
            ], 
            "type": "object", 
            "properties": {
                "apm_id": {
                    "type": "string", 
                    "description": "The APM cluster Id"
                }, 
                "enabled": {
                    "type": "boolean", 
                    "description": "Whether the associated APM cluster is currently available"
                }, 
                "links": {
                    "additionalProperties": {
                        "$ref": "#/definitions/Hyperlink"
                    }, 
                    "type": "object", 
                    "description": "A map of application-specific operations (which map to 'operationId's in the Swagger API) to metadata about that operation"
                }
            }, 
            "description": "Information about the APM Servers associated with the Elasticsearch cluster."
        }, 
        "KibanaResourceInfo": {
            "required": [
                "elasticsearch_cluster_ref_id", 
                "id", 
                "info", 
                "ref_id", 
                "region"
            ], 
            "type": "object", 
            "properties": {
                "elasticsearch_cluster_ref_id": {
                    "type": "string", 
                    "description": "The Elasticsearch cluster that this resource depends on."
                }, 
                "info": {
                    "description": "Info for the resource.", 
                    "$ref": "#/definitions/KibanaClusterInfo"
                }, 
                "region": {
                    "type": "string", 
                    "description": "The region where this resource exists"
                }, 
                "id": {
                    "type": "string", 
                    "description": "The randomly-generated id of a Resource"
                }, 
                "ref_id": {
                    "type": "string", 
                    "description": "The locally-unique user-specified id of a Resource"
                }
            }, 
            "description": "Describes an Kibana resource belonging to a Deployment"
        }, 
        "EnterpriseSearchPlan": {
            "required": [
                "enterprise_search"
            ], 
            "type": "object", 
            "properties": {
                "cluster_topology": {
                    "items": {
                        "$ref": "#/definitions/EnterpriseSearchTopologyElement"
                    }, 
                    "type": "array"
                }, 
                "transient": {
                    "$ref": "#/definitions/TransientEnterpriseSearchPlanConfiguration"
                }, 
                "enterprise_search": {
                    "$ref": "#/definitions/EnterpriseSearchConfiguration"
                }
            }, 
            "description": "The plan for the Enterprise Search cluster."
        }, 
        "ClusterSnapshotSettings": {
            "type": "object", 
            "properties": {
                "slm": {
                    "readOnly": true, 
                    "type": "boolean", 
                    "description": "When set to true, the deployment will have SLM enabled. Default value is true."
                }, 
                "cron_expression": {
                    "type": "string", 
                    "description": "Cron expression indicating when should snapshots be taken. This can be enabled only if SLM is enabled for the deployment and 'interval' is not present"
                }, 
                "interval": {
                    "type": "string", 
                    "description": "Interval between snapshots, with the format 'length unit' (space is optional), where unit can be one of: d (day), h (hour), min (minute). Default is 30 minutes"
                }, 
                "retention": {
                    "description": "Cluster snapshot retention information", 
                    "$ref": "#/definitions/ClusterSnapshotRetention"
                }
            }, 
            "description": "The snapshot configuration settings for an Elasticsearch cluster."
        }, 
        "DeploymentsListResponse": {
            "required": [
                "deployments"
            ], 
            "type": "object", 
            "properties": {
                "deployments": {
                    "items": {
                        "$ref": "#/definitions/DeploymentsListingData"
                    }, 
                    "type": "array", 
                    "description": "The deployments"
                }
            }, 
            "description": "Contains a list of deployments"
        }, 
        "ElasticsearchCuration": {
            "required": [
                "from_instance_configuration_id", 
                "to_instance_configuration_id"
            ], 
            "type": "object", 
            "properties": {
                "to_instance_configuration_id": {
                    "type": "string", 
                    "description": "The destination instance configuration"
                }, 
                "from_instance_configuration_id": {
                    "type": "string", 
                    "description": "The source instance configuration"
                }
            }, 
            "description": "The structure that defines the routing settings for index curation."
        }, 
        "DeploymentMetrics": {
            "required": [
                "healthy"
            ], 
            "type": "object", 
            "properties": {
                "healthy": {
                    "type": "boolean", 
                    "description": "Whether the deployment metrics are healthy or not"
                }, 
                "issues": {
                    "items": {
                        "$ref": "#/definitions/ObservabilityIssue"
                    }, 
                    "type": "array", 
                    "description": "Metrics health issues for the deployment"
                }, 
                "urls": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "The URLs to view this deployment's metrics in Kibana"
                }
            }, 
            "description": "Metrics information for a deployment"
        }, 
        "DeploymentGetResponse": {
            "required": [
                "healthy", 
                "id", 
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "The name of this deployment"
                }, 
                "settings": {
                    "description": "Additional configuration for this Deployment", 
                    "$ref": "#/definitions/DeploymentSettings"
                }, 
                "healthy": {
                    "type": "boolean", 
                    "description": "Whether the deployment is overall healthy or not (one or more of the resource info subsections will have healthy: false)"
                }, 
                "alias": {
                    "type": "string", 
                    "description": "A user-defined deployment alias for user-friendly resource URLs"
                }, 
                "observability": {
                    "description": "The observability information for this deployment", 
                    "$ref": "#/definitions/DeploymentObservability"
                }, 
                "id": {
                    "type": "string", 
                    "description": "A randomly-generated id of this Deployment"
                }, 
                "resources": {
                    "description": "The Resources that belong to this Deployment", 
                    "$ref": "#/definitions/DeploymentResources"
                }, 
                "metadata": {
                    "description": "Additional information about this deployment", 
                    "$ref": "#/definitions/DeploymentMetadata"
                }
            }, 
            "description": "Describes a given Deployment"
        }, 
        "DeploymentSettings": {
            "type": "object", 
            "properties": {
                "ip_filtering_settings": {
                    "description": "DEPRECATED The set of IP filtering rulesets applies to this deployment.", 
                    "$ref": "#/definitions/IpFilteringSettings"
                }, 
                "observability": {
                    "description": "Logging and monitoring settings for this deployment", 
                    "$ref": "#/definitions/DeploymentObservabilitySettings"
                }, 
                "traffic_filter_settings": {
                    "description": "The traffic filter rulesets for this deployment.", 
                    "$ref": "#/definitions/TrafficFilterSettings"
                }
            }, 
            "description": "Additional configuration about the current deployment object."
        }, 
        "EnterpriseSearch": {
            "required": [
                "backend_plan", 
                "display_name", 
                "elasticsearch_cluster_ref_id", 
                "ref_id"
            ], 
            "type": "object", 
            "properties": {
                "elasticsearch_cluster_ref_id": {
                    "type": "string", 
                    "description": "The user-specified id of the Elasticsearch Cluster that this will link to"
                }, 
                "backend_plan": {
                    "type": "object", 
                    "description": "The backend plan as JSON", 
                    "properties": {}
                }, 
                "display_name": {
                    "type": "string", 
                    "description": "The human readable name (defaults to the generated cluster id if not specified)"
                }, 
                "ref_id": {
                    "type": "string", 
                    "description": "A locally-unique user-specified id"
                }
            }, 
            "description": "Holds diagnostics for an Enterprise Search resource"
        }, 
        "MatchNoneQuery": {
            "type": "object", 
            "description": "A query that doesn't match any documents."
        }, 
        "EnterpriseSearchSubInfo": {
            "required": [
                "enabled", 
                "enterprise_search_id"
            ], 
            "type": "object", 
            "properties": {
                "enterprise_search_id": {
                    "type": "string", 
                    "description": "The Enterprise Search Id"
                }, 
                "enabled": {
                    "type": "boolean", 
                    "description": "Whether the associated Enterprise Search is currently available"
                }, 
                "links": {
                    "additionalProperties": {
                        "$ref": "#/definitions/Hyperlink"
                    }, 
                    "type": "object", 
                    "description": "A map of application-specific operations (which map to 'operationId's in the Swagger API) to metadata about that operation"
                }
            }, 
            "description": "Information about the APM Servers associated with the Elasticsearch cluster."
        }, 
        "ApmTopologyElement": {
            "type": "object", 
            "properties": {
                "apm": {
                    "$ref": "#/definitions/ApmConfiguration"
                }, 
                "instance_configuration_id": {
                    "type": "string", 
                    "description": "Controls the allocation of this topology element as well as allowed sizes and node_types. It needs to match the id of an existing instance configuration."
                }, 
                "zone_count": {
                    "type": "integer", 
                    "description": "number of zones in which nodes will be placed", 
                    "format": "int32"
                }, 
                "size": {
                    "$ref": "#/definitions/TopologySize"
                }
            }, 
            "description": "Defines the topology of the APM Server nodes. For example, the number or capacity of the nodes, and where you can allocate the nodes."
        }, 
        "ServiceUrl": {
            "required": [
                "service", 
                "url"
            ], 
            "type": "object", 
            "properties": {
                "url": {
                    "type": "string", 
                    "description": "The full URL to access the service"
                }, 
                "service": {
                    "type": "string", 
                    "description": "Name of the service"
                }
            }, 
            "description": "A URL to access the service of a resource"
        }, 
        "Extension": {
            "required": [
                "extension_type", 
                "id", 
                "name", 
                "url", 
                "version"
            ], 
            "type": "object", 
            "properties": {
                "description": {
                    "type": "string", 
                    "description": "The extension description."
                }, 
                "url": {
                    "type": "string", 
                    "description": "The extension URL to be used in the plan."
                }, 
                "extension_type": {
                    "enum": [
                        "plugin", 
                        "bundle"
                    ], 
                    "type": "string", 
                    "description": "The extension type."
                }, 
                "download_url": {
                    "type": "string", 
                    "description": "The download URL specified during extension creation."
                }, 
                "deployments": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of deployments using this extension. Up to only 10000 deployments will be included in the list."
                }, 
                "version": {
                    "type": "string", 
                    "description": "The Elasticsearch version."
                }, 
                "file_metadata": {
                    "description": "The extension file metadata.", 
                    "$ref": "#/definitions/ExtensionFileMetadata"
                }, 
                "id": {
                    "type": "string", 
                    "description": "The extension ID"
                }, 
                "name": {
                    "type": "string", 
                    "description": "The extension name."
                }
            }, 
            "description": "An API extension. It represents clusters' plugins and bundles"
        }, 
        "ClusterSystemAlert": {
            "required": [
                "alert_type", 
                "instance_name", 
                "timestamp"
            ], 
            "type": "object", 
            "properties": {
                "instance_name": {
                    "type": "string", 
                    "description": "Instance that caused the system alert"
                }, 
                "timestamp": {
                    "type": "string", 
                    "description": "Timestamp marking the system alert", 
                    "format": "date-time"
                }, 
                "alert_type": {
                    "enum": [
                        "automatic_restart", 
                        "heap_dump", 
                        "unknown_event"
                    ], 
                    "type": "string", 
                    "description": "Type of system alert"
                }, 
                "url": {
                    "type": "string", 
                    "description": "The URL related to the event. Only applicable for alert_type: heap_dump"
                }, 
                "exit_code": {
                    "type": "integer", 
                    "description": "The exit_code related to the event. Only applicable for alert_type: slain", 
                    "format": "int32"
                }
            }, 
            "description": "Information about a system alert on an Elasticsearch cluster."
        }, 
        "DeploymentUpdateSettings": {
            "type": "object", 
            "properties": {
                "observability": {
                    "description": "Logging and monitoring settings for this deployment. If provided it will change observability settings, if null observability will be removed from the deployment, otherwise will stay the same", 
                    "$ref": "#/definitions/DeploymentObservabilitySettings"
                }
            }, 
            "description": "Additional configuration for the new deployment object."
        }, 
        "StackVersionAppSearchConfig": {
            "required": [
                "blacklist", 
                "docker_image"
            ], 
            "type": "object", 
            "properties": {
                "settings": {
                    "type": "object", 
                    "description": "Settings that are applied to all nodes of this type", 
                    "properties": {}
                }, 
                "node_types": {
                    "items": {
                        "$ref": "#/definitions/StackVersionNodeType"
                    }, 
                    "type": "array", 
                    "description": "Node types that are supported by this stack version"
                }, 
                "blacklist": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of configuration options that cannot be overridden by user settings"
                }, 
                "version": {
                    "type": "string", 
                    "description": "Version of AppSearch"
                }, 
                "capacity_constraints": {
                    "$ref": "#/definitions/StackVersionInstanceCapacityConstraint"
                }, 
                "compatible_node_types": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Node types that are compatible with this one"
                }, 
                "docker_image": {
                    "type": "string", 
                    "description": "Docker image for the AppSearch"
                }
            }, 
            "description": "AppSearch related configuration of an Elastic Stack version"
        }, 
        "ApmCrudResponse": {
            "required": [
                "secret_token"
            ], 
            "type": "object", 
            "properties": {
                "apm_id": {
                    "type": "string", 
                    "description": "For an operation creating or updating an APM server, the Id of that server"
                }, 
                "secret_token": {
                    "type": "string", 
                    "description": "The secret token for accessing the server"
                }, 
                "diagnostics": {
                    "type": "object", 
                    "description": "If the endpoint is called with URL param 'validate_only=true', then this contains advanced debug info (the internal plan representation)", 
                    "properties": {}
                }
            }, 
            "description": "The response to an APM CRUD (create/update-plan) request."
        }, 
        "Creates": {
            "type": "object", 
            "properties": {
                "appsearch": {
                    "items": {
                        "$ref": "#/definitions/AppSearch"
                    }, 
                    "type": "array", 
                    "description": "Diagnostics for AppSearches"
                }, 
                "elasticsearch": {
                    "items": {
                        "$ref": "#/definitions/Elasticsearch"
                    }, 
                    "type": "array", 
                    "description": "Diagnostics for Elasticsearch clusters"
                }, 
                "enterprise_search": {
                    "items": {
                        "$ref": "#/definitions/EnterpriseSearch"
                    }, 
                    "type": "array", 
                    "description": "Diagnostics for Enterprise Search resources"
                }, 
                "kibana": {
                    "items": {
                        "$ref": "#/definitions/Kibana"
                    }, 
                    "type": "array", 
                    "description": "Diagnostics for Kibanas"
                }, 
                "apm": {
                    "items": {
                        "$ref": "#/definitions/Apm"
                    }, 
                    "type": "array", 
                    "description": "Diagnostics for APMs"
                }
            }, 
            "description": "Holds diagnostics for resources that will be created"
        }, 
        "RulesetAssociations": {
            "required": [
                "associations", 
                "total_associations"
            ], 
            "type": "object", 
            "properties": {
                "associations": {
                    "items": {
                        "$ref": "#/definitions/FilterAssociation"
                    }, 
                    "type": "array", 
                    "description": "List of associations"
                }, 
                "total_associations": {
                    "type": "integer", 
                    "description": "Total number of associations. This includes associations the user does not have permission to view.", 
                    "format": "int32"
                }
            }, 
            "description": "The configuration settings for the traffic filter."
        }, 
        "ApmPlanInfo": {
            "required": [
                "healthy", 
                "plan_attempt_log"
            ], 
            "type": "object", 
            "properties": {
                "attempt_end_time": {
                    "type": "string", 
                    "description": "If this plan completed or failed (ie is not pending), when the attempt ended (ISO format in UTC)", 
                    "format": "date-time"
                }, 
                "plan_attempt_id": {
                    "type": "string", 
                    "description": "A UUID for each plan attempt"
                }, 
                "healthy": {
                    "type": "boolean", 
                    "description": "Either the plan ended successfully, or is not yet completed (and no errors have occurred)"
                }, 
                "plan_end_time": {
                    "type": "string", 
                    "description": "If this plan is not current or pending, when the plan was no longer active (ISO format in UTC)", 
                    "format": "date-time"
                }, 
                "source": {
                    "description": "Information describing the source that facilitated the plans current state", 
                    "$ref": "#/definitions/ChangeSourceInfo"
                }, 
                "plan_attempt_log": {
                    "items": {
                        "$ref": "#/definitions/ClusterPlanStepInfo"
                    }, 
                    "type": "array"
                }, 
                "plan": {
                    "$ref": "#/definitions/ApmPlan"
                }, 
                "plan_attempt_name": {
                    "type": "string", 
                    "description": "A human readable name for each plan attempt, only populated when retrieving plan histories"
                }, 
                "attempt_start_time": {
                    "type": "string", 
                    "description": "When this plan attempt (ie to apply the plan to the APM) started (ISO format in UTC)", 
                    "format": "date-time"
                }
            }, 
            "description": "Information about the APM Server plan."
        }, 
        "PrefixQuery": {
            "required": [
                "value"
            ], 
            "type": "object", 
            "properties": {
                "boost": {
                    "type": "number", 
                    "description": "An optional boost value to apply to the query.", 
                    "format": "float"
                }, 
                "value": {
                    "type": "string", 
                    "description": "The prefix to search for."
                }
            }, 
            "description": "The query that matches documents with fields that contain terms with a specified, not analyzed, prefix."
        }, 
        "AppSearchTopologyElement": {
            "type": "object", 
            "properties": {
                "appsearch": {
                    "$ref": "#/definitions/AppSearchConfiguration"
                }, 
                "node_type": {
                    "description": "Defines the AppSearch node type", 
                    "$ref": "#/definitions/AppSearchNodeTypes"
                }, 
                "instance_configuration_id": {
                    "type": "string", 
                    "description": "Controls the allocation of this topology element as well as allowed sizes and node_types. It needs to match the id of an existing instance configuration."
                }, 
                "zone_count": {
                    "type": "integer", 
                    "description": "number of zones in which nodes will be placed", 
                    "format": "int32"
                }, 
                "size": {
                    "$ref": "#/definitions/TopologySize"
                }
            }, 
            "description": "Defines the topology of the AppSearch nodes (eg number/capacity of nodes, and where they can be allocated)"
        }, 
        "ElasticsearchResourceInfo": {
            "required": [
                "id", 
                "info", 
                "ref_id", 
                "region"
            ], 
            "type": "object", 
            "properties": {
                "info": {
                    "description": "Info for the resource.", 
                    "$ref": "#/definitions/ElasticsearchClusterInfo"
                }, 
                "region": {
                    "type": "string", 
                    "description": "The region where this resource exists"
                }, 
                "id": {
                    "type": "string", 
                    "description": "The randomly-generated id of a Resource"
                }, 
                "ref_id": {
                    "type": "string", 
                    "description": "The locally-unique user-specified id of a Resource"
                }
            }, 
            "description": "Describes an Elasticsearch resource belonging to a Deployment"
        }, 
        "ClusterMetadataSettings": {
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "The display name of the cluster"
                }
            }, 
            "description": "The top-level configuration settings for the Elasticsearch cluster."
        }, 
        "AllocatorMoveRequest": {
            "required": [
                "from"
            ], 
            "type": "object", 
            "properties": {
                "to": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "An optional list of allocator ids to which the instance(s) should be moved. If not specified then any available allocator can be used (including the current one if it is healthy)"
                }, 
                "from": {
                    "type": "string", 
                    "description": "The allocator id off which all instances in the cluster should be moved"
                }, 
                "allocator_down": {
                    "type": "boolean", 
                    "description": "Tells the infrastructure that all instances on the allocator should be considered as permanently down when deciding how to migrate data to new nodes. If left blank then the system will auto-decide (currently: will treat the allocator as up)"
                }
            }, 
            "description": "As part of the upgrade plan, identifies the move requests for the Kibana instances or APM Servers on the allocators."
        }, 
        "ExternalTrustRelationship": {
            "required": [
                "trust_all", 
                "trust_relationship_id"
            ], 
            "type": "object", 
            "properties": {
                "trust_allowlist": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "The list of clusters to trust. Only used when `trust_all` is false."
                }, 
                "trust_relationship_id": {
                    "type": "string", 
                    "description": "the ID of the external trust relationship"
                }, 
                "trust_all": {
                    "type": "boolean", 
                    "description": "If true, all clusters in this external entity will be trusted and the `trust_allowlist` is ignored."
                }
            }, 
            "description": "The trust relationship with external entities (remote environments, remote accounts...)."
        }, 
        "DeploymentObservabilitySettings": {
            "type": "object", 
            "properties": {
                "metrics": {
                    "description": "The metrics settings for the deployment", 
                    "$ref": "#/definitions/DeploymentMetricsSettings"
                }, 
                "logging": {
                    "description": "The logging settings for the deployment", 
                    "$ref": "#/definitions/DeploymentLoggingSettings"
                }
            }, 
            "description": "The observability settings for a deployment"
        }, 
        "StackVersionMetadata": {
            "type": "object", 
            "properties": {
                "pre_release": {
                    "type": "boolean", 
                    "description": "Indicates that the stack pack version is not GA and is not supposed to be used in production"
                }, 
                "min_wire_compatibility_version": {
                    "type": "string", 
                    "description": "The minimum version required for performing a rolling upgrade to this stack version."
                }, 
                "schema_version": {
                    "type": "integer", 
                    "description": "The schema version of the stack pack version", 
                    "format": "int32"
                }, 
                "min_index_compatibility_version": {
                    "type": "string", 
                    "description": "The minimum version required for performing a full cluster restart upgrade to this stack version."
                }, 
                "min_platform_version": {
                    "type": "string", 
                    "description": "The minimum version of the platform that the stack pack version is compatible with"
                }, 
                "notes": {
                    "type": "string", 
                    "description": "Notes for administrator"
                }
            }, 
            "description": "The metadata for the Elastic Stack."
        }, 
        "RemoteResourceRef": {
            "required": [
                "alias", 
                "deployment_id", 
                "elasticsearch_ref_id"
            ], 
            "type": "object", 
            "properties": {
                "info": {
                    "readOnly": true, 
                    "description": "Information about a Remote Cluster.", 
                    "$ref": "#/definitions/RemoteResourceInfo"
                }, 
                "elasticsearch_ref_id": {
                    "type": "string", 
                    "description": "The locally-unique user-specified id of an Elasticsearch Resource"
                }, 
                "deployment_id": {
                    "type": "string", 
                    "description": "The id of the deployment"
                }, 
                "skip_unavailable": {
                    "type": "boolean", 
                    "description": "If true, skip this cluster during search if it is disconnected. Default: false"
                }, 
                "alias": {
                    "type": "string", 
                    "description": "The alias for this remote cluster. Aliases must only contain letters, digits, dashes and underscores"
                }
            }, 
            "description": "The Elasticsearch resource used as a Remote Cluster."
        }, 
        "TrafficFilterRulesetResponse": {
            "required": [
                "id"
            ], 
            "type": "object", 
            "properties": {
                "id": {
                    "type": "string", 
                    "description": "The new ruleset ID"
                }
            }, 
            "description": "The response after you create a new ruleset."
        }, 
        "Kibana": {
            "required": [
                "backend_plan", 
                "display_name", 
                "elasticsearch_cluster_ref_id", 
                "ref_id"
            ], 
            "type": "object", 
            "properties": {
                "elasticsearch_cluster_ref_id": {
                    "type": "string", 
                    "description": "The user-specified id of the Elasticsearch Cluster that this will link to"
                }, 
                "backend_plan": {
                    "type": "object", 
                    "description": "The backend plan as JSON", 
                    "properties": {}
                }, 
                "display_name": {
                    "type": "string", 
                    "description": "The human readable name (defaults to the generated cluster id if not specified)"
                }, 
                "ref_id": {
                    "type": "string", 
                    "description": "A locally-unique user-specified id"
                }
            }, 
            "description": "Holds diagnostics for a Kibana resource"
        }, 
        "ClusterCurationSpec": {
            "required": [
                "index_pattern", 
                "trigger_interval_seconds"
            ], 
            "type": "object", 
            "properties": {
                "index_pattern": {
                    "type": "string", 
                    "description": "Index matching pattern"
                }, 
                "trigger_interval_seconds": {
                    "type": "integer", 
                    "description": "Number of seconds after index creation to trigger this spec", 
                    "format": "int32"
                }
            }, 
            "description": "Specifies the conditions to trigger an Elasticsearch cluster curation."
        }, 
        "TermQuery": {
            "required": [
                "value"
            ], 
            "type": "object", 
            "properties": {
                "value": {
                    "type": "object", 
                    "description": "The exact value to query for.", 
                    "properties": {}
                }
            }, 
            "description": "A query for documents that contain the specified term in the inverted index."
        }, 
        "Apm": {
            "required": [
                "backend_plan", 
                "display_name", 
                "elasticsearch_cluster_ref_id", 
                "ref_id"
            ], 
            "type": "object", 
            "properties": {
                "elasticsearch_cluster_ref_id": {
                    "type": "string", 
                    "description": "The user-specified id of the Elasticsearch Cluster that this will link to"
                }, 
                "backend_plan": {
                    "type": "object", 
                    "description": "The backend plan as JSON", 
                    "properties": {}
                }, 
                "display_name": {
                    "type": "string", 
                    "description": "The human readable name (defaults to the generated cluster id if not specified)"
                }, 
                "ref_id": {
                    "type": "string", 
                    "description": "A locally-unique user-specified id"
                }
            }, 
            "description": "Holds diagnostics for an APM resource"
        }, 
        "AppSearchSettings": {
            "type": "object", 
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/ClusterMetadataSettings"
                }
            }, 
            "description": "The settings for the App Search."
        }, 
        "StackVersionKibanaConfig": {
            "required": [
                "blacklist", 
                "docker_image"
            ], 
            "type": "object", 
            "properties": {
                "settings": {
                    "type": "object", 
                    "description": "Settings that are applied to all nodes of this type", 
                    "properties": {}
                }, 
                "blacklist": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of configuration options that cannot be overridden by user settings"
                }, 
                "version": {
                    "type": "string", 
                    "description": "Version of Kibana"
                }, 
                "capacity_constraints": {
                    "$ref": "#/definitions/StackVersionInstanceCapacityConstraint"
                }, 
                "compatible_node_types": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Node types that are compatible with this one"
                }, 
                "docker_image": {
                    "type": "string", 
                    "description": "Docker image for the kibana"
                }
            }, 
            "description": "The Kibana configuration for an Elastic Stack version."
        }, 
        "EnterpriseSearchNodeTypes": {
            "required": [
                "appserver", 
                "connector", 
                "worker"
            ], 
            "type": "object", 
            "properties": {
                "connector": {
                    "type": "boolean", 
                    "description": "Defines whether this instance should run as Connector"
                }, 
                "appserver": {
                    "type": "boolean", 
                    "description": "Defines whether this instance should run as Application/API server"
                }, 
                "worker": {
                    "type": "boolean", 
                    "description": "Defines whether this instance should run as background worker"
                }
            }, 
            "description": "Node types to enable for an Enterprise Search instance"
        }, 
        "KibanaClusterSettings": {
            "type": "object", 
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/ClusterMetadataSettings"
                }
            }, 
            "description": "The settings for multiple Kibana instances."
        }, 
        "ElasticsearchPlanControlConfiguration": {
            "type": "object", 
            "properties": {
                "cluster_reboot": {
                    "enum": [
                        "forced"
                    ], 
                    "type": "string", 
                    "description": "Set to 'forced' to force a reboot as part of the upgrade plan. NOTES: (ie taking an existing plan and leaving it alone except for setting 'transient.plan_configuration.cluster_reboot': 'forced' will reboot the cluster)"
                }, 
                "calm_wait_time": {
                    "type": "integer", 
                    "description": "This timeout determines how long to give a cluster after it responds to API calls before performing actual operations on it. It defaults to 5s", 
                    "format": "int64"
                }, 
                "skip_snapshot": {
                    "type": "boolean", 
                    "description": "If true (default: false), does not take (or require) a successful snapshot to be taken before performing any potentially destructive changes to this cluster"
                }, 
                "max_snapshot_age": {
                    "type": "integer", 
                    "description": "When you take a snapshot and 'skip_snapshots' is false, specifies the maximum age in seconds of the most recent snapshot before a new snapshot is created. Default is 300", 
                    "format": "int64"
                }, 
                "timeout": {
                    "type": "integer", 
                    "description": "The total timeout in seconds after which the plan is cancelled even if it is not complete. Defaults to 4x the max memory capacity per node (in MB). NOTES: A 3 zone cluster with 2 nodes of 2048 each would have a timeout of 4*2048=8192 seconds. Timeout does not include time required to run rollback actions.", 
                    "format": "int64"
                }, 
                "extended_maintenance": {
                    "type": "boolean", 
                    "description": "If true (default false), does not clear the maintenance flag (which prevents its API from being accessed except by the constructor) on new instances added until after a snapshot has been restored, otherwise, the maintenance flag is cleared once the new instances successfully join the new cluster"
                }, 
                "max_snapshot_attempts": {
                    "type": "integer", 
                    "description": "If taking a snapshot (ie unless 'skip_snapshots': true) then will retry on failure at most this number of times (default: 5)", 
                    "format": "int32"
                }
            }, 
            "description": "The configuration settings for the timeout and fallback parameters."
        }, 
        "StackVersionTemplateInfo": {
            "type": "object", 
            "properties": {
                "hashes": {
                    "items": {
                        "$ref": "#/definitions/StackVersionTemplateFileHash"
                    }, 
                    "readOnly": true, 
                    "type": "array", 
                    "description": "Relative paths of files with SHA-256 hashes that contains the template"
                }, 
                "template_version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Template version"
                }
            }, 
            "description": "The template information for an Elastic Stack version."
        }, 
        "ElasticsearchClusterInfo": {
            "required": [
                "associated_apm_clusters", 
                "associated_appsearch_clusters", 
                "associated_enterprise_search_clusters", 
                "associated_kibana_clusters", 
                "cluster_id", 
                "cluster_name", 
                "elasticsearch", 
                "external_links", 
                "healthy", 
                "metadata", 
                "plan_info", 
                "snapshots", 
                "status", 
                "topology"
            ], 
            "type": "object", 
            "properties": {
                "links": {
                    "additionalProperties": {
                        "$ref": "#/definitions/Hyperlink"
                    }, 
                    "type": "object", 
                    "description": "A map of application-specific operations (which map to 'operationId's in the Swagger API) to metadata about that operation"
                }, 
                "snapshots": {
                    "$ref": "#/definitions/SnapshotStatusInfo"
                }, 
                "cluster_id": {
                    "type": "string", 
                    "description": "The id of the cluster"
                }, 
                "elasticsearch_monitoring_info": {
                    "$ref": "#/definitions/ElasticsearchMonitoringInfo"
                }, 
                "associated_enterprise_search_clusters": {
                    "items": {
                        "$ref": "#/definitions/EnterpriseSearchSubInfo"
                    }, 
                    "type": "array"
                }, 
                "associated_appsearch_clusters": {
                    "items": {
                        "$ref": "#/definitions/AppSearchSubInfo"
                    }, 
                    "type": "array"
                }, 
                "associated_apm_clusters": {
                    "items": {
                        "$ref": "#/definitions/ApmSubInfo"
                    }, 
                    "type": "array"
                }, 
                "plan_info": {
                    "$ref": "#/definitions/ElasticsearchClusterPlansInfo"
                }, 
                "system_alerts": {
                    "items": {
                        "$ref": "#/definitions/ClusterSystemAlert"
                    }, 
                    "type": "array", 
                    "description": "List of cluster system alerts"
                }, 
                "cluster_name": {
                    "type": "string", 
                    "description": "The name of the cluster"
                }, 
                "metadata": {
                    "$ref": "#/definitions/ClusterMetadataInfo"
                }, 
                "status": {
                    "enum": [
                        "initializing", 
                        "stopping", 
                        "stopped", 
                        "rebooting", 
                        "restarting", 
                        "reconfiguring", 
                        "started"
                    ], 
                    "type": "string", 
                    "description": "Cluster status"
                }, 
                "external_links": {
                    "uniqueItems": true, 
                    "items": {
                        "$ref": "#/definitions/ExternalHyperlink"
                    }, 
                    "type": "array", 
                    "description": "External resources related to the cluster"
                }, 
                "associated_kibana_clusters": {
                    "items": {
                        "$ref": "#/definitions/KibanaSubClusterInfo"
                    }, 
                    "type": "array"
                }, 
                "security": {
                    "$ref": "#/definitions/ElasticsearchClusterSecurityInfo"
                }, 
                "topology": {
                    "$ref": "#/definitions/ClusterTopologyInfo"
                }, 
                "settings": {
                    "$ref": "#/definitions/ElasticsearchClusterSettings"
                }, 
                "healthy": {
                    "type": "boolean", 
                    "description": "Whether the cluster is healthy or not (one or more of the info subsections will have healthy: false)"
                }, 
                "region": {
                    "type": "string", 
                    "description": "The region that this cluster belongs to. Only populated in SaaS or federated ECE."
                }, 
                "ccs": {
                    "description": "DEPRECATED (Scheduled to be removed in the next major version): Cross-cluster search settings and status for this cluster. Use the /remote-clusters endpoints instead", 
                    "$ref": "#/definitions/CrossClusterSearchInfo"
                }, 
                "elasticsearch": {
                    "$ref": "#/definitions/ElasticsearchInfo"
                }, 
                "deployment_id": {
                    "type": "string", 
                    "description": "The id of the deployment that this Elasticsearch belongs to."
                }
            }, 
            "description": "The information for an Elasticsearch cluster."
        }, 
        "EnableIlmRequest": {
            "required": [
                "index_patterns"
            ], 
            "type": "object", 
            "properties": {
                "index_patterns": {
                    "items": {
                        "$ref": "#/definitions/IndexPattern"
                    }, 
                    "type": "array", 
                    "description": "A locally-unique user-specified id for Kibana"
                }
            }, 
            "description": "Request sent to enable ILM on a deployment."
        }, 
        "TransientKibanaPlanConfiguration": {
            "type": "object", 
            "properties": {
                "plan_configuration": {
                    "$ref": "#/definitions/KibanaPlanControlConfiguration"
                }, 
                "strategy": {
                    "$ref": "#/definitions/PlanStrategy"
                }
            }, 
            "description": "Defines the configuration parameters that control how the plan is applied. For example, the Elasticsearch cluster topology and Kibana instance settings."
        }, 
        "DeploymentShutdownResponse": {
            "required": [
                "id", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "id": {
                    "type": "string", 
                    "description": "The id of the deployment"
                }, 
                "orphaned": {
                    "description": "Details about orphaned resources", 
                    "$ref": "#/definitions/Orphaned"
                }, 
                "name": {
                    "type": "string", 
                    "description": "The name of the deployment"
                }
            }, 
            "description": "A response returned from the Deployment shutdown endpoint"
        }, 
        "IpFilteringSettings": {
            "required": [
                "rulesets"
            ], 
            "type": "object", 
            "properties": {
                "rulesets": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "IDs of the IP filter rulesets"
                }
            }, 
            "description": "The configuration settings for IP filtering."
        }, 
        "AppSearchResourceInfo": {
            "required": [
                "elasticsearch_cluster_ref_id", 
                "id", 
                "info", 
                "ref_id", 
                "region"
            ], 
            "type": "object", 
            "properties": {
                "elasticsearch_cluster_ref_id": {
                    "type": "string", 
                    "description": "The Elasticsearch cluster that this resource depends on."
                }, 
                "info": {
                    "description": "Info for the resource.", 
                    "$ref": "#/definitions/AppSearchInfo"
                }, 
                "region": {
                    "type": "string", 
                    "description": "The region where this resource exists"
                }, 
                "id": {
                    "type": "string", 
                    "description": "The randomly-generated id of a Resource"
                }, 
                "ref_id": {
                    "type": "string", 
                    "description": "The locally-unique user-specified id of a Resource"
                }
            }, 
            "description": "Describes an App Search resource belonging to a Deployment"
        }, 
        "KibanaClusterPlansInfo": {
            "required": [
                "healthy", 
                "history"
            ], 
            "type": "object", 
            "properties": {
                "healthy": {
                    "type": "boolean", 
                    "description": "Whether the plan situation is healthy (if unhealthy, means the last plan attempt failed)"
                }, 
                "current": {
                    "$ref": "#/definitions/KibanaClusterPlanInfo"
                }, 
                "pending": {
                    "$ref": "#/definitions/KibanaClusterPlanInfo"
                }, 
                "history": {
                    "items": {
                        "$ref": "#/definitions/KibanaClusterPlanInfo"
                    }, 
                    "type": "array"
                }
            }, 
            "description": "Information about the current, pending, or past Kibana instance plans."
        }, 
        "EmptyResponse": {
            "type": "object"
        }, 
        "KibanaDeeplink": {
            "required": [
                "semver", 
                "uri"
            ], 
            "type": "object", 
            "properties": {
                "semver": {
                    "type": "string", 
                    "description": "Semver condition when to apply the URI."
                }, 
                "uri": {
                    "type": "string", 
                    "description": "URI to which the user should be directed."
                }
            }, 
            "description": "Embedded object that contains information for linking into a specific Kibana page configured via the template."
        }, 
        "EnterpriseSearchSystemSettings": {
            "type": "object", 
            "properties": {
                "elasticsearch_password": {
                    "type": "string", 
                    "description": "Optionally override the account within Enterprise Search - defaults to a system account that always exists (if specified, the username must also be specified)"
                }, 
                "elasticsearch_username": {
                    "type": "string", 
                    "description": "Optionally override the account within Enterprise Search - defaults to a system account that always exists (if specified, the password must also be specified)"
                }, 
                "secret_session_key": {
                    "type": "string", 
                    "description": "Optionally override the secret session key within Enterprise Search - defaults to the previously existing secretSession"
                }, 
                "elasticsearch_url": {
                    "type": "string", 
                    "description": "Optionally override the URL to which to send data (for advanced users only, if unspecified the system selects an internal URL)"
                }
            }, 
            "description": "This structure defines a curated subset of the Enterprise Search settings. (This field together with 'user_settings_override*' and  'user_settings*' defines the total set of Enterprise Search settings)"
        }, 
        "ExistsQuery": {
            "required": [
                "field"
            ], 
            "type": "object", 
            "properties": {
                "field": {
                    "type": "string", 
                    "description": "The field to check for non-null values in."
                }
            }, 
            "description": "Matches documents that have at least one non-`null` value in the original field."
        }, 
        "TopologyElementControl": {
            "required": [
                "min"
            ], 
            "type": "object", 
            "properties": {
                "min": {
                    "description": "Absolute minimum size limit for a topology element created with a deployment template. If the value is 0, that means the topology element can be disabled.", 
                    "$ref": "#/definitions/TopologySize"
                }
            }, 
            "description": "Controls for the topology element. Only used as part of the deployment template. Ignored if included as part of a deployment."
        }, 
        "EnterpriseSearchInfo": {
            "required": [
                "elasticsearch_cluster", 
                "external_links", 
                "healthy", 
                "id", 
                "name", 
                "plan_info", 
                "status", 
                "topology"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "enum": [
                        "initializing", 
                        "stopping", 
                        "stopped", 
                        "rebooting", 
                        "restarting", 
                        "reconfiguring", 
                        "started"
                    ], 
                    "type": "string", 
                    "description": "Enterprise Search status"
                }, 
                "name": {
                    "type": "string", 
                    "description": "The name of the Enterprise Search"
                }, 
                "links": {
                    "additionalProperties": {
                        "$ref": "#/definitions/Hyperlink"
                    }, 
                    "type": "object", 
                    "description": "A map of application-specific operations (which map to 'operationId's in the Swagger API) to metadata about that operation"
                }, 
                "elasticsearch_cluster": {
                    "$ref": "#/definitions/TargetElasticsearchCluster"
                }, 
                "healthy": {
                    "type": "boolean", 
                    "description": "Whether the Enterprise Search is healthy or not (one or more of the info subsections will have healthy: false)"
                }, 
                "region": {
                    "type": "string", 
                    "description": "The region that this Enterprise Search belongs to. Only populated in SaaS or federated ECE."
                }, 
                "settings": {
                    "description": "The cluster metadata settings for the Enterprise Search", 
                    "$ref": "#/definitions/EnterpriseSearchSettings"
                }, 
                "plan_info": {
                    "$ref": "#/definitions/EnterpriseSearchPlansInfo"
                }, 
                "external_links": {
                    "uniqueItems": true, 
                    "items": {
                        "$ref": "#/definitions/ExternalHyperlink"
                    }, 
                    "type": "array", 
                    "description": "External resources related to the Enterprise Search"
                }, 
                "deployment_id": {
                    "type": "string", 
                    "description": "The id of the deployment that this Enterprise Search belongs to."
                }, 
                "topology": {
                    "$ref": "#/definitions/ClusterTopologyInfo"
                }, 
                "id": {
                    "type": "string", 
                    "description": "The id of the Enterprise Search"
                }, 
                "metadata": {
                    "$ref": "#/definitions/ClusterMetadataInfo"
                }
            }, 
            "description": "The overview information for the Enterprise Search Server."
        }, 
        "DeploymentResource": {
            "required": [
                "id", 
                "kind", 
                "ref_id", 
                "region"
            ], 
            "type": "object", 
            "properties": {
                "elasticsearch_cluster_ref_id": {
                    "type": "string", 
                    "description": "The Elasticsearch cluster that this resource depends on."
                }, 
                "kind": {
                    "type": "string", 
                    "description": "The kind of resource"
                }, 
                "cloud_id": {
                    "type": "string", 
                    "description": "An encoded string that provides other Elastic services with the necessary information to connect to this Elasticsearch and Kibana"
                }, 
                "secret_token": {
                    "type": "string", 
                    "description": "Secret token for using a created resource. Only provided on initial create and absent otherwise."
                }, 
                "warnings": {
                    "items": {
                        "$ref": "#/definitions/ReplyWarning"
                    }, 
                    "type": "array", 
                    "description": "List of warnings generated from validating resource updates"
                }, 
                "region": {
                    "type": "string", 
                    "description": "Identifier of the region in which this resource runs."
                }, 
                "ref_id": {
                    "type": "string", 
                    "description": "A locally-unique friendly alias for this Elasticsearch cluster"
                }, 
                "credentials": {
                    "description": "Credentials for logging into a created resource. Only provided on initial create and absent otherwise.", 
                    "$ref": "#/definitions/ClusterCredentials"
                }, 
                "id": {
                    "type": "string", 
                    "description": "A system-unique id for the created resource"
                }
            }, 
            "description": "Data for a deployment resource"
        }, 
        "ApmPlansInfo": {
            "required": [
                "healthy", 
                "history"
            ], 
            "type": "object", 
            "properties": {
                "healthy": {
                    "type": "boolean", 
                    "description": "Whether the plan situation is healthy (if unhealthy, means the last plan attempt failed)"
                }, 
                "current": {
                    "$ref": "#/definitions/ApmPlanInfo"
                }, 
                "pending": {
                    "$ref": "#/definitions/ApmPlanInfo"
                }, 
                "history": {
                    "items": {
                        "$ref": "#/definitions/ApmPlanInfo"
                    }, 
                    "type": "array"
                }
            }, 
            "description": "Information about current, pending, and past APM Server plans."
        }, 
        "ReadOnlyRequest": {
            "required": [
                "enabled"
            ], 
            "type": "object", 
            "properties": {
                "enabled": {
                    "type": "boolean", 
                    "description": "Enabled or disabled read-only mode"
                }
            }, 
            "description": "Read-only mode request payload"
        }, 
        "ElasticsearchUserPlugin": {
            "required": [
                "elasticsearch_version", 
                "name", 
                "url"
            ], 
            "type": "object", 
            "properties": {
                "url": {
                    "type": "string", 
                    "description": "The URL of the plugin (must be accessible from the ECE infrastructure)"
                }, 
                "name": {
                    "type": "string", 
                    "description": "The name of the plugin"
                }, 
                "elasticsearch_version": {
                    "type": "string", 
                    "description": "The supported Elasticsearch version (must match the version in the plan)"
                }
            }, 
            "description": "A list of admin-uploaded plugin objects."
        }, 
        "ObservabilityIssue": {
            "required": [
                "description", 
                "severity"
            ], 
            "type": "object", 
            "properties": {
                "description": {
                    "type": "string", 
                    "description": "A user-friendly description of the observability health issue"
                }, 
                "severity": {
                    "type": "string", 
                    "description": "Severity of the health issue"
                }
            }, 
            "description": "Observability health issue"
        }, 
        "DeploymentObservability": {
            "required": [
                "healthy"
            ], 
            "type": "object", 
            "properties": {
                "healthy": {
                    "type": "boolean", 
                    "description": "Whether the deployment observability is healthy or not (one or more of the subsections will have healthy: false)"
                }, 
                "metrics": {
                    "description": "The metrics information for the deployment", 
                    "$ref": "#/definitions/DeploymentMetrics"
                }, 
                "logging": {
                    "description": "The logging information for the deployment", 
                    "$ref": "#/definitions/DeploymentLogging"
                }, 
                "issues": {
                    "items": {
                        "$ref": "#/definitions/ObservabilityIssue"
                    }, 
                    "type": "array", 
                    "description": "General observability health issues for the deployment"
                }
            }, 
            "description": "Observability information for a deployment"
        }, 
        "DeploymentResourceCommandResponse": {
            "type": "object", 
            "properties": {
                "warnings": {
                    "items": {
                        "$ref": "#/definitions/ReplyWarning"
                    }, 
                    "type": "array", 
                    "description": "List of warnings generated from validating command"
                }
            }, 
            "description": "Response returned when a command is successfully issued against a given Deployment resource"
        }, 
        "Updates": {
            "type": "object", 
            "properties": {
                "appsearch": {
                    "items": {
                        "$ref": "#/definitions/AppSearch"
                    }, 
                    "type": "array", 
                    "description": "Diagnostics for AppSearches"
                }, 
                "elasticsearch": {
                    "items": {
                        "$ref": "#/definitions/Elasticsearch"
                    }, 
                    "type": "array", 
                    "description": "Diagnostics for Elasticsearch clusters"
                }, 
                "enterprise_search": {
                    "items": {
                        "$ref": "#/definitions/EnterpriseSearch"
                    }, 
                    "type": "array", 
                    "description": "Diagnostics for Enterprise Search resources"
                }, 
                "kibana": {
                    "items": {
                        "$ref": "#/definitions/Kibana"
                    }, 
                    "type": "array", 
                    "description": "Diagnostics for Kibanas"
                }, 
                "apm": {
                    "items": {
                        "$ref": "#/definitions/Apm"
                    }, 
                    "type": "array", 
                    "description": "Diagnostics for APMs"
                }
            }, 
            "description": "Holds diagnostics for existing resources that might be updated"
        }, 
        "IndexPattern": {
            "required": [
                "index_pattern", 
                "policy_name"
            ], 
            "type": "object", 
            "properties": {
                "index_pattern": {
                    "type": "string", 
                    "description": "Index pattern to which the ILM policy will be applied."
                }, 
                "node_attributes": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "Defines the Elasticsearch node attributes for the warm element of the topology"
                }, 
                "policy_name": {
                    "type": "string", 
                    "description": "Name of the policy to create"
                }
            }, 
            "description": "An index pattern described indicating how it has to be migrated to ILM."
        }, 
        "GrowShrinkStrategyConfig": {
            "type": "object", 
            "description": "A strategy that creates instances with the new plan, migrates data from the old instances, then shuts down the old instances. `GrowShrinkStrategyConfig` is safer than 'rolling' and ensures single node availability during a plan change, but can be a lot slower on larger clusters."
        }, 
        "TopologySize": {
            "required": [
                "resource", 
                "value"
            ], 
            "type": "object", 
            "properties": {
                "resource": {
                    "enum": [
                        "memory", 
                        "storage"
                    ], 
                    "type": "string", 
                    "description": "Type of resource"
                }, 
                "value": {
                    "type": "integer", 
                    "description": "Amount of resource", 
                    "format": "int32"
                }
            }, 
            "description": "Measured by the amount of a resource. The final cluster size is calculated using multipliers from the topology instance configuration."
        }, 
        "DeploymentCreateResponse": {
            "required": [
                "created", 
                "id", 
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "The name of the deployment"
                }, 
                "created": {
                    "type": "boolean", 
                    "description": "Whether or not the deployment was freshly created"
                }, 
                "alias": {
                    "type": "string", 
                    "description": "A user-defined deployment alias for user-friendly resource URLs"
                }, 
                "diagnostics": {
                    "description": "Backend diagnostics. Sent if validation is requested.", 
                    "$ref": "#/definitions/DeploymentDiagnostics"
                }, 
                "id": {
                    "type": "string", 
                    "description": "The id of the deployment"
                }, 
                "resources": {
                    "items": {
                        "$ref": "#/definitions/DeploymentResource"
                    }, 
                    "type": "array", 
                    "description": "List of created resources."
                }
            }, 
            "description": "A response returned from the Deployment create endpoint"
        }, 
        "AppSearchPlanControlConfiguration": {
            "type": "object", 
            "properties": {
                "cluster_reboot": {
                    "enum": [
                        "forced"
                    ], 
                    "type": "string", 
                    "description": "Set to 'forced' to force a reboot as part of the upgrade plan"
                }, 
                "move_allocators": {
                    "items": {
                        "$ref": "#/definitions/AllocatorMoveRequest"
                    }, 
                    "type": "array"
                }, 
                "reallocate_instances": {
                    "type": "boolean", 
                    "description": "If true (default: false) does not allow re-using any existing instances currently in the cluster, ie even unchanged instances will be re-created"
                }, 
                "preferred_allocators": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of allocators on which instances are placed if possible (if not possible/not specified then any available allocator with space is used)"
                }, 
                "calm_wait_time": {
                    "type": "integer", 
                    "description": "This timeout determines how long to give a cluster after it responds to API calls before performing actual operations on it. It defaults to 5s", 
                    "format": "int64"
                }, 
                "timeout": {
                    "type": "integer", 
                    "description": "The total timeout in seconds after which the plan is cancelled even if it is not complete. Defaults to 4x the max memory capacity per node (in MB)", 
                    "format": "int64"
                }, 
                "extended_maintenance": {
                    "type": "boolean", 
                    "description": "If true (default false), does not clear the maintenance flag (which prevents its API from being accessed except by the constructor) on new instances added until after a snapshot has been restored, otherwise, the maintenance flag is cleared once the new instances successfully join the new cluster"
                }, 
                "move_instances": {
                    "items": {
                        "$ref": "#/definitions/InstanceMoveRequest"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "TrafficFilterSettings": {
            "required": [
                "rulesets"
            ], 
            "type": "object", 
            "properties": {
                "rulesets": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "IDs of the traffic filter rulesets"
                }
            }, 
            "description": "The configuration settings for the traffic filter."
        }, 
        "StackVersionNodeType": {
            "required": [
                "description", 
                "name", 
                "node_type"
            ], 
            "type": "object", 
            "properties": {
                "mandatory": {
                    "type": "boolean", 
                    "description": "Flag to specify a node type is mandatory in a cluster's plan"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the node type"
                }, 
                "settings": {
                    "type": "object", 
                    "description": "Settings that are applied to all nodes of this type", 
                    "properties": {}
                }, 
                "node_type": {
                    "type": "string", 
                    "description": "Type of the node (master, data, ...)"
                }, 
                "capacity_constraints": {
                    "$ref": "#/definitions/StackVersionInstanceCapacityConstraint"
                }, 
                "compatible_node_types": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Node types that are compatible with this one"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Description of the node type"
                }
            }, 
            "description": "The configuration for an Elastic Stack node type."
        }, 
        "EnterpriseSearchPlanControlConfiguration": {
            "type": "object", 
            "properties": {
                "cluster_reboot": {
                    "enum": [
                        "forced"
                    ], 
                    "type": "string", 
                    "description": "Set to 'forced' to force a reboot as part of the upgrade plan"
                }, 
                "move_allocators": {
                    "items": {
                        "$ref": "#/definitions/AllocatorMoveRequest"
                    }, 
                    "type": "array"
                }, 
                "reallocate_instances": {
                    "type": "boolean", 
                    "description": "If true (default: false) does not allow re-using any existing instances currently in the cluster, i.e. even unchanged instances will be re-created"
                }, 
                "preferred_allocators": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of allocators on which instances are placed if possible (if not possible/not specified then any available allocator with space is used)"
                }, 
                "calm_wait_time": {
                    "type": "integer", 
                    "description": "This timeout determines how long to give a cluster after it responds to API calls before performing actual operations on it. It defaults to 5s", 
                    "format": "int64"
                }, 
                "timeout": {
                    "type": "integer", 
                    "description": "The total timeout in seconds after which the plan is cancelled even if it is not complete. Defaults to 4x the max memory capacity per node (in MB)", 
                    "format": "int64"
                }, 
                "extended_maintenance": {
                    "type": "boolean", 
                    "description": "If true (default false), does not clear the maintenance flag (which prevents its API from being accessed except by the constructor) on new instances added until after a snapshot has been restored, otherwise, the maintenance flag is cleared once the new instances successfully join the new cluster"
                }, 
                "move_instances": {
                    "items": {
                        "$ref": "#/definitions/InstanceMoveRequest"
                    }, 
                    "type": "array"
                }
            }
        }, 
        "DeploymentCreateMetadata": {
            "type": "object", 
            "properties": {
                "tags": {
                    "items": {
                        "$ref": "#/definitions/MetadataItem"
                    }, 
                    "type": "array", 
                    "description": "Arbitrary user-defined metadata associated with this deployment"
                }
            }, 
            "description": "Additional information about the new deployment object."
        }, 
        "AppSearchInfo": {
            "required": [
                "elasticsearch_cluster", 
                "external_links", 
                "healthy", 
                "id", 
                "name", 
                "plan_info", 
                "status", 
                "topology"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "enum": [
                        "initializing", 
                        "stopping", 
                        "stopped", 
                        "rebooting", 
                        "restarting", 
                        "reconfiguring", 
                        "started"
                    ], 
                    "type": "string", 
                    "description": "App Search status"
                }, 
                "name": {
                    "type": "string", 
                    "description": "The name of the App Search"
                }, 
                "links": {
                    "additionalProperties": {
                        "$ref": "#/definitions/Hyperlink"
                    }, 
                    "type": "object", 
                    "description": "A map of application-specific operations (which map to 'operationId's in the Swagger API) to metadata about that operation"
                }, 
                "elasticsearch_cluster": {
                    "$ref": "#/definitions/TargetElasticsearchCluster"
                }, 
                "healthy": {
                    "type": "boolean", 
                    "description": "Whether the App Search is healthy or not (one or more of the info subsections will have healthy: false)"
                }, 
                "region": {
                    "type": "string", 
                    "description": "The region that this App Search belongs to. Only populated in SaaS or federated ECE."
                }, 
                "settings": {
                    "description": "The cluster metadata settings for the App Search", 
                    "$ref": "#/definitions/AppSearchSettings"
                }, 
                "plan_info": {
                    "$ref": "#/definitions/AppSearchPlansInfo"
                }, 
                "external_links": {
                    "uniqueItems": true, 
                    "items": {
                        "$ref": "#/definitions/ExternalHyperlink"
                    }, 
                    "type": "array", 
                    "description": "External resources related to the App Search"
                }, 
                "deployment_id": {
                    "type": "string", 
                    "description": "The id of the deployment that this App Search belongs to."
                }, 
                "topology": {
                    "$ref": "#/definitions/ClusterTopologyInfo"
                }, 
                "id": {
                    "type": "string", 
                    "description": "The id of the App Search"
                }, 
                "metadata": {
                    "$ref": "#/definitions/ClusterMetadataInfo"
                }
            }, 
            "description": "The overview information for the App Search Server."
        }, 
        "AppSearchPlanInfo": {
            "required": [
                "healthy", 
                "plan_attempt_log"
            ], 
            "type": "object", 
            "properties": {
                "attempt_end_time": {
                    "type": "string", 
                    "description": "If this plan completed or failed (ie is not pending), when the attempt ended (ISO format in UTC)", 
                    "format": "date-time"
                }, 
                "plan_attempt_id": {
                    "type": "string", 
                    "description": "A UUID for each plan attempt"
                }, 
                "healthy": {
                    "type": "boolean", 
                    "description": "Either the plan ended successfully, or is not yet completed (and no errors have occurred)"
                }, 
                "plan_end_time": {
                    "type": "string", 
                    "description": "If this plan is not current or pending, when the plan was no longer active (ISO format in UTC)", 
                    "format": "date-time"
                }, 
                "source": {
                    "description": "Information describing the source that facilitated the plans current state", 
                    "$ref": "#/definitions/ChangeSourceInfo"
                }, 
                "plan_attempt_log": {
                    "items": {
                        "$ref": "#/definitions/ClusterPlanStepInfo"
                    }, 
                    "type": "array"
                }, 
                "plan": {
                    "$ref": "#/definitions/AppSearchPlan"
                }, 
                "plan_attempt_name": {
                    "type": "string", 
                    "description": "A human readable name for each plan attempt, only populated when retrieving plan histories"
                }, 
                "attempt_start_time": {
                    "type": "string", 
                    "description": "When this plan attempt (ie to apply the plan to the App Search) started (ISO format in UTC)", 
                    "format": "date-time"
                }
            }, 
            "description": "Information about the App Search Server plan."
        }, 
        "TrafficFilterRulesetInfo": {
            "required": [
                "id", 
                "include_by_default", 
                "name", 
                "region", 
                "rules", 
                "type"
            ], 
            "type": "object", 
            "properties": {
                "associations": {
                    "items": {
                        "$ref": "#/definitions/FilterAssociation"
                    }, 
                    "type": "array", 
                    "description": "List of associations. Returned only when include_associations query parameter is true"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Description of the ruleset"
                }, 
                "rules": {
                    "items": {
                        "$ref": "#/definitions/TrafficFilterRule"
                    }, 
                    "type": "array", 
                    "description": "List of rules"
                }, 
                "region": {
                    "type": "string", 
                    "description": "The ruleset can be attached only to deployments in the specific region"
                }, 
                "include_by_default": {
                    "type": "boolean", 
                    "description": "Should the ruleset be automatically included in the new deployments"
                }, 
                "total_associations": {
                    "type": "integer", 
                    "description": "Total number of associations. This includes associations the user does not have permission to view.Returned only when include_associations query parameter is true", 
                    "format": "int32"
                }, 
                "type": {
                    "type": "string", 
                    "description": "Type of the ruleset"
                }, 
                "id": {
                    "type": "string", 
                    "description": "The ruleset ID"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the ruleset"
                }
            }, 
            "description": "The container for a set of traffic filter rules."
        }, 
        "ElasticsearchInfo": {
            "required": [
                "blocking_issues", 
                "healthy", 
                "master_info", 
                "shard_info"
            ], 
            "type": "object", 
            "properties": {
                "healthy": {
                    "type": "boolean", 
                    "description": "Whether the Elasticsearch cluster is healthy (check the sub-objects for more details if not)"
                }, 
                "shard_info": {
                    "$ref": "#/definitions/ElasticsearchShardsInfo"
                }, 
                "master_info": {
                    "$ref": "#/definitions/ElasticsearchMasterInfo"
                }, 
                "blocking_issues": {
                    "$ref": "#/definitions/ElasticsearchClusterBlockingIssues"
                }
            }, 
            "description": "Information about the Elasticsearch cluster."
        }, 
        "RemoteClusterRef": {
            "required": [
                "cluster_id"
            ], 
            "type": "object", 
            "properties": {
                "cluster_id": {
                    "type": "string", 
                    "description": "Cluster id of the remote cluster"
                }, 
                "skip_unavailable": {
                    "type": "boolean", 
                    "description": "If true, skip this cluster during search if it is disconnected. Default: false"
                }
            }, 
            "description": "The Elasticsearch cluster to connect to for cross-cluster search."
        }, 
        "ElasticsearchClusterTrustSettings": {
            "type": "object", 
            "properties": {
                "accounts": {
                    "items": {
                        "$ref": "#/definitions/AccountTrustRelationship"
                    }, 
                    "type": "array", 
                    "description": "The list of trust relationships with different accounts"
                }, 
                "external": {
                    "items": {
                        "$ref": "#/definitions/ExternalTrustRelationship"
                    }, 
                    "type": "array", 
                    "description": "The list of trust relationships with external entities"
                }
            }, 
            "description": "Configuration of trust with other clusters."
        }, 
        "DeploymentsListingData": {
            "required": [
                "id", 
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "id": {
                    "type": "string", 
                    "description": "The id of this deployment"
                }, 
                "resources": {
                    "items": {
                        "$ref": "#/definitions/DeploymentResource"
                    }, 
                    "type": "array", 
                    "description": "List of resources in this deployment"
                }, 
                "name": {
                    "type": "string", 
                    "description": "The name of this deployment"
                }
            }
        }, 
        "ClusterPlanStepInfo": {
            "required": [
                "info_log", 
                "stage", 
                "started", 
                "status", 
                "step_id"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "enum": [
                        "success", 
                        "warning", 
                        "error", 
                        "pending"
                    ], 
                    "type": "string", 
                    "description": "The status of the step (success, warning, error - warning means something didn't go as expected but it was not serious enough to abort the plan)"
                }, 
                "started": {
                    "type": "string", 
                    "description": "When the step started (ISO format in UTC)", 
                    "format": "date-time"
                }, 
                "duration_in_millis": {
                    "type": "integer", 
                    "description": "The duration of the step in MS", 
                    "format": "int64"
                }, 
                "completed": {
                    "type": "string", 
                    "description": "When the step completed (ISO format in UTC)", 
                    "format": "date-time"
                }, 
                "step_id": {
                    "type": "string", 
                    "description": "ID of current step"
                }, 
                "info_log": {
                    "items": {
                        "$ref": "#/definitions/ClusterPlanStepLogMessageInfo"
                    }, 
                    "type": "array", 
                    "description": "Human readable summaries of the step, including messages for each stage of the step"
                }, 
                "stage": {
                    "enum": [
                        "starting", 
                        "completed", 
                        "in_progress"
                    ], 
                    "type": "string", 
                    "description": "Current stage that the step is in"
                }
            }, 
            "description": "Information about a step in a plan."
        }, 
        "MatchQuery": {
            "required": [
                "query"
            ], 
            "type": "object", 
            "properties": {
                "operator": {
                    "type": "string", 
                    "description": "The operator flag can be set to or or and to control the boolean clauses (defaults to or)."
                }, 
                "query": {
                    "type": "string", 
                    "description": "The text/numeric/date to query for."
                }, 
                "minimum_should_match": {
                    "type": "integer", 
                    "description": "The minimum number of optional should clauses to match.", 
                    "format": "int32"
                }, 
                "analyzer": {
                    "type": "string", 
                    "description": "The analyzer that will be used to perform the analysis process on the text. Defaults to the analyzer that was used to index the field."
                }
            }, 
            "description": "Consumes and analyzes text, numbers, and dates, then constructs a query."
        }, 
        "CreateExtensionRequest": {
            "required": [
                "extension_type", 
                "name", 
                "version"
            ], 
            "type": "object", 
            "properties": {
                "version": {
                    "type": "string", 
                    "description": "The Elasticsearch version."
                }, 
                "extension_type": {
                    "enum": [
                        "plugin", 
                        "bundle"
                    ], 
                    "type": "string", 
                    "description": "The extension type."
                }, 
                "name": {
                    "type": "string", 
                    "description": "The extension name. Only ASCII alphanumeric and [_.-] characters allowed"
                }, 
                "download_url": {
                    "type": "string", 
                    "description": "The URL to download the extension archive."
                }, 
                "description": {
                    "type": "string", 
                    "description": "The extension description."
                }
            }, 
            "description": "The body of a request to create a new extension"
        }, 
        "ElasticsearchPayload": {
            "required": [
                "plan", 
                "ref_id", 
                "region"
            ], 
            "type": "object", 
            "properties": {
                "region": {
                    "type": "string", 
                    "description": "The region where this resource exists"
                }, 
                "settings": {
                    "description": "The settings for building this Elasticsearch cluster", 
                    "$ref": "#/definitions/ElasticsearchClusterSettings"
                }, 
                "display_name": {
                    "type": "string", 
                    "description": "The human readable name for the cluster (defaults to the generated cluster id if not specified)"
                }, 
                "plan": {
                    "description": "The plan for building this Elasticsearch cluster", 
                    "$ref": "#/definitions/ElasticsearchClusterPlan"
                }, 
                "ref_id": {
                    "type": "string", 
                    "description": "A locally-unique user-specified id for this Elasticsearch cluster"
                }
            }, 
            "description": "An alias for an Elasticsearch Cluster paired with a request for creating one"
        }, 
        "EnterpriseSearchResourceInfo": {
            "required": [
                "elasticsearch_cluster_ref_id", 
                "id", 
                "info", 
                "ref_id", 
                "region"
            ], 
            "type": "object", 
            "properties": {
                "elasticsearch_cluster_ref_id": {
                    "type": "string", 
                    "description": "The Elasticsearch cluster that this resource depends on."
                }, 
                "info": {
                    "description": "Info for the resource.", 
                    "$ref": "#/definitions/EnterpriseSearchInfo"
                }, 
                "region": {
                    "type": "string", 
                    "description": "The region where this resource exists"
                }, 
                "id": {
                    "type": "string", 
                    "description": "The randomly-generated id of a Resource"
                }, 
                "ref_id": {
                    "type": "string", 
                    "description": "The locally-unique user-specified id of a Resource"
                }
            }, 
            "description": "Describes an Enterprise Search resource belonging to a Deployment"
        }, 
        "DeleteApiKeysRequest": {
            "required": [
                "keys"
            ], 
            "type": "object", 
            "properties": {
                "keys": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "The list of API key IDs."
                }
            }, 
            "description": "The request payload that deletes the API keys."
        }, 
        "KibanaClusterPlanInfo": {
            "required": [
                "healthy", 
                "plan_attempt_log"
            ], 
            "type": "object", 
            "properties": {
                "attempt_end_time": {
                    "type": "string", 
                    "description": "If this plan completed or failed (ie is not pending), when the attempt ended (ISO format in UTC)", 
                    "format": "date-time"
                }, 
                "plan_attempt_id": {
                    "type": "string", 
                    "description": "A UUID for each plan attempt"
                }, 
                "healthy": {
                    "type": "boolean", 
                    "description": "Either the plan ended successfully, or is not yet completed (and no errors have occurred)"
                }, 
                "plan_end_time": {
                    "type": "string", 
                    "description": "If this plan is not current or pending, when the plan was no longer active (ISO format in UTC)", 
                    "format": "date-time"
                }, 
                "source": {
                    "description": "Information describing the source that facilitated the plans current state", 
                    "$ref": "#/definitions/ChangeSourceInfo"
                }, 
                "plan_attempt_log": {
                    "items": {
                        "$ref": "#/definitions/ClusterPlanStepInfo"
                    }, 
                    "type": "array"
                }, 
                "plan": {
                    "$ref": "#/definitions/KibanaClusterPlan"
                }, 
                "plan_attempt_name": {
                    "type": "string", 
                    "description": "A human readable name for each plan attempt, only populated when retrieving plan histories"
                }, 
                "attempt_start_time": {
                    "type": "string", 
                    "description": "When this plan attempt (ie to apply the plan to the cluster) started (ISO format in UTC)", 
                    "format": "date-time"
                }
            }, 
            "description": "Information about the current, pending, or past Kibana instance plan."
        }, 
        "RemoteResourceInfo": {
            "required": [
                "compatible", 
                "connected", 
                "healthy", 
                "trusted", 
                "trusted_back"
            ], 
            "type": "object", 
            "properties": {
                "healthy": {
                    "type": "boolean", 
                    "description": "Whether or not the remote cluster is healthy"
                }, 
                "compatible": {
                    "type": "boolean", 
                    "description": "Whether or not the remote cluster version is compatible with this cluster version."
                }, 
                "connected": {
                    "type": "boolean", 
                    "description": "Whether or not there is at least one connection to the remote cluster."
                }, 
                "trusted": {
                    "type": "boolean", 
                    "description": "Whether or not the remote cluster is trusted by this cluster."
                }, 
                "trusted_back": {
                    "type": "boolean", 
                    "description": "Whether or not the remote cluster trusts this cluster back."
                }
            }, 
            "description": "Information about a Remote Cluster."
        }, 
        "ApmResourceInfo": {
            "required": [
                "elasticsearch_cluster_ref_id", 
                "id", 
                "info", 
                "ref_id", 
                "region"
            ], 
            "type": "object", 
            "properties": {
                "elasticsearch_cluster_ref_id": {
                    "type": "string", 
                    "description": "The Elasticsearch cluster that this resource depends on."
                }, 
                "info": {
                    "description": "Info for the resource.", 
                    "$ref": "#/definitions/ApmInfo"
                }, 
                "region": {
                    "type": "string", 
                    "description": "The region where this resource exists"
                }, 
                "id": {
                    "type": "string", 
                    "description": "The randomly-generated id of a Resource"
                }, 
                "ref_id": {
                    "type": "string", 
                    "description": "The locally-unique user-specified id of a Resource"
                }
            }, 
            "description": "Describes an APM resource belonging to a Deployment"
        }, 
        "KibanaPlanControlConfiguration": {
            "type": "object", 
            "properties": {
                "cluster_reboot": {
                    "enum": [
                        "forced"
                    ], 
                    "type": "string", 
                    "description": "Set to 'forced' to force a reboot as part of the upgrade plan"
                }, 
                "extended_maintenance": {
                    "type": "boolean", 
                    "description": "If true (default false), does not clear the maintenance flag (which prevents its API from being accessed except by the constructor) on new instances added until after a snapshot has been restored, otherwise, the maintenance flag is cleared once the new instances successfully join the new cluster"
                }, 
                "calm_wait_time": {
                    "type": "integer", 
                    "description": "This timeout determines how long to give a cluster after it responds to API calls before performing actual operations on it. It defaults to 5s", 
                    "format": "int64"
                }, 
                "timeout": {
                    "type": "integer", 
                    "description": "The total timeout in seconds after which the plan is cancelled even if it is not complete. Defaults to 4x the max memory capacity per node (in MB)", 
                    "format": "int64"
                }
            }, 
            "description": "The configuration settings for the timeout and fallback parameters."
        }, 
        "ApmPlan": {
            "required": [
                "apm"
            ], 
            "type": "object", 
            "properties": {
                "cluster_topology": {
                    "items": {
                        "$ref": "#/definitions/ApmTopologyElement"
                    }, 
                    "type": "array"
                }, 
                "transient": {
                    "$ref": "#/definitions/TransientApmPlanConfiguration"
                }, 
                "apm": {
                    "$ref": "#/definitions/ApmConfiguration"
                }
            }, 
            "description": "The plan for the APM Server."
        }, 
        "DeploymentTemplateReference": {
            "required": [
                "id"
            ], 
            "type": "object", 
            "properties": {
                "version": {
                    "type": "string", 
                    "description": "A version identifier to disambiguate multiple revisions of the same template"
                }, 
                "id": {
                    "type": "string", 
                    "description": "The unique identifier of the deployment template"
                }
            }, 
            "description": "Specifies the deployment template used to create the plan."
        }, 
        "ApmInfo": {
            "required": [
                "elasticsearch_cluster", 
                "external_links", 
                "healthy", 
                "id", 
                "name", 
                "plan_info", 
                "status", 
                "topology"
            ], 
            "type": "object", 
            "properties": {
                "status": {
                    "enum": [
                        "initializing", 
                        "stopping", 
                        "stopped", 
                        "rebooting", 
                        "restarting", 
                        "reconfiguring", 
                        "started"
                    ], 
                    "type": "string", 
                    "description": "APM status"
                }, 
                "name": {
                    "type": "string", 
                    "description": "The name of the APM"
                }, 
                "links": {
                    "additionalProperties": {
                        "$ref": "#/definitions/Hyperlink"
                    }, 
                    "type": "object", 
                    "description": "A map of application-specific operations (which map to 'operationId's in the Swagger API) to metadata about that operation"
                }, 
                "elasticsearch_cluster": {
                    "$ref": "#/definitions/TargetElasticsearchCluster"
                }, 
                "healthy": {
                    "type": "boolean", 
                    "description": "Whether the APM is healthy or not (one or more of the info subsections will have healthy: false)"
                }, 
                "region": {
                    "type": "string", 
                    "description": "The region that this APM belongs to. Only populated in SaaS or federated ECE."
                }, 
                "settings": {
                    "description": "The cluster metadata settings for the APM", 
                    "$ref": "#/definitions/ApmSettings"
                }, 
                "plan_info": {
                    "$ref": "#/definitions/ApmPlansInfo"
                }, 
                "external_links": {
                    "uniqueItems": true, 
                    "items": {
                        "$ref": "#/definitions/ExternalHyperlink"
                    }, 
                    "type": "array", 
                    "description": "External resources related to the APM"
                }, 
                "deployment_id": {
                    "type": "string", 
                    "description": "The id of the deployment that this APM Server belongs to."
                }, 
                "topology": {
                    "$ref": "#/definitions/ClusterTopologyInfo"
                }, 
                "id": {
                    "type": "string", 
                    "description": "The id of the APM"
                }, 
                "metadata": {
                    "$ref": "#/definitions/ClusterMetadataInfo"
                }
            }, 
            "description": "The overview information for the APM Server."
        }, 
        "ClusterCredentials": {
            "required": [
                "password", 
                "username"
            ], 
            "type": "object", 
            "properties": {
                "username": {
                    "type": "string", 
                    "description": "The username of the newly created cluster"
                }, 
                "password": {
                    "type": "string", 
                    "description": "The password of the newly created cluster"
                }
            }, 
            "description": "The username and password for the new Elasticsearch cluster, which is returned from the Elasticsearch cluster `create` command."
        }, 
        "KibanaPayload": {
            "required": [
                "elasticsearch_cluster_ref_id", 
                "plan", 
                "ref_id", 
                "region"
            ], 
            "type": "object", 
            "properties": {
                "elasticsearch_cluster_ref_id": {
                    "type": "string", 
                    "description": "Alias to the Elasticsearch Cluster to attach Kibana to"
                }, 
                "display_name": {
                    "type": "string", 
                    "description": "The human readable name for the Kibana cluster (default: takes the name of its Elasticsearch cluster)"
                }, 
                "settings": {
                    "description": "The settings for building this Kibana cluster", 
                    "$ref": "#/definitions/KibanaClusterSettings"
                }, 
                "region": {
                    "type": "string", 
                    "description": "The region where this resource exists"
                }, 
                "ref_id": {
                    "type": "string", 
                    "description": "A locally-unique user-specified id for Kibana"
                }, 
                "plan": {
                    "$ref": "#/definitions/KibanaClusterPlan"
                }
            }, 
            "description": "A Kibana creation request paired with the alias of the Elasticsearch cluster it should be paired with"
        }, 
        "AppSearchSubInfo": {
            "required": [
                "app_search_id", 
                "enabled"
            ], 
            "type": "object", 
            "properties": {
                "enabled": {
                    "type": "boolean", 
                    "description": "Whether the associated App Search is currently available"
                }, 
                "app_search_id": {
                    "type": "string", 
                    "description": "The App Search Id"
                }, 
                "links": {
                    "additionalProperties": {
                        "$ref": "#/definitions/Hyperlink"
                    }, 
                    "type": "object", 
                    "description": "A map of application-specific operations (which map to 'operationId's in the Swagger API) to metadata about that operation"
                }
            }, 
            "description": "Information about the APM Servers associated with the Elasticsearch cluster."
        }, 
        "QueryContainer": {
            "type": "object", 
            "properties": {
                "match_all": {
                    "$ref": "#/definitions/MatchAllQuery"
                }, 
                "exists": {
                    "$ref": "#/definitions/ExistsQuery"
                }, 
                "term": {
                    "additionalProperties": {
                        "$ref": "#/definitions/TermQuery"
                    }, 
                    "type": "object"
                }, 
                "nested": {
                    "$ref": "#/definitions/NestedQuery"
                }, 
                "prefix": {
                    "additionalProperties": {
                        "$ref": "#/definitions/PrefixQuery"
                    }, 
                    "type": "object"
                }, 
                "bool": {
                    "$ref": "#/definitions/BoolQuery"
                }, 
                "query_string": {
                    "$ref": "#/definitions/QueryStringQuery"
                }, 
                "range": {
                    "additionalProperties": {
                        "$ref": "#/definitions/RangeQuery"
                    }, 
                    "type": "object"
                }, 
                "match_none": {
                    "$ref": "#/definitions/MatchNoneQuery"
                }, 
                "match": {
                    "additionalProperties": {
                        "$ref": "#/definitions/MatchQuery"
                    }, 
                    "type": "object"
                }
            }, 
            "description": "The container for all of the allowed Elasticsearch queries. Specify only one property each time."
        }, 
        "AbsoluteRefId": {
            "required": [
                "deployment_id", 
                "ref_id"
            ], 
            "type": "object", 
            "properties": {
                "deployment_id": {
                    "type": "string", 
                    "description": "The deployment id"
                }, 
                "ref_id": {
                    "type": "string", 
                    "description": "The reference id of the resource in the given deployment"
                }
            }, 
            "description": "A reference to a specific resource of a deployment"
        }, 
        "InstanceConfigurationInfo": {
            "required": [
                "discrete_sizes", 
                "instance_type", 
                "name"
            ], 
            "type": "object", 
            "properties": {
                "discrete_sizes": {
                    "description": "Numerics representing possible instance sizes that the instance configuration supports.", 
                    "$ref": "#/definitions/DiscreteSizes"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Optional description for the instance configuration"
                }, 
                "node_types": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Node types (master, data) for the instance"
                }, 
                "storage_multiplier": {
                    "type": "number", 
                    "description": "Settings for the instance storage multiplier", 
                    "format": "double"
                }, 
                "instance_type": {
                    "type": "string", 
                    "description": "The type of instance (elasticsearch, kibana)"
                }, 
                "cpu_multiplier": {
                    "type": "number", 
                    "description": "Settings for the instance CPU multiplier", 
                    "format": "double"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique identifier for the instance configuration"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Display name for the instance configuration."
                }
            }, 
            "description": "The configuration template for Elasticsearch instances, Kibana instances, and APM Servers."
        }, 
        "DeploymentUpdateResponse": {
            "required": [
                "id", 
                "name", 
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "The name of the deployment"
                }, 
                "alias": {
                    "type": "string", 
                    "description": "A user-defined alias to use in place of ResourceIds for user-friendly resource URLs"
                }, 
                "diagnostics": {
                    "description": "Backend diagnostics. Sent if validation is requested.", 
                    "$ref": "#/definitions/DeploymentDiagnostics"
                }, 
                "shutdown_resources": {
                    "description": "List of resources that have been shut down", 
                    "$ref": "#/definitions/Orphaned"
                }, 
                "id": {
                    "type": "string", 
                    "description": "The id of the deployment"
                }, 
                "resources": {
                    "items": {
                        "$ref": "#/definitions/DeploymentResource"
                    }, 
                    "type": "array", 
                    "description": "List of resources that are part of the deployment after the update operation."
                }
            }, 
            "description": "A response returned from the Deployment update endpoint"
        }, 
        "TransientApmPlanConfiguration": {
            "type": "object", 
            "properties": {
                "plan_configuration": {
                    "$ref": "#/definitions/ApmPlanControlConfiguration"
                }, 
                "strategy": {
                    "$ref": "#/definitions/PlanStrategy"
                }
            }, 
            "description": "Defines the configuration parameters that control how the plan is applied. For example, the Elasticsearch cluster topology and APM Server settings."
        }, 
        "StackVersionConfig": {
            "required": [
                "elasticsearch", 
                "kibana", 
                "template", 
                "upgradable_to"
            ], 
            "type": "object", 
            "properties": {
                "accessible": {
                    "type": "boolean", 
                    "description": "Whether or not this version is accessible by the calling user. This is only relevant in EC (SaaS) and is not sent in ECE."
                }, 
                "min_upgradable_from": {
                    "type": "string", 
                    "example": "6.7.0", 
                    "description": "The minimum version recommended to upgrade this version."
                }, 
                "deleted": {
                    "readOnly": true, 
                    "type": "boolean", 
                    "description": "Identifies that the Elastic Stack version is marked for deletion"
                }, 
                "whitelisted": {
                    "type": "boolean", 
                    "description": "Whether or not this version is whitelisted. This is only relevant in EC (SaaS) and is not sent in ECE."
                }, 
                "kibana": {
                    "$ref": "#/definitions/StackVersionKibanaConfig"
                }, 
                "upgradable_to": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Stack Versions that this version can upgrade to"
                }, 
                "version": {
                    "readOnly": true, 
                    "type": "string", 
                    "description": "Stack version"
                }, 
                "elasticsearch": {
                    "$ref": "#/definitions/StackVersionElasticsearchConfig"
                }, 
                "template": {
                    "$ref": "#/definitions/StackVersionTemplateInfo"
                }, 
                "apm": {
                    "$ref": "#/definitions/StackVersionApmConfig"
                }, 
                "appsearch": {
                    "$ref": "#/definitions/StackVersionAppSearchConfig"
                }, 
                "metadata": {
                    "$ref": "#/definitions/StackVersionMetadata"
                }
            }, 
            "description": "The details for an Elastic Stack configuration."
        }, 
        "DeploymentMetadata": {
            "type": "object", 
            "properties": {
                "tags": {
                    "items": {
                        "$ref": "#/definitions/MetadataItem"
                    }, 
                    "type": "array", 
                    "description": "Arbitrary user-defined metadata associated with this deployment"
                }
            }, 
            "description": "Additional information about the current deployment object."
        }, 
        "ReadOnlyResponse": {
            "required": [
                "enabled"
            ], 
            "type": "object", 
            "properties": {
                "enabled": {
                    "type": "boolean", 
                    "description": "Whether read-only mode is enabled or disabled"
                }
            }, 
            "description": "Read-only mode response"
        }, 
        "ElasticsearchClusterTopologyElement": {
            "type": "object", 
            "properties": {
                "autoscaling_policy_override_json": {
                    "type": "object", 
                    "description": "An arbitrary JSON object overriding the default autoscaling policy. Don't set unless you really know what you are doing.", 
                    "properties": {}
                }, 
                "zone_count": {
                    "type": "integer", 
                    "description": "The default number of zones in which data nodes will be placed", 
                    "format": "int32"
                }, 
                "topology_element_control": {
                    "$ref": "#/definitions/TopologyElementControl"
                }, 
                "autoscaling_min": {
                    "description": "The minimum size of this topology element when autoscaling is enabled. This property is only supported, and must be provided, for ML topology elements.", 
                    "$ref": "#/definitions/TopologySize"
                }, 
                "node_type": {
                    "$ref": "#/definitions/ElasticsearchNodeType"
                }, 
                "elasticsearch": {
                    "$ref": "#/definitions/ElasticsearchConfiguration"
                }, 
                "autoscaling_max": {
                    "description": "The maximum size of this topology element when autoscaling is enabled. This property is only supported, and must be provided, for data and ML topology elements.", 
                    "$ref": "#/definitions/TopologySize"
                }, 
                "instance_configuration_id": {
                    "type": "string", 
                    "description": "Controls the allocation of this topology element as well as allowed sizes and node_types. It needs to match the id of an existing instance configuration."
                }, 
                "node_roles": {
                    "items": {
                        "enum": [
                            "master", 
                            "ingest", 
                            "ml", 
                            "data_hot", 
                            "data_content", 
                            "data_warm", 
                            "data_cold", 
                            "data_frozen", 
                            "remote_cluster_client", 
                            "transform"
                        ], 
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "The list of node roles for this topology element (ES version >= 7.10). Allowable values are: master, ingest, ml, data_hot, data_content, data_warm, data_cold, data_frozen, remote_cluster_client, transform"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique identifier of this topology element"
                }, 
                "size": {
                    "$ref": "#/definitions/TopologySize"
                }
            }, 
            "description": "The topology of the Elasticsearch nodes, including the number, capacity, and type of nodes, and where they can be allocated."
        }, 
        "DeploymentLoggingSettings": {
            "required": [
                "destination"
            ], 
            "type": "object", 
            "properties": {
                "destination": {
                    "description": "The destination deployment that this deployment's logs will be sent to", 
                    "$ref": "#/definitions/AbsoluteRefId"
                }
            }, 
            "description": "The logging settings for a deployment"
        }, 
        "ElasticsearchElasticUserPasswordResetResponse": {
            "required": [
                "password", 
                "username"
            ], 
            "type": "object", 
            "properties": {
                "username": {
                    "type": "string", 
                    "description": "The username for the newly-reset password for the given Elasticsearch cluster"
                }, 
                "password": {
                    "type": "string", 
                    "description": "The newly-reset password for the given Elasticsearch cluster"
                }
            }, 
            "description": "Envelope holding the newly-reset password for a cluster's user"
        }, 
        "RemoteResources": {
            "required": [
                "resources"
            ], 
            "type": "object", 
            "properties": {
                "resources": {
                    "items": {
                        "$ref": "#/definitions/RemoteResourceRef"
                    }, 
                    "type": "array", 
                    "description": "The remote resources"
                }
            }, 
            "description": "The list of resources used as remote clusters"
        }, 
        "DeploymentResources": {
            "required": [
                "apm", 
                "appsearch", 
                "elasticsearch", 
                "enterprise_search", 
                "kibana"
            ], 
            "type": "object", 
            "properties": {
                "appsearch": {
                    "items": {
                        "$ref": "#/definitions/AppSearchResourceInfo"
                    }, 
                    "type": "array", 
                    "description": "List of App Search resources in your Deployment"
                }, 
                "elasticsearch": {
                    "items": {
                        "$ref": "#/definitions/ElasticsearchResourceInfo"
                    }, 
                    "type": "array", 
                    "description": "List of Elasticsearch resources in your Deployment"
                }, 
                "enterprise_search": {
                    "items": {
                        "$ref": "#/definitions/EnterpriseSearchResourceInfo"
                    }, 
                    "type": "array", 
                    "description": "List of Enterprise Search resources in your Deployment"
                }, 
                "kibana": {
                    "items": {
                        "$ref": "#/definitions/KibanaResourceInfo"
                    }, 
                    "type": "array", 
                    "description": "List of Kibana resources in your Deployment"
                }, 
                "apm": {
                    "items": {
                        "$ref": "#/definitions/ApmResourceInfo"
                    }, 
                    "type": "array", 
                    "description": "List of Apm resources in your Deployment"
                }
            }, 
            "description": "Describes a resource belonging to a Deployment"
        }, 
        "StackVersionTemplateFileHash": {
            "required": [
                "hash", 
                "path"
            ], 
            "type": "object", 
            "properties": {
                "path": {
                    "type": "string", 
                    "description": "File path relative to template's root"
                }, 
                "hash": {
                    "type": "string", 
                    "description": "SHA-256 hash of a file"
                }
            }, 
            "description": "The template file hash for an Elastic Stack version."
        }, 
        "TransientEnterpriseSearchPlanConfiguration": {
            "type": "object", 
            "properties": {
                "plan_configuration": {
                    "$ref": "#/definitions/EnterpriseSearchPlanControlConfiguration"
                }, 
                "strategy": {
                    "$ref": "#/definitions/PlanStrategy"
                }
            }, 
            "description": "Defines configuration parameters that control how the plan (i.e. consisting of the cluster topology and Enterprise Search settings) is applied"
        }, 
        "ElasticsearchClusterSettings": {
            "type": "object", 
            "properties": {
                "monitoring": {
                    "$ref": "#/definitions/ManagedMonitoringSettings"
                }, 
                "curation": {
                    "$ref": "#/definitions/ClusterCurationSettings"
                }, 
                "ccs": {
                    "description": "DEPRECATED (Scheduled to be removed in the next major version): Configuration of remote clusters. Use the /remote-clusters endpoints instead", 
                    "$ref": "#/definitions/CrossClusterSearchSettings"
                }, 
                "ip_filtering": {
                    "description": "DEPRECATED (Scheduled to be removed in the next major version): The set of rulesets to apply for all the resources in this cluster. When specified the same rulesets will be applied to Kibana and APM clusters as well", 
                    "$ref": "#/definitions/IpFilteringSettings"
                }, 
                "snapshot": {
                    "$ref": "#/definitions/ClusterSnapshotSettings"
                }, 
                "traffic_filter": {
                    "description": "The rulesets to apply to all resources in this cluster. When specified the same rulesets will be applied to Kibana and APM clusters as well", 
                    "$ref": "#/definitions/TrafficFilterSettings"
                }, 
                "trust": {
                    "description": "Configuration of trust with other clusters", 
                    "$ref": "#/definitions/ElasticsearchClusterTrustSettings"
                }, 
                "dedicated_masters_threshold": {
                    "type": "integer", 
                    "description": "Threshold starting from which the number of instances in the cluster results in the introduction of dedicated masters. If the cluster is downscaled to a number of nodes below this one, dedicated masters will be removed. Limit is inclusive.", 
                    "format": "int32"
                }, 
                "metadata": {
                    "$ref": "#/definitions/ClusterMetadataSettings"
                }
            }, 
            "description": "The settings for an Elasticsearch cluster."
        }, 
        "ReplyWarning": {
            "required": [
                "code"
            ], 
            "type": "object", 
            "properties": {
                "message": {
                    "type": "string", 
                    "description": "A human readable message describing the warning that occurred"
                }, 
                "code": {
                    "type": "string", 
                    "description": "A structured code representing the error type that occurred"
                }
            }
        }, 
        "KibanaClusterPlan": {
            "required": [
                "kibana"
            ], 
            "type": "object", 
            "properties": {
                "cluster_topology": {
                    "items": {
                        "$ref": "#/definitions/KibanaClusterTopologyElement"
                    }, 
                    "type": "array"
                }, 
                "transient": {
                    "$ref": "#/definitions/TransientKibanaPlanConfiguration"
                }, 
                "kibana": {
                    "$ref": "#/definitions/KibanaConfiguration"
                }
            }, 
            "description": "The plan for the Kibana instance."
        }, 
        "AccountResponse": {
            "required": [
                "id"
            ], 
            "type": "object", 
            "properties": {
                "trust": {
                    "description": "Settings related to the level of trust of the clusters in this account", 
                    "$ref": "#/definitions/AccountTrustSettings"
                }, 
                "id": {
                    "type": "string", 
                    "description": "The account's identifier"
                }
            }, 
            "description": "An account is the entity that owns deployments, and it is accessed by users. Accounts are isolated from each other."
        }, 
        "OrphanedElasticsearch": {
            "required": [
                "dependents", 
                "id"
            ], 
            "type": "object", 
            "properties": {
                "dependents": {
                    "items": {
                        "$ref": "#/definitions/ElasticsearchDependant"
                    }, 
                    "type": "array", 
                    "description": "List of orphaned dependent resources"
                }, 
                "id": {
                    "type": "string", 
                    "description": "The id of the orphaned resource"
                }
            }, 
            "description": "Details about an orphaned Elasticsearch resources."
        }, 
        "EnterpriseSearchTopologyElement": {
            "type": "object", 
            "properties": {
                "node_count_per_zone": {
                    "type": "object", 
                    "properties": {}
                }, 
                "zone_count": {
                    "type": "integer", 
                    "description": "number of zones in which nodes will be placed", 
                    "format": "int32"
                }, 
                "node_configuration": {
                    "type": "string"
                }, 
                "memory_per_node": {
                    "type": "object", 
                    "properties": {}
                }, 
                "enterprise_search": {
                    "$ref": "#/definitions/EnterpriseSearchConfiguration"
                }, 
                "node_type": {
                    "description": "Defines the EnterpriseSearch node type", 
                    "$ref": "#/definitions/EnterpriseSearchNodeTypes"
                }, 
                "allocator_filter": {
                    "type": "object", 
                    "properties": {}
                }, 
                "instance_configuration_id": {
                    "type": "string", 
                    "description": "Controls the allocation of this topology element as well as allowed sizes and node_types. It needs to match the id of an existing instance configuration."
                }, 
                "size": {
                    "$ref": "#/definitions/TopologySize"
                }
            }, 
            "description": "Defines the topology of the Enterprise Search nodes (e.g. number/capacity of nodes, and where they can be allocated)"
        }, 
        "DeploymentCreateResources": {
            "type": "object", 
            "properties": {
                "appsearch": {
                    "items": {
                        "$ref": "#/definitions/AppSearchPayload"
                    }, 
                    "type": "array", 
                    "description": "A list of payloads for AppSearch creation."
                }, 
                "elasticsearch": {
                    "items": {
                        "$ref": "#/definitions/ElasticsearchPayload"
                    }, 
                    "type": "array", 
                    "description": "A list of payloads for Elasticsearch cluster creation."
                }, 
                "kibana": {
                    "items": {
                        "$ref": "#/definitions/KibanaPayload"
                    }, 
                    "type": "array", 
                    "description": "A list of payloads for Kibana creation."
                }, 
                "apm": {
                    "items": {
                        "$ref": "#/definitions/ApmPayload"
                    }, 
                    "type": "array", 
                    "description": "A list of payloads for APM creation."
                }
            }, 
            "description": "Describes the resources that will belong to a Deployment"
        }, 
        "ElasticsearchShardElement": {
            "required": [
                "instance_name", 
                "shard_count"
            ], 
            "type": "object", 
            "properties": {
                "instance_name": {
                    "type": "string", 
                    "description": "The Elastic Cloud name/id of the instance (container)"
                }, 
                "shard_count": {
                    "type": "integer", 
                    "description": "The number of shards of the given type (available/unavailable) on this instance", 
                    "format": "int32"
                }
            }, 
            "description": "Information about the shards for each Elasticsearch instance container that hosts an Elasticsearch node. TIP: When the shard is unavailable, the cluster is unable to serve all of the data."
        }, 
        "ElasticsearchSystemSettings": {
            "type": "object", 
            "properties": {
                "reindex_whitelist": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Limits remote Elasticsearch clusters that can be used as the source for '_reindex' API commands"
                }, 
                "default_shards_per_index": {
                    "type": "integer", 
                    "description": "(2.x only - to get the same result in 5.x template mappings must be used) Sets the default number of shards per index, defaulting to 1 if not specified. (Corresponds to the parameter 'index.number_of_shards' in 2.x, not supported in 5.x)", 
                    "format": "int32"
                }, 
                "monitoring_history_duration": {
                    "type": "string", 
                    "description": "The duration for which monitoring history is stored (format '(NUMBER)d' eg '3d' for 3 days). NOTES: ('Corresponds to the parameter xpack.monitoring.history.duration' in 5.x, defaults to '7d')"
                }, 
                "monitoring_collection_interval": {
                    "type": "integer", 
                    "description": "The default interval at which monitoring information from the cluster if collected, if monitoring is enabled. NOTES: (Corresponds to the parameter 'marvel.agent.interval' in 2.x and 'xpack.monitoring.collection.interval' in 5.x)", 
                    "format": "int32"
                }, 
                "destructive_requires_name": {
                    "type": "boolean", 
                    "description": "If true (default is false) then the index deletion API will not support wildcards or '_all'. NOTES: (Corresponds to the parameter 'action.destructive_requires_name')"
                }, 
                "auto_create_index": {
                    "type": "boolean", 
                    "description": "If true (the default), then any write operation on an index that does not currently exist will create it. NOTES: (Corresponds to the parameter 'action.auto_create_index')"
                }, 
                "watcher_trigger_engine": {
                    "type": "string", 
                    "description": "The trigger engine for Watcher, defaults to 'scheduler' - see the xpack documentation for more information. NOTES: (Corresponds to the parameter '(xpack.)watcher.trigger.schedule.engine', depending on version. Ignored from 6.x onwards.)"
                }, 
                "use_disk_threshold": {
                    "type": "boolean", 
                    "description": "Whether to factor in the available disk space on a node before deciding whether to allocate new shards to that node or actively relocate shards away from the node (default: true). NOTES: (Corresponds to the parameter 'cluster.routing.allocation.disk.threshold_enabled')"
                }, 
                "scripting": {
                    "$ref": "#/definitions/ElasticsearchScriptingUserSettings"
                }, 
                "enable_close_index": {
                    "type": "boolean", 
                    "description": "Defaults to false on versions <= 7.2.0, true otherwise. If false, then the API commands to close indices are disabled. This is important because Elasticsearch does not snapshot or migrate close indices on versions under 7.2.0, therefore standard Elastic Cloud configuration operations will cause irretrievable loss of indices' data. NOTES: (Corresponds to the parameter 'cluster.indices.close.enable')"
                }
            }, 
            "description": "A subset of Elasticsearch settings. TIP: To define the complete set of Elasticsearch settings, use `ElasticsearchSystemSettings` with `user_settings_override*` and `user_settings*`."
        }, 
        "ElasticsearchUserBundle": {
            "required": [
                "elasticsearch_version", 
                "name", 
                "url"
            ], 
            "type": "object", 
            "properties": {
                "url": {
                    "type": "string", 
                    "description": "The URL of the bundle, which must be accessible from the ECE infrastructure. This URL could be cached by platform, make sure to change it when updating the bundle"
                }, 
                "name": {
                    "type": "string", 
                    "description": "The name of the bundle"
                }, 
                "elasticsearch_version": {
                    "type": "string", 
                    "description": "The supported Elasticsearch version (must match the version in the plan)"
                }
            }, 
            "description": "A list of admin-uploaded bundle objects, such as scripts and synonym files."
        }, 
        "BasicFailedReply": {
            "required": [
                "errors"
            ], 
            "type": "object", 
            "properties": {
                "errors": {
                    "items": {
                        "$ref": "#/definitions/BasicFailedReplyElement"
                    }, 
                    "type": "array", 
                    "description": "A list of errors that occurred in the failing request"
                }
            }
        }, 
        "KibanaSystemSettings": {
            "type": "object", 
            "properties": {
                "elasticsearch_password": {
                    "type": "string", 
                    "description": "Optionally override the account within Elasticsearch - defaults to a system account that always exists (if specified, the username must also be specified)"
                }, 
                "elasticsearch_username": {
                    "type": "string", 
                    "description": "Optionally override the account within Elasticsearch - defaults to a system account that always exists (if specified, the password must also be specified)"
                }, 
                "elasticsearch_url": {
                    "type": "string", 
                    "description": "Optionally override the URL to which to send data (for advanced users only, if unspecified the system selects an internal URL)"
                }
            }, 
            "description": "A subset of Kibana settings. TIP: To define the complete set of Elasticsearch settings, use `KibanaSystemSettings` with `user_settings_override_` and `user_settings_`."
        }, 
        "DeploymentMetricsSettings": {
            "required": [
                "destination"
            ], 
            "type": "object", 
            "properties": {
                "destination": {
                    "description": "The destination deployment that this deployment's metrics will be sent to", 
                    "$ref": "#/definitions/AbsoluteRefId"
                }
            }, 
            "description": "The metrics settings for a deployment"
        }, 
        "ApmPlanControlConfiguration": {
            "type": "object", 
            "properties": {
                "cluster_reboot": {
                    "enum": [
                        "forced"
                    ], 
                    "type": "string", 
                    "description": "Set to 'forced' to force a reboot as part of the upgrade plan"
                }, 
                "extended_maintenance": {
                    "type": "boolean", 
                    "description": "If true (default false), does not clear the maintenance flag (which prevents its API from being accessed except by the constructor) on new instances added until after a snapshot has been restored, otherwise, the maintenance flag is cleared once the new instances successfully join the new cluster"
                }, 
                "calm_wait_time": {
                    "type": "integer", 
                    "description": "This timeout determines how long to give a cluster after it responds to API calls before performing actual operations on it. It defaults to 5s", 
                    "format": "int64"
                }, 
                "timeout": {
                    "type": "integer", 
                    "description": "The total timeout in seconds after which the plan is cancelled even if it is not complete. Defaults to 4x the max memory capacity per node (in MB)", 
                    "format": "int64"
                }
            }, 
            "description": "The plan control configuration options for the APM Server."
        }, 
        "DeploymentResourceCrudResponse": {
            "required": [
                "id", 
                "kind", 
                "ref_id"
            ], 
            "type": "object", 
            "properties": {
                "kind": {
                    "type": "string", 
                    "description": "The kind of the stateless resource"
                }, 
                "id": {
                    "type": "string", 
                    "description": "The id of the deployment"
                }, 
                "ref_id": {
                    "type": "string", 
                    "description": "The reference id of the resource"
                }
            }, 
            "description": "A response returned from the Deployment Resource endpoints"
        }, 
        "ElasticsearchClusterBlockingIssueElement": {
            "required": [
                "description", 
                "instances"
            ], 
            "type": "object", 
            "properties": {
                "instances": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "A list of instances that are affected by the issue"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Description of the issue"
                }
            }, 
            "description": "Information about an issue and the Elasticsearch instance it affects."
        }, 
        "Elasticsearch": {
            "required": [
                "backend_plan", 
                "display_name", 
                "ref_id"
            ], 
            "type": "object", 
            "properties": {
                "backend_plan": {
                    "type": "object", 
                    "description": "The backend plan as JSON", 
                    "properties": {}
                }, 
                "display_name": {
                    "type": "string", 
                    "description": "The human readable name for the cluster (defaults to the generated cluster id if not specified)"
                }, 
                "ref_id": {
                    "type": "string", 
                    "description": "A locally-unique user-specified id"
                }
            }, 
            "description": "Holds diagnostics for an Elasticsearch cluster"
        }, 
        "AccountTrustSettings": {
            "required": [
                "trust_all"
            ], 
            "type": "object", 
            "properties": {
                "trust_all": {
                    "type": "boolean", 
                    "description": "If true, all clusters in this account will by default trust all other clusters in the same account"
                }
            }, 
            "description": "Settings related to the level of trust of the clusters in this account"
        }, 
        "ClusterInstanceDiskInfo": {
            "required": [
                "disk_space_used", 
                "storage_multiplier"
            ], 
            "type": "object", 
            "properties": {
                "disk_space_available": {
                    "type": "integer", 
                    "description": "If known, the amount of total disk space available to the container in MB", 
                    "format": "int64"
                }, 
                "storage_multiplier": {
                    "type": "number", 
                    "description": "The storage multiplier originally defined to calculate disk space.", 
                    "format": "double"
                }, 
                "disk_space_used": {
                    "type": "integer", 
                    "description": "The amount of disk space being used by the service in MB", 
                    "format": "int64"
                }
            }, 
            "description": "Information about the use and storage capacity of a Kibana instance or APM Server."
        }, 
        "DeploymentLogging": {
            "required": [
                "healthy"
            ], 
            "type": "object", 
            "properties": {
                "healthy": {
                    "type": "boolean", 
                    "description": "Whether the deployment logging is healthy or not"
                }, 
                "issues": {
                    "items": {
                        "$ref": "#/definitions/ObservabilityIssue"
                    }, 
                    "type": "array", 
                    "description": "Logging health issues for the deployment"
                }, 
                "urls": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object", 
                    "description": "The URLs to view this deployment's logs in Kibana"
                }
            }, 
            "description": "Logging information for a deployment"
        }, 
        "RollingStrategyConfig": {
            "type": "object", 
            "properties": {
                "skip_synced_flush": {
                    "type": "boolean", 
                    "description": "Whether to skip attempting to do a synced flush on the filesystem of the container (default: false), which is less safe but may be required if the container is unhealthy"
                }, 
                "allow_inline_resize": {
                    "type": "boolean", 
                    "description": "Whether we allow changing the capacity of instances (default false). This is currently implemented by stopping, re-creating then starting the affected instance on its associated allocator when performing the changes. NOTES: This requires a round-trip through the allocation infrastructure of the active constructor, as it has to reserve the target capacity without over-committing"
                }, 
                "group_by": {
                    "type": "string", 
                    "description": "Specifies the grouping attribute to use when rolling several instances. Instances that share the same value for the provided attribute key are rolled together as a unit. Examples that make sense to use are '\\_\\_all\\_\\_' (roll all instances as a single unit), 'logical_zone_name' (roll instances by zone), '\\_\\_name\\_\\_' (roll one instance at a time, the default if not specified). Note that '\\_\\_all\\_\\_' is required when performing a major version upgrade"
                }, 
                "shard_init_wait_time": {
                    "type": "integer", 
                    "description": "The time, in seconds, to wait for shards that show no progress of initializing before rolling the next group (default: 10 minutes)", 
                    "format": "int64"
                }
            }, 
            "description": "Performs inline, rolling configuration changes that mutate existing containers. TIP: This is the fastest way to update a plan, but can fail for complex plan changes, such as topology changes. Also, this is less safe for configuration changes that leave a cluster in a non running state. NOTE: When you perform a major version upgrade, and 'group_by' is set to 'pass:macros[__all__]';, rolling is required."
        }, 
        "MetadataItem": {
            "required": [
                "key", 
                "value"
            ], 
            "type": "object", 
            "properties": {
                "value": {
                    "type": "string", 
                    "description": "The metadata value"
                }, 
                "key": {
                    "type": "string", 
                    "description": "The metadata field name"
                }
            }, 
            "description": "The key-value pair."
        }, 
        "TrafficFilterRulesetRequest": {
            "required": [
                "include_by_default", 
                "name", 
                "region", 
                "rules", 
                "type"
            ], 
            "type": "object", 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "Name of the ruleset"
                }, 
                "rules": {
                    "items": {
                        "$ref": "#/definitions/TrafficFilterRule"
                    }, 
                    "type": "array", 
                    "description": "List of rules"
                }, 
                "region": {
                    "type": "string", 
                    "description": "The ruleset can be attached only to deployments in the specific region"
                }, 
                "include_by_default": {
                    "type": "boolean", 
                    "description": "Should the ruleset be automatically included in the new deployments"
                }, 
                "type": {
                    "type": "string", 
                    "description": "Type of the ruleset"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Description of the ruleset"
                }
            }, 
            "description": "The specification for traffic filter ruleset."
        }, 
        "MatchAllQuery": {
            "type": "object", 
            "description": "A query that matches all documents."
        }, 
        "TrafficFilterRule": {
            "type": "object", 
            "properties": {
                "azure_endpoint_name": {
                    "type": "string", 
                    "description": "Name of the Azure Private Endpoint to allow connections from"
                }, 
                "source": {
                    "type": "string", 
                    "description": "Allowed traffic filter source: IP address, CIDR mask, or VPC endpoint ID"
                }, 
                "azure_endpoint_guid": {
                    "type": "string", 
                    "description": "Resource GUID of the Azure Private Endpoint to allow connections from"
                }, 
                "id": {
                    "type": "string", 
                    "description": "The rule ID"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Description of the rule"
                }
            }, 
            "description": "The container for an IP filter rule."
        }, 
        "AppSearchPlan": {
            "required": [
                "appsearch"
            ], 
            "type": "object", 
            "properties": {
                "appsearch": {
                    "$ref": "#/definitions/AppSearchConfiguration"
                }, 
                "cluster_topology": {
                    "items": {
                        "$ref": "#/definitions/AppSearchTopologyElement"
                    }, 
                    "type": "array"
                }, 
                "transient": {
                    "$ref": "#/definitions/TransientAppSearchPlanConfiguration"
                }
            }, 
            "description": "The plan for the App Search cluster."
        }, 
        "RangeQuery": {
            "type": "object", 
            "properties": {
                "gt": {
                    "type": "object", 
                    "description": "Greater-than", 
                    "properties": {}
                }, 
                "gte": {
                    "type": "object", 
                    "description": "Greater-than or equal to", 
                    "properties": {}
                }, 
                "format": {
                    "type": "string", 
                    "description": "Formatted dates will be parsed using the format specified on the date field by default, but it can be overridden by passing the format parameter."
                }, 
                "time_zone": {
                    "type": "string", 
                    "description": "Dates can be converted from another timezone to UTC either by specifying the time zone in the date value itself (if the format accepts it), or it can be specified as the time_zone parameter."
                }, 
                "lt": {
                    "type": "object", 
                    "description": "Less-than", 
                    "properties": {}
                }, 
                "lte": {
                    "type": "object", 
                    "description": "Less-than or equal to.", 
                    "properties": {}
                }, 
                "boost": {
                    "type": "number", 
                    "description": "An optional boost value to apply to the query.", 
                    "format": "float"
                }
            }, 
            "description": "The query that matches documents with fields that contain terms within a specified range."
        }, 
        "ClusterInstanceConfigurationInfo": {
            "required": [
                "id", 
                "name", 
                "resource"
            ], 
            "type": "object", 
            "properties": {
                "resource": {
                    "enum": [
                        "memory", 
                        "storage"
                    ], 
                    "type": "string", 
                    "description": "The resource type of the instance configuration"
                }, 
                "id": {
                    "type": "string", 
                    "description": "The id of the configuration used to create the instance"
                }, 
                "name": {
                    "type": "string", 
                    "description": "The name of the configuration used to create the instance"
                }
            }, 
            "description": "Information about a configuration that creates a Kibana instance or APM Server."
        }, 
        "StackVersionElasticsearchConfig": {
            "required": [
                "blacklist", 
                "default_plugins", 
                "docker_image", 
                "plugins"
            ], 
            "type": "object", 
            "properties": {
                "settings": {
                    "type": "object", 
                    "description": "Settings that are applied to all nodes of this type", 
                    "properties": {}
                }, 
                "node_types": {
                    "items": {
                        "$ref": "#/definitions/StackVersionNodeType"
                    }, 
                    "type": "array", 
                    "description": "Node types that are supported by this stack version"
                }, 
                "blacklist": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of configuration options that cannot be overridden by user settings"
                }, 
                "plugins": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of available plugins"
                }, 
                "capacity_constraints": {
                    "$ref": "#/definitions/StackVersionInstanceCapacityConstraint"
                }, 
                "compatible_node_types": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "Node types that are compatible with this one"
                }, 
                "default_plugins": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array", 
                    "description": "List of default plugins"
                }, 
                "docker_image": {
                    "type": "string", 
                    "description": "Docker image for the Elasticsearch"
                }
            }, 
            "description": "The Elasticsearch configuration for an Elastic Stack version. "
        }, 
        "ApmSystemSettings": {
            "type": "object", 
            "properties": {
                "elasticsearch_url": {
                    "type": "string", 
                    "description": "Optionally override the URL to which to send data (for advanced users only, if unspecified the system selects an internal URL)"
                }, 
                "secret_token": {
                    "type": "string", 
                    "description": "Optionally override the secret token within APM - defaults to the previously existing secretToken"
                }, 
                "elasticsearch_password": {
                    "type": "string", 
                    "description": "Optionally override the account within APM - defaults to a system account that always exists (if specified, the username must also be specified)"
                }, 
                "debug_enabled": {
                    "type": "boolean", 
                    "description": "Optionally enable debug mode for APM servers - defaults false"
                }, 
                "kibana_url": {
                    "type": "string", 
                    "description": "Optionally override the URL to which to send data (for advanced users only, if unspecified the system selects an internal URL)"
                }, 
                "elasticsearch_username": {
                    "type": "string", 
                    "description": "Optionally override the account within APM - defaults to a system account that always exists (if specified, the password must also be specified)"
                }
            }, 
            "description": "A structure that defines a curated subset of the APM Server settings. \nTIP: To define the complete set of APM Server setting, use `ApmSystemSettings` with `user_settings_override_` and `user_settings_`."
        }, 
        "ClusterInstanceMemoryInfo": {
            "required": [
                "instance_capacity"
            ], 
            "type": "object", 
            "properties": {
                "instance_capacity": {
                    "type": "integer", 
                    "description": "The memory capacity in MB of the instance", 
                    "format": "int32"
                }, 
                "memory_pressure": {
                    "type": "integer", 
                    "description": "The % memory pressure of the service if available (60-75% consider increasing capacity, >75% can incur significant performance and stability issues)", 
                    "format": "int32"
                }, 
                "instance_capacity_planned": {
                    "type": "integer", 
                    "description": "The planned memory capacity in MB of the instance (only shown when an override is present)", 
                    "format": "int32"
                }, 
                "native_memory_pressure": {
                    "type": "integer", 
                    "description": "The % native memory pressure of the service if available", 
                    "format": "int32"
                }
            }, 
            "description": "Information about the memory capacity and use of the Kibana instance or APM Server."
        }, 
        "ExternalHyperlink": {
            "required": [
                "id", 
                "label"
            ], 
            "type": "object", 
            "properties": {
                "uri": {
                    "type": "string", 
                    "description": "hyperlink to an external resource"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Identifier of the external link"
                }, 
                "label": {
                    "type": "string", 
                    "description": "Human-readable description of the external link"
                }
            }
        }, 
        "CreateApiKeyRequest": {
            "required": [
                "description"
            ], 
            "type": "object", 
            "properties": {
                "description": {
                    "type": "string", 
                    "description": "API key description. Useful if there are multiple keys"
                }, 
                "authentication_token": {
                    "type": "string", 
                    "description": "Deprecated. The security token from reauthenticate API"
                }
            }, 
            "description": "The request payload that creates the API keys."
        }
    }, 
    "security": [
        {
            "apiKey": []
        }
    ], 
    "swagger": "2.0"
}